"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PagerPageSizesVue2 = exports.PagerPageSizes = void 0; // @ts-ignore

var Vue = require("vue");

var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';
var inject = allVue.inject;

var messages_1 = require("./../messages");

var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");

var kendo_vue_dropdowns_1 = require("@progress/kendo-vue-dropdowns");
/**
 * @hidden
 */


var PagerPageSizesVue2 = {
  name: 'KendoPagerPageSizes',
  props: {
    pageSize: Number,
    pageSizes: Array,
    messagesMap: Function
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  methods: {
    pageSizeChange: function pageSizeChange(e) {
      this.$emit('pagechange', {
        skip: 0,
        take: parseInt(e.target.value, 10)
      }, e);
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    var kendoLocalizationService = inject('kendoLocalizationService', {});
    return {
      v3: v3,
      kendoLocalizationService: kendoLocalizationService
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;

    var h = gh || createElement;
    var sizes = this.$props.pageSizes.slice();

    if (sizes.filter(function (s) {
      return s === _this.$props.pageSize;
    }).length === 0) {
      sizes.unshift(this.$props.pageSize);
    }

    var itemPerPageMessage = this.$props.messagesMap ? this.$props.messagesMap(messages_1.pagerItemPerPage) : {
      messageKey: messages_1.pagerItemPerPage,
      defaultMessage: messages_1.messages[messages_1.pagerItemPerPage]
    };
    return h("span", {
      "class": "k-pager-sizes k-label"
    }, [// @ts-ignore function children
    h(kendo_vue_dropdowns_1.DropDownList, {
      value: this.$props.pageSize,
      attrs: this.v3 ? undefined : {
        value: this.$props.pageSize,
        dataItems: sizes
      },
      dataItems: sizes,
      onChange: this.pageSizeChange,
      on: this.v3 ? undefined : {
        "change": this.pageSizeChange
      }
    }), kendo_vue_intl_1.provideLocalizationService(this).toLanguageString(itemPerPageMessage.messageKey, itemPerPageMessage.defaultMessage)]);
  }
};
exports.PagerPageSizesVue2 = PagerPageSizesVue2;
/**
 * @hidden
 */

var PagerPageSizes = PagerPageSizesVue2;
exports.PagerPageSizes = PagerPageSizes;