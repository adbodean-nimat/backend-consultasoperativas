import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
import { GridPagerSettings } from './GridPagerSettings';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * Represents the object of the `onPageChange` event.
 */
export interface PageChangeEvent {
    /**
     * An event target.
     */
    target: any;
    /**
     * A native DOM event.
     */
    event: any;
    /**
     * The number of records that will be skipped.
     */
    skip: number;
    /**
     * The number of records that will be taken.
     */
    take: number;
}
export interface PagerProps extends GridPagerSettings {
    total: number;
    skip: number;
    take: number;
    pageSize: number;
    settings?: GridPagerSettings | boolean;
    responsive?: boolean;
    pagerRender?: any;
    width?: number | string;
    /**
     * A map with the messages.
     */
    messagesMap?: (messageKey: string) => ({
        messageKey: string;
        defaultMessage: string;
    });
    /**
     * The event that is emited when the page size is changed.
     */
    onPagesizechange?: (event: any) => any;
    /**
     * The event that is emited when the page is changed.
     */
    onPagechange?: (event: any) => any;
}
/**
 * @hidden
 */
export interface PagerEmits {
    pagechange?: (event: any) => any;
}
/**
 * @hidden
 */
export interface PagerMethods {
    [key: string]: any;
    changePage: (page: number, e: any) => void;
    triggerPageChange: (e: any) => void;
    onWindowResize: () => void;
    transformDimesion: (initialValue: string | number | undefined) => string;
}
/**
 * @hidden
 */
export interface PagerComputed {
    [key: string]: any;
    totalPages: number;
    currentPage: number;
    currentTake: number;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface PagerData {
    size: string;
}
/**
 * @hidden
 */
export interface PagerAll extends PagerMethods, PagerComputed, PagerProps, PagerData, Vue2type {
}
/**
 * @hidden
 */
declare let PagerVue2: ComponentOptions<Vue2type, DefaultData<PagerData>, DefaultMethods<PagerAll>, PagerComputed, RecordPropsDefinition<PagerProps>>;
/**
 * @hidden
 */
declare const Pager: DefineComponent<PagerProps, any, PagerData, PagerComputed, PagerMethods, {}, {}, {}, string, PagerProps, PagerProps, {}>;
export { Pager, PagerVue2 };
