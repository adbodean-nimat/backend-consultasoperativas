"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListFilterVue2 = exports.ListFilter = void 0; // @ts-ignore

var Vue = require("vue");

var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';
var ref = allVue.ref;

var kendo_vue_common_1 = require("@progress/kendo-vue-common");

var sizeMap = kendo_vue_common_1.kendoThemeMaps.sizeMap,
    roundedMap = kendo_vue_common_1.kendoThemeMaps.roundedMap;
/**
 * @hidden
 */

var ListFilterVue2 = {
  name: 'list-filter',
  // @ts-ignore
  emits: {
    keydown: null,
    change: null
  },
  props: {
    value: String,
    rounded: {
      type: String,
      default: 'medium',
      validator: function validator(value) {
        return ['small', 'medium', 'large', 'full'].includes(value);
      }
    },
    fillMode: {
      type: String,
      default: 'solid',
      validator: function validator(value) {
        return ['solid', 'flat', 'outline'].includes(value);
      }
    },
    size: {
      type: String,
      default: 'medium',
      validator: function validator(value) {
        return ['small', 'medium', 'large'].includes(value);
      }
    }
  },
  computed: {
    spanClass: function spanClass() {
      var _a;

      var _b = this.$props,
          size = _b.size,
          rounded = _b.rounded,
          fillMode = _b.fillMode;
      return _a = {
        'k-searchbox k-input': true
      }, _a["k-input-" + (sizeMap[size] || size)] = size, _a["k-rounded-" + (roundedMap[rounded] || rounded)] = rounded, _a["k-input-" + fillMode] = fillMode, _a;
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    var inputRef = ref(null);
    return {
      v3: v3,
      inputRef: inputRef
    };
  },
  methods: {
    onKeyDown: function onKeyDown(e) {
      this.$emit('keydown', e);
    },
    onChange: function onChange(e) {
      this.$emit('change', e);
    }
  },
  mounted: function mounted() {
    this.input = kendo_vue_common_1.getRef(this, 'input');
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    return h("span", {
      "class": "k-list-filter"
    }, [h("span", {
      "class": this.spanClass
    }, [h("span", {
      "class": "k-input-icon k-icon k-i-search"
    }), h("input", {
      ref: kendo_vue_common_1.setRef(this, 'input'),
      type: "text",
      attrs: this.v3 ? undefined : {
        type: "text"
      },
      value: this.v3 ? this.$props.value || '' : null,
      domProps: this.v3 ? undefined : {
        "value": this.$props.value || ''
      },
      "class": "k-input-inner",
      onInput: this.onChange,
      on: this.v3 ? undefined : {
        "input": this.onChange,
        "keydown": this.onKeyDown
      },
      onKeydown: this.onKeyDown
    })])]);
  }
};
exports.ListFilterVue2 = ListFilterVue2;
/**
 * @hidden
 */

var ListFilter = ListFilterVue2;
exports.ListFilter = ListFilter;