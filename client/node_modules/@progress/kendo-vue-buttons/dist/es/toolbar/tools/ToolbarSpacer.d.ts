import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
declare let ToolbarSpacerVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<{}>, {}, RecordPropsDefinition<{}>>;
/**
 * Represents the [Kendo UI for Vue ToolbarSpacer component]({% slug overview_toolbar %}).  A spacer element for the sub-elements of the Toolbar.
 *
 *  ```jsx
 *  <template>
 *    <Toolbar>
 *    <ToolbarItem>
 *      <ButtonGroup>
 *        <Button :icon="'bold'" :title="'Bold'" :togglable="true" />
 *        <Button :icon="'italic'" :title="'Italic'" :togglable="true" />
 *        <Button :icon="'underline'" :title="'Underline'" :togglable="true" />
 *      </ButtonGroup>
 *    </ToolbarItem>
 *    <ToolbarSpacer />
 *    <ToolbarItem>
 *      <SplitButton :text="'Insert'" :items="splitItems"> </SplitButton>
 *    </ToolbarItem>
 *    <ToolbarSeparator />
 *    <ToolbarItem>
 *      <Button :icon="'cut'" :title="'Cut'"> Cut </Button>
 *    </ToolbarItem>
 *  </Toolbar>
 *  </template>
 *  ```
 */
declare const ToolbarSpacer: DefineComponent<{}, any, {}, {}, {}, {}, {}, {}, string, {}, {}, {}>;
export { ToolbarSpacer, ToolbarSpacerVue2 };
