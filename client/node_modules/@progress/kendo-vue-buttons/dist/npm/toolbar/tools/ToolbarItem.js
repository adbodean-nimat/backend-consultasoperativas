"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToolbarItemVue2 = exports.ToolbarItem = void 0; // @ts-ignore

var Vue = require("vue");

var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';

var kendo_vue_common_1 = require("@progress/kendo-vue-common");
/**
 * @hidden
 */


var ToolbarItemVue2 = {
  name: 'KendoToolbarItem',
  methods: {
    element: function element() {
      return this.$el;
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = kendo_vue_common_1.getDefaultSlots(this);
    return h("span", [defaultSlot]);
  }
};
exports.ToolbarItemVue2 = ToolbarItemVue2;
/**
 * Represents the [Kendo UI for Vue ToolbarItem component]({% slug overview_toolbar %}).  A container component for the sub-elements of the Toolbar.
 *
 *  ```jsx
 *  <template>
 *    <Toolbar>
 *    <ToolbarItem>
 *      <ButtonGroup>
 *        <Button :icon="'bold'" :title="'Bold'" :togglable="true" />
 *        <Button :icon="'italic'" :title="'Italic'" :togglable="true" />
 *        <Button :icon="'underline'" :title="'Underline'" :togglable="true" />
 *      </ButtonGroup>
 *    </ToolbarItem>
 *    <ToolbarSpacer />
 *    <ToolbarItem>
 *      <SplitButton :text="'Insert'" :items="splitItems"> </SplitButton>
 *    </ToolbarItem>
 *    <ToolbarSeparator />
 *    <ToolbarItem>
 *      <Button :icon="'cut'" :title="'Cut'"> Cut </Button>
 *    </ToolbarItem>
 *  </Toolbar>
 *  </template>
 *  ```
 */

var ToolbarItem = ToolbarItemVue2;
exports.ToolbarItem = ToolbarItem;