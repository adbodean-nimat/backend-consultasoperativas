// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';
import { Popup } from '@progress/kendo-vue-popup';
import { classNames, getDefaultSlots } from '@progress/kendo-vue-common';
/**
 * @hidden
 */

var ANCHOR_VERTICAL_ALIGN = 'bottom';
/**
 * @hidden
 */

var POPUP_VERTICAL_ALIGN = 'top';
/**
 * @hidden
 */

var PickerVue2 = {
  name: 'KendoPicker',
  props: {
    popupSettings: Object,
    dir: String,
    open: Boolean,
    popupAnchor: String
  },
  computed: {
    horizontalAlign: function horizontalAlign() {
      return this.$props.dir === 'rtl' ? 'right' : 'left';
    },
    anchorAlign: function anchorAlign() {
      return {
        horizontal: this.horizontalAlign,
        vertical: ANCHOR_VERTICAL_ALIGN
      };
    },
    popupAlign: function popupAlign() {
      return {
        horizontal: this.horizontalAlign,
        vertical: POPUP_VERTICAL_ALIGN
      };
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = getDefaultSlots(this);
    var popupSettings = this.$props.popupSettings || {};
    return (// @ts-ignore function children
      h(Popup // style={{
      //           ...(popupSettings || {}).style,
      //           direction: this.$props.dir as any
      //       }}
      //       {...popupSettings}
      , {
        anchor: this.$props.popupAnchor,
        attrs: this.v3 ? undefined : {
          anchor: this.$props.popupAnchor,
          anchorAlign: this.anchorAlign,
          popupAlign: this.popupAlign,
          show: this.$props.open
        },
        anchorAlign: this.anchorAlign,
        popupAlign: this.popupAlign,
        show: this.$props.open,
        onOpen: this.onOpen,
        on: this.v3 ? undefined : {
          "open": this.onOpen,
          "close": this.onClose
        },
        onClose: this.onClose,
        "class": classNames('k-reset', popupSettings.className)
      }, this.v3 ? function () {
        return [defaultSlot];
      } : [defaultSlot])
    );
  },
  methods: {
    onOpen: function onOpen() {
      this.$emit('open');
    },
    onClose: function onClose() {
      this.$emit('close');
    }
  }
};
/**
 * @hidden
 */

var Picker = PickerVue2;
export { Picker, PickerVue2 };