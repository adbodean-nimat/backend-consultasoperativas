// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';
import { validatePackage, isObject } from '@progress/kendo-vue-common';
import { packageMetadata } from '../package-metadata';
/**
 * @hidden
 */

var SkeletonVue2 = {
  name: 'KendoSkeleton',
  props: {
    animation: {
      type: [Object, Boolean],
      default: function _default() {
        return {
          type: 'pulse'
        };
      },
      validator: function validator(value) {
        return ['wave', 'pulse'].includes(value.type);
      }
    },
    shape: {
      type: String,
      default: 'text',
      validator: function validator(value) {
        return ['circle', 'rectangle', 'text'].includes(value);
      }
    }
  },
  created: function created() {
    validatePackage(packageMetadata);
  },
  computed: {
    skeletonClasses: function skeletonClasses() {
      return {
        'k-skeleton': true,
        'k-skeleton-circle': this.shape === 'circle',
        'k-skeleton-rectangle': this.shape === 'rectangle',
        'k-skeleton-text': this.shape === 'text',
        'k-skeleton-pulse': isObject(this.animation) && this.animation.type === 'pulse',
        'k-skeleton-wave': isObject(this.animation) && this.animation.type === 'wave' || this.animation === true
      };
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    return h("span", {
      "class": this.skeletonClasses
    });
  }
};
/**
 * @hidden
 */

var Skeleton = SkeletonVue2;
export { Skeleton, SkeletonVue2 };