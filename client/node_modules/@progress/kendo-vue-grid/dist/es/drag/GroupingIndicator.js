// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';
var ref = allVue.ref;
import { Draggable, getRef, setRef } from '@progress/kendo-vue-common';
/**
 * @hidden
 */

var GroupingIndicatorVue2 = {
  props: {
    title: String,
    dir: String // 'asc' | 'desc';

  },
  mounted: function mounted() {
    this.element = getRef(this, 'indicatorContainer');

    if (this.element) {
      this.draggable = this.$refs.draggable;
    }
  },
  methods: {
    press: function press(event) {
      if (this.element) {
        this.$emit('press', event, this.element);
      }
    },
    drag: function drag(event) {
      if (this.element) {
        this.$emit('drag', event, this.element);
      }
    },
    release: function release(event) {
      if (this.element) {
        this.$emit('release', event, this.element);
      }
    },
    sortChange: function sortChange(event) {
      event.preventDefault();
      var sort = this.$props.dir === 'asc' ? 'desc' : 'asc';
      this.$emit('sortChange', event, sort);
    },
    groupRemove: function groupRemove(event) {
      event.preventDefault();
      this.$emit('remove', event);
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    var indicatorContainerRef = ref(null);
    return {
      v3: v3,
      indicatorContainerRef: indicatorContainerRef
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;

    var h = gh || createElement;
    return (// @ts-ignore  function children
      h(Draggable, {
        onPress: this.press,
        on: this.v3 ? undefined : {
          "press": this.press,
          "drag": this.drag,
          "release": this.release
        },
        onDrag: this.drag,
        onRelease: this.release,
        ref: 'draggable'
      }, this.v3 ? function () {
        return [h("div", {
          "class": "k-indicator-container",
          ref: setRef(_this, 'indicatorContainer')
        }, [h("div", {
          "class": "k-chip k-chip-lg k-rounded-md k-chip-solid k-chip-solid-base"
        }, [h("span", {
          "class": 'k-chip-icon k-icon k-i-sort-' + _this.$props.dir + '-sm'
        }), h("span", {
          "class": "k-chip-content",
          tabindex: -1,
          attrs: _this.v3 ? undefined : {
            tabindex: -1
          },
          onClick: _this.sortChange,
          on: _this.v3 ? undefined : {
            "click": _this.sortChange
          }
        }, [h("span", {
          "class": "k-chip-text"
        }, [_this.$props.title])]), h("span", {
          "class": "k-chip-actions"
        }, [h("span", {
          "class": "k-chip-action",
          tabindex: -1,
          attrs: _this.v3 ? undefined : {
            tabindex: -1
          },
          onClick: _this.groupRemove,
          on: _this.v3 ? undefined : {
            "click": _this.groupRemove
          }
        }, [h("span", {
          "class": "k-icon k-i-x"
        })])])])])];
      } : [h("div", {
        "class": "k-indicator-container",
        ref: setRef(_this, 'indicatorContainer')
      }, [h("div", {
        "class": "k-chip k-chip-lg k-rounded-md k-chip-solid k-chip-solid-base"
      }, [h("span", {
        "class": 'k-chip-icon k-icon k-i-sort-' + _this.$props.dir + '-sm'
      }), h("span", {
        "class": "k-chip-content",
        tabindex: -1,
        attrs: _this.v3 ? undefined : {
          tabindex: -1
        },
        onClick: _this.sortChange,
        on: _this.v3 ? undefined : {
          "click": _this.sortChange
        }
      }, [h("span", {
        "class": "k-chip-text"
      }, [_this.$props.title])]), h("span", {
        "class": "k-chip-actions"
      }, [h("span", {
        "class": "k-chip-action",
        tabindex: -1,
        attrs: _this.v3 ? undefined : {
          tabindex: -1
        },
        onClick: _this.groupRemove,
        on: _this.v3 ? undefined : {
          "click": _this.groupRemove
        }
      }, [h("span", {
        "class": "k-icon k-i-x"
      })])])])])])
    );
  }
};
/**
 * @hidden
 */

var GroupingIndicator = GroupingIndicatorVue2;
export { GroupingIndicator, GroupingIndicatorVue2 };