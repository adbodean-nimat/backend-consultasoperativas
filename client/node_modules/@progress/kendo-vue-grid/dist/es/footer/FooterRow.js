// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';
import { getTemplate } from '@progress/kendo-vue-common';
import { footerColumns } from './../utils';
/**
 * @hidden
 */

var FooterRowVue2 = {
  name: 'FooterRow',
  props: {
    isRtl: Boolean,
    columns: Array
  },
  methods: {
    columnStyles: function columnStyles(column) {
      return column.left !== undefined ? !this.$props.isRtl ? {
        left: column.left + 'px',
        right: column.right + 'px'
      } : {
        left: column.right + 'px',
        right: column.left + 'px'
      } : {};
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;

    var renderCell = function renderCell(column, index) {
      var footerCellRendering = null;
      var stickyClassName = column.locked && column.left !== undefined ? 'k-grid-footer-sticky' : '';
      var tdClassName = column.footerClassName ? column.footerClassName + " " + stickyClassName : stickyClassName;
      footerCellRendering = getTemplate.call(this, {
        h: h,
        template: column.footerCell,
        defaultRendering: null,
        additionalProps: {
          field: column.field,
          colSpan: column.colSpan !== 1 ? column.colSpan : undefined,
          defaultStyle: this.columnStyles(column)
        }
      });
      return h("td", {
        key: index,
        colspan: column.colSpan !== 1 ? column.colSpan : undefined,
        attrs: this.v3 ? undefined : {
          colspan: column.colSpan !== 1 ? column.colSpan : undefined
        },
        style: this.columnStyles(column),
        "class": tdClassName
      }, [footerCellRendering]);
    };

    return h("tr", [footerColumns(this.$props.columns).map(renderCell, this)]);
  }
};
/**
 * @hidden
 */

var FooterRow = FooterRowVue2;
export { FooterRow, FooterRowVue2 };