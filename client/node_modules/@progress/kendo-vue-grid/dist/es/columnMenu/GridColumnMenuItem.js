// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version[0] === '3';
import { Keys } from '@progress/kendo-vue-common';
/**
 * @hidden
 */

var GridColumnMenuItemVue2 = {
  props: {
    title: String,
    iconClass: String,
    selected: Boolean
  },
  methods: {
    onClick: function onClick(e) {
      this.$emit('menuitemclick', e);
    },
    onKeyDown: function onKeyDown(event) {
      if (event.keyCode === Keys.enter) {
        this.$emit('menuitemclick', event);
      }
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
        title = _a.title,
        iconClass = _a.iconClass,
        selected = _a.selected;
    return h("div", {
      tabindex: 0,
      attrs: this.v3 ? undefined : {
        tabindex: 0
      },
      onKeydown: this.onKeyDown,
      on: this.v3 ? undefined : {
        "keydown": this.onKeyDown,
        "click": this.onClick
      },
      onClick: this.onClick,
      "class": "k-columnmenu-item " + (selected ? 'k-state-selected' : '')
    }, [iconClass && h("span", {
      "class": "k-icon " + iconClass
    }), title]);
  }
};
/**
 * @hidden
 */

var GridColumnMenuItem = GridColumnMenuItemVue2;
export { GridColumnMenuItem, GridColumnMenuItemVue2 };