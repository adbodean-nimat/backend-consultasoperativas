require('dotenv').config();
const https = require('https');
const config = require('./dbconfig.js');
const Pg = require('./dboperacion_pg');
const axios = require('axios');
const httpsAgent = new https.Agent({ rejectUnauthorized: false }); 
const token = process.env.JWT_TOKEN
const sql = require('mssql');

async function getRubroVta(){
  try{
    let pool = await sql.connect(config.plataforma);
    let listaRubroVta = await pool.request().query("SELECT VENT_RUBV.RUBV_RUBRO_VENTA ,VENT_RUBV.RUBV_NOMBRE FROM VENT_RUBV WHERE(((VENT_RUBV.RUBV_RUBRO_VENTA)<>'-' AND (VENT_RUBV.RUBV_RUBRO_VENTA)<>'0001' AND (VENT_RUBV.RUBV_RUBRO_VENTA)<>'0002' AND (VENT_RUBV.RUBV_RUBRO_VENTA)<>'50' AND (VENT_RUBV.RUBV_RUBRO_VENTA)<>'60'))");
    return listaRubroVta.recordsets;
  }
  catch(error){
    console.log(error);
  }
}

async function getRubrosVtaAcopio(getData){
  try{
    let pool = await sql.connect(config.plataforma);
    let listaRVAcopio = await pool.request()
    .input('PerfilComercial', sql.VarChar(4), getData.PerfilComercial)
    .input('fechaDesde', sql.Date, getData.fechaDesde)
    .query("DECLARE @ART_ACOPIO_NO_INCLUIDOS_EN_LISTA TABLE(Cod_Art_Acop_No_lp VARCHAR(30)) INSERT INTO @ART_ACOPIO_NO_INCLUIDOS_EN_LISTA VALUES('99119911'); DECLARE @COTIZ_MON_1 TABLE(MONE_MONEDA VARCHAR(3), MONE_NOMBRE VARCHAR(15), MáxDeCOTI_FECHA DATETIME) INSERT INTO @COTIZ_MON_1 SELECT SIST_MONE.MONE_MONEDA ,SIST_MONE.MONE_NOMBRE , Max(SIST_COTI.COTI_FECHA) AS MáxDeCOTI_FECHA FROM SIST_MONE WITH (NOLOCK) INNER JOIN SIST_COTI WITH (NOLOCK) ON SIST_MONE.MONE_MONEDA = SIST_COTI.COTI_MONEDA1 WHERE (((SIST_COTI.COTI_FECHA)<GETDATE())) GROUP BY SIST_MONE.MONE_MONEDA ,SIST_MONE.MONE_NOMBRE ORDER BY Max(SIST_COTI.COTI_FECHA) DECLARE @COTIZ_MON_2 TABLE (MONE_MONEDA VARCHAR(3), MONE_NOMBRE VARCHAR(15), COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME) INSERT INTO @COTIZ_MON_2 SELECT [@COTIZ_MON_1].MONE_MONEDA ,[@COTIZ_MON_1].MONE_NOMBRE ,SIST_COTI.COTI_COTIZACION ,SIST_COTI.COTI_FECHA FROM @COTIZ_MON_1 INNER JOIN SIST_COTI WITH (NOLOCK) ON ([@COTIZ_MON_1].MáxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@COTIZ_MON_1].MONE_MONEDA = SIST_COTI.COTI_MONEDA1) DECLARE @VN_1 TABLE ( ARVE_RUBRO_VENTA VARCHAR(6), RUBV_NOMBRE VARCHAR(30), ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), ARTS_UNIMED_STOCK VARCHAR(3), ARVE_BLOQUEO_VENTA DECIMAL(1,0), ARTS_FACTOR_HOMSTO DECIMAL(20,12), COD_CTE VARCHAR(4), ARTS_CLASIF_1 VARCHAR(10), CIMP_TASA DECIMAL(7,4), ARTS_PESO_EMB_UMS DECIMAL(14,4)) INSERT INTO @VN_1 SELECT STOC_ARVE.ARVE_RUBRO_VENTA ,VENT_RUBV.RUBV_NOMBRE ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_UNIMED_STOCK ,STOC_ARVE.ARVE_BLOQUEO_VENTA ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,VENT_DVC1.DVC1_CLC1_CLASIF_1 AS COD_CTE ,STOC_ARTS.ARTS_CLASIF_1 ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_PESO_EMB_UMS FROM VENT_DVC1, ((VENT_RUBV WITH (NOLOCK) INNER JOIN STOC_ARVE WITH (NOLOCK) ON VENT_RUBV.RUBV_RUBRO_VENTA = STOC_ARVE.ARVE_RUBRO_VENTA) INNER JOIN (VENT_ARVI WITH (NOLOCK) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARVE.ARVE_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_ARVE.ARVE_ARTICULO = STOC_ARTS.ARTS_ARTICULO WHERE (((STOC_ARVE.ARVE_BLOQUEO_VENTA)=0)) DECLARE @VN_2 TABLE ( ARVE_RUBRO_VENTA VARCHAR(6), RUBV_NOMBRE VARCHAR(30), ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), ARTS_UNIMED_STOCK VARCHAR(3), ARVE_BLOQUEO_VENTA DECIMAL(1,0), ARTS_FACTOR_HOMSTO DECIMAL(20,12), COD_CTE VARCHAR(4), ARTS_CLASIF_1 VARCHAR(10), CIMP_TASA DECIMAL(7,4), ARTS_PESO_EMB_UMS DECIMAL(14,4), DVC1_LISTA_PRECIO_ACOPIO INT, LIPV_UTILIZABLE DECIMAL(1,0)) INSERT INTO @VN_2 SELECT [@VN_1].ARVE_RUBRO_VENTA ,[@VN_1].RUBV_NOMBRE ,[@VN_1].ARTS_ARTICULO ,[@VN_1].ARTS_ARTICULO_EMP ,[@VN_1].ARTS_NOMBRE ,[@VN_1].ARTS_UNIMED_STOCK ,[@VN_1].ARVE_BLOQUEO_VENTA ,[@VN_1].ARTS_FACTOR_HOMSTO ,[@VN_1].[COD_CTE] ,[@VN_1].ARTS_CLASIF_1 ,[@VN_1].CIMP_TASA ,[@VN_1].ARTS_PESO_EMB_UMS ,VENT_DVC1.DVC1_LISTA_PRECIO_ACOPIO ,VENT_LIPV.LIPV_UTILIZABLE FROM (@VN_1 INNER JOIN VENT_DVC1 WITH (NOLOCK) ON [@VN_1].[COD_CTE] = VENT_DVC1.DVC1_CLC1_CLASIF_1) INNER JOIN VENT_LIPV WITH (NOLOCK) ON VENT_DVC1.DVC1_LISTA_PRECIO_ACOPIO = VENT_LIPV.LIPV_LISTA_PRECVTA WHERE (((VENT_LIPV.LIPV_UTILIZABLE)=1)) DECLARE @VN_3 TABLE ( ARVE_RUBRO_VENTA VARCHAR(6), RUBV_NOMBRE VARCHAR(30), ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), ARTS_UNIMED_STOCK VARCHAR(3), ARVE_BLOQUEO_VENTA DECIMAL(1,0), ARTS_FACTOR_HOMSTO DECIMAL(20,12), COD_CTE VARCHAR(4), ARTS_CLASIF_1 VARCHAR(10), CIMP_TASA DECIMAL(7,4), ARTS_PESO_EMB_UMS DECIMAL(14,4), DVC1_LISTA_PRECIO_ACOPIO INT, DCA1_POR_DESCUENTO DECIMAL(5,2)) INSERT INTO @VN_3 SELECT [@VN_2].ARVE_RUBRO_VENTA ,[@VN_2].RUBV_NOMBRE ,[@VN_2].ARTS_ARTICULO ,[@VN_2].ARTS_ARTICULO_EMP ,[@VN_2].ARTS_NOMBRE ,[@VN_2].ARTS_UNIMED_STOCK ,[@VN_2].ARVE_BLOQUEO_VENTA ,[@VN_2].ARTS_FACTOR_HOMSTO ,[@VN_2].[COD_CTE] ,[@VN_2].ARTS_CLASIF_1 ,[@VN_2].CIMP_TASA ,[@VN_2].ARTS_PESO_EMB_UMS ,[@VN_2].DVC1_LISTA_PRECIO_ACOPIO ,VENT_DCA1.DCA1_POR_DESCUENTO FROM @VN_2 LEFT JOIN VENT_DCA1 WITH (NOLOCK) ON ([@VN_2].ARTS_CLASIF_1 = VENT_DCA1.DCA1_CA01_CLASIF_1) AND ([@VN_2].[COD_CTE] = VENT_DCA1.DCA1_CLC1_CLASIF_1) DECLARE @VN_4 TABLE ( ARVE_RUBRO_VENTA VARCHAR(6), RUBV_NOMBRE VARCHAR(30), ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), ARTS_UNIMED_STOCK VARCHAR(3), ARVE_BLOQUEO_VENTA DECIMAL(1,0), ARTS_FACTOR_HOMSTO DECIMAL(20,12), COD_CTE VARCHAR(4), ARTS_CLASIF_1 VARCHAR(10), CIMP_TASA DECIMAL(7,4), ARTS_PESO_EMB_UMS DECIMAL(14,4), DVC1_LISTA_PRECIO_ACOPIO INT, DCA1_POR_DESCUENTO DECIMAL(5,2), ARPV_PRECIO_VTA DECIMAL(14,4), ARPV_MONEDA VARCHAR(3), ARPV_FECHA_ULT_ACT DATETIME, COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, Fecha_cambio_precios_hasta DATETIME, PRECIO_LISTA_CON_IVA DECIMAL(14,4), Fecha_Ult_Modif DATETIME, Delay_cambio_precio VARCHAR(30), Delaycambioprecio TEXT, Modif TEXT) INSERT INTO @VN_4 SELECT [@VN_3].ARVE_RUBRO_VENTA ,[@VN_3].RUBV_NOMBRE ,[@VN_3].ARTS_ARTICULO ,[@VN_3].ARTS_ARTICULO_EMP ,[@VN_3].ARTS_NOMBRE ,[@VN_3].ARTS_UNIMED_STOCK ,[@VN_3].ARVE_BLOQUEO_VENTA ,[@VN_3].ARTS_FACTOR_HOMSTO ,[@VN_3].[COD_CTE] ,[@VN_3].ARTS_CLASIF_1 ,[@VN_3].CIMP_TASA ,[@VN_3].ARTS_PESO_EMB_UMS ,[@VN_3].DVC1_LISTA_PRECIO_ACOPIO ,[@VN_3].DCA1_POR_DESCUENTO ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,VENT_ARPV.ARPV_FECHA_ULT_ACT ,[@COTIZ_MON_2].COTI_COTIZACION ,[@COTIZ_MON_2].COTI_FECHA ,GETDATE() AS [Fecha_cambio_precios_hasta] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100), 2) AS [PRECIO_LISTA_CON_IVA] ,CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS [Fecha_Ult_Modif] ,IIf( DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=0,'+', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=5,'*****', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=4,'****', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=3,'***', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=2,'**', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=1,'*','')))))) AS [Delaycambioprecio] ,IIf(DATEDIFF(day, GETDATE(),(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END))=0,'+', IIf(DATEDIFF(day, GETDATE(),(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END))=-5,'*****', IIf(DATEDIFF(day, GETDATE(),(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END))=-4,'****', IIf(DATEDIFF(day, GETDATE(),(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END))=-3,'***', IIf(DATEDIFF(day, GETDATE(),(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END))=-2,'**', IIf(DATEDIFF(day, GETDATE(),(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END))=-1,'*','')))))) AS [Delay_cambio_precio] , IIf( CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS DATE) <= CAST(GETDATE() AS DATE) ,IIf(CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS DATE) >= @fechaDesde,'Modif', '') , '') AS Modif FROM (@VN_3 INNER JOIN VENT_ARPV WITH (NOLOCK) ON ([@VN_3].DVC1_LISTA_PRECIO_ACOPIO = VENT_ARPV.ARPV_LISTA_PRECVTA) AND ([@VN_3].ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO)) LEFT JOIN @COTIZ_MON_2 ON VENT_ARPV.ARPV_MONEDA = [@COTIZ_MON_2].MONE_MONEDA SELECT [@VN_4].ARVE_RUBRO_VENTA ,[@VN_4].RUBV_NOMBRE ,[@VN_4].ARTS_ARTICULO ,[@VN_4].ARTS_ARTICULO_EMP ,[@VN_4].ARTS_NOMBRE ,[@VN_4].ARTS_UNIMED_STOCK ,[@VN_4].ARVE_BLOQUEO_VENTA ,[@VN_4].ARTS_FACTOR_HOMSTO ,[@VN_4].[COD_CTE] ,[@VN_4].ARTS_CLASIF_1 ,[@VN_4].CIMP_TASA ,[@VN_4].ARTS_PESO_EMB_UMS ,[@VN_4].DVC1_LISTA_PRECIO_ACOPIO ,[@VN_4].DCA1_POR_DESCUENTO ,[@VN_4].ARPV_PRECIO_VTA ,[@VN_4].ARPV_MONEDA ,[@VN_4].COTI_COTIZACION ,[@VN_4].COTI_FECHA ,[@VN_4].[PRECIO_LISTA_CON_IVA] ,[@VN_4].[Fecha_Ult_Modif] ,[@VN_4].[Delay_cambio_precio] ,[@VN_4].[Delaycambioprecio] ,[@ART_ACOPIO_NO_INCLUIDOS_EN_LISTA].[Cod_Art_Acop_No_lp] ,[@VN_4].[Fecha_cambio_precios_hasta] ,[@VN_4].[Modif] FROM @VN_4 LEFT JOIN @ART_ACOPIO_NO_INCLUIDOS_EN_LISTA ON [@VN_4].ARTS_ARTICULO_EMP = [@ART_ACOPIO_NO_INCLUIDOS_EN_LISTA].[Cod_Art_Acop_No_lp] WHERE ((([@ART_ACOPIO_NO_INCLUIDOS_EN_LISTA].[Cod_Art_Acop_No_lp]) Is Null)) AND [@VN_4].COD_CTE = @PerfilComercial");
    return listaRVAcopio.recordsets;
  }
  catch(error){
    console.log(error);
  }
}

async function getVN_sin_dto_financ(){
  try {
    let pool = await sql.connect(config.plataforma);
    let VN_sin_dto_financ = await pool.request().query("DECLARE @COTIZ_MON_1 TABLE(MONE_MONEDA VARCHAR(3), MONE_NOMBRE VARCHAR(15), MáxDeCOTI_FECHA DATETIME) INSERT INTO @COTIZ_MON_1 SELECT SIST_MONE.MONE_MONEDA ,SIST_MONE.MONE_NOMBRE ,Max(SIST_COTI.COTI_FECHA) AS MáxDeCOTI_FECHA FROM SIST_MONE WITH(NOLOCK) INNER JOIN SIST_COTI WITH (NOLOCK) ON SIST_MONE.MONE_MONEDA = SIST_COTI.COTI_MONEDA1 WHERE (((SIST_COTI.COTI_FECHA)<GETDATE())) GROUP BY SIST_MONE.MONE_MONEDA ,SIST_MONE.MONE_NOMBRE ORDER BY Max(SIST_COTI.COTI_FECHA) DECLARE @COTIZ_MON_2 TABLE (MONE_MONEDA VARCHAR(3), MONE_NOMBRE VARCHAR(15), COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME) INSERT INTO @COTIZ_MON_2 SELECT [@COTIZ_MON_1].MONE_MONEDA ,[@COTIZ_MON_1].MONE_NOMBRE ,SIST_COTI.COTI_COTIZACION ,SIST_COTI.COTI_FECHA FROM @COTIZ_MON_1 INNER JOIN SIST_COTI WITH (NOLOCK) ON ([@COTIZ_MON_1].MáxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@COTIZ_MON_1].MONE_MONEDA = SIST_COTI.COTI_MONEDA1) DECLARE @VN_1_SIN_DTO_FINANC TABLE ( ARVE_RUBRO_VENTA VARCHAR(6), RUBV_NOMBRE VARCHAR(30), ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), ARTS_UNIMED_STOCK VARCHAR(3), ARVE_BLOQUEO_VENTA DECIMAL(1,0), ARTS_FACTOR_HOMSTO DECIMAL(20,12), COD_CTE VARCHAR(4), ARTS_CLASIF_1 VARCHAR(10), ARTS_CLASIF_8 VARCHAR(10), CIMP_TASA DECIMAL(7,4), ARTS_PESO_EMB_UMS DECIMAL(14,4)) INSERT INTO @VN_1_SIN_DTO_FINANC SELECT STOC_ARVE.ARVE_RUBRO_VENTA ,VENT_RUBV.RUBV_NOMBRE ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_UNIMED_STOCK ,STOC_ARVE.ARVE_BLOQUEO_VENTA ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,VENT_DVC1.DVC1_CLC1_CLASIF_1 AS COD_CTE ,STOC_ARTS.ARTS_CLASIF_1 ,STOC_ARTS.ARTS_CLASIF_8 ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_PESO_EMB_UMS FROM VENT_DVC1, ((VENT_RUBV WITH (NOLOCK) INNER JOIN STOC_ARVE WITH (NOLOCK) ON VENT_RUBV.RUBV_RUBRO_VENTA = STOC_ARVE.ARVE_RUBRO_VENTA) INNER JOIN (VENT_ARVI WITH (NOLOCK) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARVE.ARVE_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_ARVE.ARVE_ARTICULO = STOC_ARTS.ARTS_ARTICULO WHERE (((STOC_ARVE.ARVE_BLOQUEO_VENTA)=0)) DECLARE @VN_2_SIN_DTO_FINANC TABLE ( ARVE_RUBRO_VENTA VARCHAR(6), RUBV_NOMBRE VARCHAR(30), ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), ARTS_UNIMED_STOCK VARCHAR(3), ARVE_BLOQUEO_VENTA DECIMAL(1,0), ARTS_FACTOR_HOMSTO DECIMAL(20,12), COD_CTE VARCHAR(4), ARTS_CLASIF_1 VARCHAR(10), ARTS_CLASIF_8 VARCHAR(10), CIMP_TASA DECIMAL(7,4), ARTS_PESO_EMB_UMS DECIMAL(14,4), DVC1_LISTA_PRECVTA INT, DCA1_POR_DESCUENTO DECIMAL(5,2)) INSERT INTO @VN_2_SIN_DTO_FINANC SELECT [@VN_1_SIN_DTO_FINANC].ARVE_RUBRO_VENTA ,[@VN_1_SIN_DTO_FINANC].RUBV_NOMBRE ,[@VN_1_SIN_DTO_FINANC].ARTS_ARTICULO ,[@VN_1_SIN_DTO_FINANC].ARTS_ARTICULO_EMP ,[@VN_1_SIN_DTO_FINANC].ARTS_NOMBRE ,[@VN_1_SIN_DTO_FINANC].ARTS_UNIMED_STOCK ,[@VN_1_SIN_DTO_FINANC].ARVE_BLOQUEO_VENTA ,[@VN_1_SIN_DTO_FINANC].ARTS_FACTOR_HOMSTO ,[@VN_1_SIN_DTO_FINANC].[COD_CTE] ,[@VN_1_SIN_DTO_FINANC].ARTS_CLASIF_1 ,[@VN_1_SIN_DTO_FINANC].ARTS_CLASIF_8 ,[@VN_1_SIN_DTO_FINANC].CIMP_TASA ,[@VN_1_SIN_DTO_FINANC].ARTS_PESO_EMB_UMS ,VENT_DVC1.DVC1_LISTA_PRECVTA ,VENT_DCA1.DCA1_POR_DESCUENTO FROM (@VN_1_SIN_DTO_FINANC LEFT JOIN VENT_DCA1 WITH (NOLOCK) ON ([@VN_1_SIN_DTO_FINANC].[COD_CTE] = VENT_DCA1.DCA1_CLC1_CLASIF_1) AND ([@VN_1_SIN_DTO_FINANC].ARTS_CLASIF_1 = VENT_DCA1.DCA1_CA01_CLASIF_1)) INNER JOIN VENT_DVC1 WITH (NOLOCK) ON [@VN_1_SIN_DTO_FINANC].[COD_CTE] = VENT_DVC1.DVC1_CLC1_CLASIF_1 SELECT [@VN_2_SIN_DTO_FINANC].ARVE_RUBRO_VENTA ,[@VN_2_SIN_DTO_FINANC].RUBV_NOMBRE ,[@VN_2_SIN_DTO_FINANC].ARTS_ARTICULO ,[@VN_2_SIN_DTO_FINANC].ARTS_ARTICULO_EMP ,[@VN_2_SIN_DTO_FINANC].ARTS_NOMBRE ,[@VN_2_SIN_DTO_FINANC].ARTS_UNIMED_STOCK ,[@VN_2_SIN_DTO_FINANC].ARVE_BLOQUEO_VENTA ,[@VN_2_SIN_DTO_FINANC].ARTS_FACTOR_HOMSTO ,[@VN_2_SIN_DTO_FINANC].[COD_CTE] ,[@VN_2_SIN_DTO_FINANC].ARTS_CLASIF_1 ,[@VN_2_SIN_DTO_FINANC].ARTS_CLASIF_8 ,[@VN_2_SIN_DTO_FINANC].CIMP_TASA ,[@VN_2_SIN_DTO_FINANC].ARTS_PESO_EMB_UMS ,[@VN_2_SIN_DTO_FINANC].DVC1_LISTA_PRECVTA ,[@VN_2_SIN_DTO_FINANC].DCA1_POR_DESCUENTO ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,VENT_ARPV.ARPV_FECHA_ULT_ACT ,[@COTIZ_MON_2].COTI_COTIZACION ,[@COTIZ_MON_2].COTI_FECHA ,GETDATE() AS [Fecha_cambio_precios_hasta] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100), 2) AS [PRECIO_LISTA_CON_IVA] ,CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS [Fecha_Ult_Modif] ,IIf( DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=0,'+', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=5,'*****', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=4,'****', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=3,'***', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=2,'**', IIf(DATEDIFF(y,CAST(GETDATE() AS date),CAST(CASE WHEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) > (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) THEN (CASE WHEN ARPV_FECHA_ULT_ACT = [ARPV_FECHA_ULT_ACT] THEN [ARPV_FECHA_ULT_ACT] ELSE 0 END) ELSE (CASE WHEN COTI_FECHA = [COTI_FECHA] THEN [COTI_FECHA] ELSE 0 END) END AS date))=1,'*','')))))) AS [Delay_cambio_precio] FROM @VN_2_SIN_DTO_FINANC INNER JOIN (VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTIZ_MON_2 ON VENT_ARPV.ARPV_MONEDA = [@COTIZ_MON_2].MONE_MONEDA) ON ([@VN_2_SIN_DTO_FINANC].ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO) AND ([@VN_2_SIN_DTO_FINANC].DVC1_LISTA_PRECVTA = VENT_ARPV.ARPV_LISTA_PRECVTA) WHERE VENT_ARPV.ARPV_PRECIO_VTA > 0");
    return VN_sin_dto_financ.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getClasificadorClientes(){
  try{
    let pool = await sql.connect(config.plataforma);
    let ClasifClientes = await pool.request().query("SELECT CCOB_CLC1.CLC1_CLASIF_1 ,CCOB_CLC1.CLC1_NOMBRE ,CCOB_CLC1.CLC1_HAB_PROM_VOL ,CCOB_CLC1.CLC1_UTILIZABLE FROM CCOB_CLC1 WITH (NOLOCK) WHERE(((CCOB_CLC1.CLC1_CLASIF_1) Not LIKE 'TAR') AND ((CCOB_CLC1.CLC1_UTILIZABLE)=1)) ORDER BY CCOB_CLC1.CLC1_NOMBRE");
    return ClasifClientes.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getListaConstSecoSQL(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("DECLARE @COTIZ_MON_1 TABLE(MONE_MONEDA VARCHAR(3), MONE_NOMBRE VARCHAR(15), MáxDeCOTI_FECHA DATETIME) INSERT INTO @COTIZ_MON_1 SELECT SIST_MONE.MONE_MONEDA ,SIST_MONE.MONE_NOMBRE ,Max(SIST_COTI.COTI_FECHA) AS MáxDeCOTI_FECHA FROM SIST_MONE WITH(NOLOCK) INNER JOIN SIST_COTI WITH (NOLOCK) ON SIST_MONE.MONE_MONEDA = SIST_COTI.COTI_MONEDA1 WHERE (((SIST_COTI.COTI_FECHA)<GETDATE())) GROUP BY SIST_MONE.MONE_MONEDA ,SIST_MONE.MONE_NOMBRE ORDER BY Max(SIST_COTI.COTI_FECHA) DECLARE @COTIZ_MON_2 TABLE (MONE_MONEDA VARCHAR(3), MONE_NOMBRE VARCHAR(15), COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME) INSERT INTO @COTIZ_MON_2 SELECT [@COTIZ_MON_1].MONE_MONEDA ,[@COTIZ_MON_1].MONE_NOMBRE ,SIST_COTI.COTI_COTIZACION ,SIST_COTI.COTI_FECHA FROM @COTIZ_MON_1 INNER JOIN SIST_COTI WITH (NOLOCK) ON ([@COTIZ_MON_1].MáxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@COTIZ_MON_1].MONE_MONEDA = SIST_COTI.COTI_MONEDA1) DECLARE @CONST_SECO_1 TABLE (ARTS_CLASIF_1 VARCHAR(10), ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), COD_CTE VARCHAR(4), CIMP_TASA DECIMAL(7,4), ARTS_UNIMED_STOCK VARCHAR(3)) INSERT INTO @CONST_SECO_1 SELECT STOC_ARTS.ARTS_CLASIF_1 ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_DVC1.DVC1_CLC1_CLASIF_1 AS COD_CTE ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_UNIMED_STOCK FROM VENT_DVC1 WITH (NOLOCK) ,SIST_CIMP WITH (NOLOCK) INNER JOIN (VENT_ARVI WITH (NOLOCK) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_ARVI.ARVI_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON (SIST_CIMP.CIMP_IMPUESTO = VENT_ARVI.ARVI_IMPUESTO) AND (SIST_CIMP.CIMP_CATEGORIA_IMP = VENT_ARVI.ARVI_CATEGORIA_IMP) DECLARE @CONST_SECO_2 TABLE(ARTS_CLASIF_1 VARCHAR(10), ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), COD_CTE VARCHAR(4), CIMP_TASA DECIMAL(7,4), ARTS_UNIMED_STOCK VARCHAR(3), DCA1_POR_DESCUENTO DECIMAL(5,2), DVC1_LISTA_PRECVTA INT) INSERT INTO @CONST_SECO_2 SELECT [@CONST_SECO_1].ARTS_CLASIF_1 ,[@CONST_SECO_1].ARTS_ARTICULO ,[@CONST_SECO_1].ARTS_ARTICULO_EMP ,[@CONST_SECO_1].ARTS_NOMBRE ,[@CONST_SECO_1].[COD_CTE] ,[@CONST_SECO_1].CIMP_TASA ,[@CONST_SECO_1].ARTS_UNIMED_STOCK ,VENT_DCA1.DCA1_POR_DESCUENTO ,VENT_DVC1.DVC1_LISTA_PRECVTA FROM (@CONST_SECO_1 LEFT JOIN VENT_DCA1 WITH (NOLOCK) ON ([@CONST_SECO_1].ARTS_CLASIF_1 = VENT_DCA1.DCA1_CA01_CLASIF_1) AND ([@CONST_SECO_1].[COD_CTE] = VENT_DCA1.DCA1_CLC1_CLASIF_1)) INNER JOIN VENT_DVC1 WITH (NOLOCK) ON [@CONST_SECO_1].[COD_CTE] = VENT_DVC1.DVC1_CLC1_CLASIF_1 SELECT [@CONST_SECO_2].ARTS_CLASIF_1 ,[@CONST_SECO_2].ARTS_ARTICULO_EMP ,[@CONST_SECO_2].ARTS_NOMBRE ,[@CONST_SECO_2].[COD_CTE] ,[@CONST_SECO_2].CIMP_TASA ,[@CONST_SECO_2].ARTS_UNIMED_STOCK ,[@CONST_SECO_2].DCA1_POR_DESCUENTO ,[@CONST_SECO_2].DVC1_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,[@COTIZ_MON_2].COTI_COTIZACION FROM (@CONST_SECO_2 INNER JOIN VENT_ARPV WITH (NOLOCK) ON ([@CONST_SECO_2].ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO) AND ([@CONST_SECO_2].DVC1_LISTA_PRECVTA = VENT_ARPV.ARPV_LISTA_PRECVTA)) LEFT JOIN @COTIZ_MON_2 ON VENT_ARPV.ARPV_MONEDA = [@COTIZ_MON_2].MONE_MONEDA GROUP BY [@CONST_SECO_2].ARTS_CLASIF_1 ,[@CONST_SECO_2].ARTS_ARTICULO_EMP ,[@CONST_SECO_2].ARTS_NOMBRE ,[@CONST_SECO_2].[COD_CTE] ,[@CONST_SECO_2].CIMP_TASA ,[@CONST_SECO_2].ARTS_UNIMED_STOCK ,[@CONST_SECO_2].DCA1_POR_DESCUENTO ,[@CONST_SECO_2].DVC1_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,[@COTIZ_MON_2].COTI_COTIZACION");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getSQL_STOC_TIAR(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("SELECT * FROM STOC_TIAR WITH (NOLOCK)");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getSQL_STOC_CA08(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("SELECT * FROM STOC_CA08 WITH (NOLOCK)");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getSQL_STOC_DPOS(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("SELECT DPOS_DEPOSITO, DPOS_NOMBRE FROM STOC_DPOS WITH (NOLOCK) WHERE DPOS_UTILIZABLE = 1");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getSQL_VENT_TCVE(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("SELECT TCVE_TIPO_COM, TCVE_NOMBRE FROM VENT_TCVE WITH (NOLOCK) WHERE TCVE_UTILIZABLE = 1");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getSQL_STOC_TCST(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("SELECT TCST_TIPO_COM ,TCST_NOMBRE FROM STOC_TCST WITH (NOLOCK) WHERE TCST_UTILIZABLE = 1");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getSQL_VENT_DCA1(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("SELECT * FROM VENT_DCA1 WITH (NOLOCK)");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getSQL_VENT_DVC1(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("SELECT * FROM VENT_DVC1 WITH (NOLOCK)");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getSQL_CPAG_RUBC(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("SELECT RUBC_RUBRO_COMPRA, RUBC_NOMBRE FROM [CPAG_RUBC] WITH (NOLOCK) WHERE RUBC_UTILIZABLE = 1 AND RUBC_NOMBRE LIKE '%(1)%'");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}


async function getListaPrecioBreveUsoInterno(){
  try {
    let pool = await sql.connect(config.plataforma);
    // let infoLPB = await pool.request().query("DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH(NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MáxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4)) INSERT INTO @Lista_precio_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MáxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA FROM STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1)) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_1_2 TABLE (ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,COTI_COTIZACION DECIMAL(14,2) ,CIMP_TASA DECIMAL (7,2) ,PRECIO_BASE_PESOS DECIMAL (14,2) ,Pre_Lista_con_IVA_L1 DECIMAL (14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL (14,2)) INSERT INTO @Lista_precio_1_2 SELECT [@Lista_precio_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1].ARTS_NOMBRE ,[@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1].CIMP_TASA ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [PRECIO_BASE_PESOS] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100), 2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100), 2) AS [Pre_Cdo_con_IVA_L1] FROM @Lista_precio_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1].MáxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) SELECT [@Lista_precio_1_2].ARTS_ARTICULO_EMP as arts_articulo_emp ,[@Lista_precio_1_2].ARTS_NOMBRE as arts_nombre ,[@Lista_precio_1_2].[Pre_Lista_con_IVA_L1] ,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1] ,STOC_ARVE.ARVE_BLOQUEO_VENTA ,IIf([ARVE_BLOQUEO_VENTA]=1,'Bloqueado para la venta. ','') AS Comentario1 FROM @Lista_precio_1_2 INNER JOIN STOC_ARVE WITH (NOLOCK) ON [@Lista_precio_1_2].ARPV_ARTICULO = STOC_ARVE.ARVE_ARTICULO");
    let infoLPB = await pool.request().query("DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH(NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,4) ,ARPV_MONEDA VARCHAR(3) ,MáxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4)) INSERT INTO @Lista_precio_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MáxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA FROM STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1)) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_1_2 TABLE (ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,4) ,ARPV_MONEDA VARCHAR(3) ,COTI_COTIZACION DECIMAL(14,5) ,CIMP_TASA DECIMAL (7,4) ,PRECIO_BASE_PESOS DECIMAL (14,2) ,Pre_Lista_con_IVA_L1 DECIMAL (14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL (14,2)) INSERT INTO @Lista_precio_1_2 SELECT [@Lista_precio_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1].ARTS_NOMBRE ,[@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1].CIMP_TASA ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [PRECIO_BASE_PESOS] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100), 2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100), 2) AS [Pre_Cdo_con_IVA_L1] FROM @Lista_precio_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1].MáxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) SELECT [@Lista_precio_1_2].ARTS_ARTICULO_EMP as arts_articulo_emp ,[@Lista_precio_1_2].ARTS_NOMBRE as arts_nombre ,[@Lista_precio_1_2].[Pre_Lista_con_IVA_L1] ,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1] ,STOC_ARVE.ARVE_BLOQUEO_VENTA ,IIf([ARVE_BLOQUEO_VENTA]=1,'Bloqueado para la venta. ','') AS Comentario1 FROM @Lista_precio_1_2 INNER JOIN STOC_ARVE WITH (NOLOCK) ON [@Lista_precio_1_2].ARPV_ARTICULO = STOC_ARVE.ARVE_ARTICULO");
    return infoLPB.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function getListaContenedores(){
  try {
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request().query("DECLARE @DeposANoConsiderar TABLE(Cod_Depos NUMERIC, Nombre_Deposito VARCHAR(40)) INSERT INTO @DeposANoConsiderar VALUES(10, 'CONT.ALQUILADOS'), (702, 'SCRAP PROVEEDORES'), (901, 'NO APTOS PARA VENTA'), (905, 'EN TRANSITO A REPARA'), (910, 'RECPECION'), (930, 'DEVOL. A PROVEEDORES'), (950, 'SALON NO RESERVABLE'), (973, 'STOCK RESERVADO') DECLARE @NP_a_considerar TABLE (COD_COMP VARCHAR(3), NOMB_COMP VARCHAR(30)) INSERT INTO @NP_a_considerar VALUES ('NPC', 'Nota pedido contado'), ('NPG', 'Nota pedido gerencial'), ('NPT', 'Nota pedido cuanta corriente'), ('PEA', 'Pedido entrega acopio') DECLARE @Movimientos_de_contenedores TABLE (Cod_Cant_Mov VARCHAR(30), Nombre_Movimiento VARCHAR(70), Cant_Mov_Nro NUMERIC) INSERT INTO @Movimientos_de_contenedores VALUES ('00', 'Entrega no requiere movimientos extras', 0), ('01', 'Entrega requiere 1 movimiento extra', 1), ('02', 'Entrega requiere 2 movimientos extras', 2), ('03', 'Engrega requiere 3 movimientos exras', 3), ('04', 'Entrega requiere 4 movimientos extras', 4), ('05', 'Entrega requiere 5 movimientos extras', 5), ('06', 'Entrega requiere 6 movimientos extras', 6), ('07', 'Entrega requiere 7 movimientos extras', 7), ('08', 'Entrega requiere 8 movimienos extras', 8), ('09', 'Entrega requiere 9 movimientos extras', 9), ('10', 'Entrega requiere 10 movimientos extras', 10), ('11', 'Entrega requiere 11 movimientos extras', 11), ('12', 'Entrega requiere 12 movimientos extras', 12), ('13', 'Entrega requiere 13 movimientos extras', 13), ('14', 'Entrega requiere 14 movimientos extras', 14), ('15', 'Entrega requiere 15 movimientos extras', 15), ('16', 'Entrega requiere 16 movimientos extras', 16), ('17', 'Entrega requiere 17 movimientos extras', 17), ('18', 'Entrega requiere 18 movimientos extras', 18), ('19', 'Entrega requiere 19 movimientos extras', 19), ('20', 'Entrega requiere 20 movimientos extras', 20), ('21', 'Entrega requiere 21 movimientos extras', 21), ('22', 'Entrega requiere 22 movimientos extras', 22), ('23', 'Entrega requiere 23 movimientos extras', 23), ('24', 'Entrega requiere 24 movimientos extras', 24), ('25', 'Entrega requiere 25 movimientos extras', 25) DECLARE @DimensionesContenedores TABLE (Clas4_Clas5 VARCHAR(30), Nombre VARCHAR(30), Medidas_interiores NVARCHAR(MAX)) INSERT INTO @DimensionesContenedores VALUES ('00090216','20 pies estándar', 'Ancho 2.35 Alto puerta: 2.27 Alto interior: 2.37 Largo: 6.00 mt.'), ('00090217','40 pies estándar', 'Ancho 2.35 Alto puerta: 2.27 Alto interior: 2.37 Largo: 12.00 mt.'), ('00120217','40 pies higt cube','Ancho 2.35 Alto puerta: 2.57 Alto interior: 2.68 Largo: 12.00 mt.') DECLARE @NP_Pendientes_entregas_1_Contenedores TABLE (NPCA_FECHA_EMI DATETIME ,NPCA_DIVISION_NPCA SMALLINT ,NPCA_TIPO_NPCA VARCHAR(3) ,NPCA_NUMERO_NPCA DECIMAL(10,0) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,NPDE_UNIMED VARCHAR(3) ,NPDE_CANT_PEDIDA DECIMAL(14,4) ,NPDE_CANT_ENTREG DECIMAL(14,4) ,NPDE_MOTIVO_CANC VARCHAR(3) ,Uni_Pte_Entr_NP DECIMAL(14,4) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,ARTS_CLASIF_2 VARCHAR(10) ,CA02_NOMBRE VARCHAR(30) ,NPCA_OBSERVACION NVARCHAR(MAX) ,CLIE_CLIENTE INT ,CLIE_NOMBRE VARCHAR(30)) INSERT INTO @NP_Pendientes_entregas_1_Contenedores SELECT VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_UNIMED ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,VENT_NPDE.NPDE_MOTIVO_CANC ,[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] AS [Uni_Pte_Entr_NP] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,VENT_NPCA.NPCA_OBSERVACION ,CCOB_CLIE.CLIE_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE FROM CCOB_CLIE WITH (NOLOCK) INNER JOIN ((@NP_a_considerar INNER JOIN ((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON [@NP_a_considerar].[COD_COMP] = VENT_NPCA.NPCA_TIPO_NPCA) INNER JOIN STOC_CA02 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_2 = STOC_CA02.CA02_CLASIF_2) ON CCOB_CLIE.CLIE_CLIENTE = VENT_NPCA.NPCA_CLIENTE WHERE (((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null) AND ((STOC_ARTS.ARTS_CLASIF_2)='0016')) DECLARE @Stock_Contenedores TABLE (ARTS_ARTICULO INT ,Cód_Art VARCHAR(30) ,Nombre_Art VARCHAR(70) ,Stock_Uni DECIMAL(14,4) ,ARTS_CLASIF_2 VARCHAR(10) ,SDPP_DEPOSITO INT ,DPOS_NOMBRE VARCHAR(20)) INSERT INTO @Stock_Contenedores SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cód_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [Stock_Uni] ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_SDPP.SDPP_DEPOSITO ,STOC_DPOS.DPOS_NOMBRE FROM ((STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) LEFT JOIN @DeposANoConsiderar ON STOC_SDPP.SDPP_DEPOSITO = [@DeposANoConsiderar].[Cod_Depos]) LEFT JOIN STOC_DPOS WITH (NOLOCK) ON STOC_SDPP.SDPP_DEPOSITO = STOC_DPOS.DPOS_DEPOSITO GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_SDPP.SDPP_DEPOSITO ,STOC_DPOS.DPOS_NOMBRE ,[@DeposANoConsiderar].[Nombre_Deposito] HAVING (((STOC_ARTS.ARTS_CLASIF_2)='0016') AND (([@DeposANoConsiderar].Nombre_Deposito) Is Null)) DECLARE @Lista_precio_1 TABLE (ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MáxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ) INSERT INTO @Lista_precio_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max(SIST_COTI.COTI_FECHA) AS MáxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA FROM STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN SIST_COTI WITH (NOLOCK) ON VENT_ARPV.ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO WHERE (((SIST_COTI.COTI_FECHA)<GETDATE())) GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1)) ORDER BY Max(SIST_COTI.COTI_FECHA) ASC DECLARE @Lista_precio_1_2 TABLE (ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,COTI_COTIZACION DECIMAL(14,2) ,CIMP_TASA DECIMAL (7,2) ,PRECIO_BASE_PESOS DECIMAL (14,2) ,Pre_Lista_con_IVA_L1 DECIMAL (14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL (14,2) ) INSERT INTO @Lista_precio_1_2 SELECT [@Lista_precio_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1].ARTS_NOMBRE ,[@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1].CIMP_TASA ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [PRECIO_BASE_PESOS] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100), 2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100), 2) AS [Pre_Cdo_con_IVA_L1] FROM @Lista_precio_1 LEFT JOIN SIST_COTI ON ([@Lista_precio_1].MáxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) DECLARE @Containers_1 TABLE (CA05_NOMBRE VARCHAR(30) ,Longitud VARCHAR(30) ,CA04_NOMBRE VARCHAR(30) ,Tipo VARCHAR(30) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,Stock_Uni DECIMAL(14,0) ,Uni_Pte_Entr_NP DECIMAL(14,0) ,Stk_Disp_pVta DECIMAL(14,0) ,ARPV_PRECIO_VTA DECIMAL(14,2) ,Pre_Lista_USD_con_IVA DECIMAL(14,2) ,Pre_Cdo_USD_con_IVA DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL (14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL (14,2) ,ARPV_MONEDA VARCHAR(3) ,Moneda_del_Precio_Lista_en_USD NVARCHAR(MAX) ,Cotización DECIMAL(14,1) ,CIMP_TASA DECIMAL (7,1) ,CA03_NOMBRE VARCHAR(30) ,Año_de_fabricación VARCHAR(4) ,NPCA_OBSERVACION NVARCHAR(MAX) ,VEND_NOMBRE VARCHAR(30) ,Nro_cliente INT ,Nombre_Cliente VARCHAR(30) ,SDPP_DEPOSITO INT ,DPOS_NOMBRE VARCHAR(20) ,ARTS_CLASIF_4 VARCHAR(10) ,ARTS_CLASIF_5 VARCHAR(10) ,Clas4_Clas5_CTD VARCHAR(20) ,ARTS_PESO_EMB_UMS DECIMAL(14,0) ,PART_PARTIDA_ORI VARCHAR(20) ,Cod_Mov VARCHAR(20)) INSERT INTO @Containers_1 SELECT STOC_CA05.CA05_NOMBRE ,Right(STOC_CA05.[CA05_NOMBRE],7) AS Longitud ,STOC_CA04.CA04_NOMBRE ,Right(STOC_CA04.[CA04_NOMBRE],Len(STOC_CA04.[CA04_NOMBRE])-6) AS Tipo ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,[@Stock_Contenedores].[Stock_Uni] ,[@NP_Pendientes_entregas_1_Contenedores].[Uni_Pte_Entr_NP] ,[@Stock_Contenedores].[Stock_Uni]-ISNULL([@NP_Pendientes_entregas_1_Contenedores].[Uni_Pte_Entr_NP],0) AS [Stk_Disp_pVta] ,[@Lista_precio_1_2].ARPV_PRECIO_VTA ,[@Lista_precio_1_2].ARPV_PRECIO_VTA*(1+[@Lista_precio_1_2].CIMP_TASA/100) AS [Pre_Lista_USD_con_IVA] ,[@Lista_precio_1_2].ARPV_PRECIO_VTA*(1+[@Lista_precio_1_2].CIMP_TASA/100)*0.8 AS [Pre_Cdo_USD_con_IVA] ,[@Lista_precio_1_2].[Pre_Lista_con_IVA_L1] ,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1] ,[@Lista_precio_1_2].ARPV_MONEDA ,IIf([@Lista_precio_1_2].ARPV_MONEDA='DCT','Dólar Cotización Billete VENTA BNA',[@Lista_precio_1_2].ARPV_MONEDA) AS [Moneda_del_Precio_Lista_en_USD] ,[@Lista_precio_1_2].COTI_COTIZACION AS Cotización ,[@Lista_precio_1_2].CIMP_TASA ,STOC_CA03.CA03_NOMBRE ,Right(STOC_CA03.[CA03_NOMBRE],4) AS [Año_de_fabricación] ,[@NP_Pendientes_entregas_1_Contenedores].NPCA_OBSERVACION ,SIST_VEND.VEND_NOMBRE ,[@NP_Pendientes_entregas_1_Contenedores].CLIE_CLIENTE AS [Nro_cliente] ,[@NP_Pendientes_entregas_1_Contenedores].CLIE_NOMBRE AS [Nombre_Cliente] ,[@Stock_Contenedores].SDPP_DEPOSITO ,[@Stock_Contenedores].DPOS_NOMBRE ,STOC_ARTS.ARTS_CLASIF_4 ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_ARTS.[ARTS_CLASIF_4] + STOC_ARTS.[ARTS_CLASIF_5] AS [Clas4_Clas5_CTD] ,STOC_ARTS.ARTS_PESO_EMB_UMS ,STOC_PART.PART_PARTIDA_ORI ,Left(STOC_PART.[PART_PARTIDA_ORI],2) AS [Cod_Mov] FROM ((((@NP_Pendientes_entregas_1_Contenedores RIGHT JOIN ((((STOC_ARTS WITH (NOLOCK) INNER JOIN @Lista_precio_1_2 ON STOC_ARTS.ARTS_ARTICULO_EMP = [@Lista_precio_1_2].ARTS_ARTICULO_EMP) INNER JOIN STOC_CA03 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_3 = STOC_CA03.CA03_CLASIF_3) INNER JOIN STOC_CA04 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_4 = STOC_CA04.CA04_CLASIF_4) INNER JOIN STOC_CA05 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_5 = STOC_CA05.CA05_CLASIF_5) ON [@NP_Pendientes_entregas_1_Contenedores].ARTS_ARTICULO_EMP = STOC_ARTS.ARTS_ARTICULO_EMP) LEFT JOIN VENT_NPVE WITH (NOLOCK) ON ([@NP_Pendientes_entregas_1_Contenedores].NPCA_NUMERO_NPCA = VENT_NPVE.NPVE_NUMERO_NPCA) AND ([@NP_Pendientes_entregas_1_Contenedores].NPCA_TIPO_NPCA = VENT_NPVE.NPVE_TIPO_NPCA) AND ([@NP_Pendientes_entregas_1_Contenedores].NPCA_DIVISION_NPCA = VENT_NPVE.NPVE_DIVISION_NPCA)) LEFT JOIN SIST_VEND WITH (NOLOCK) ON VENT_NPVE.NPVE_VENDEDOR = SIST_VEND.VEND_VENDEDOR) LEFT JOIN @Stock_Contenedores ON STOC_ARTS.ARTS_ARTICULO = [@Stock_Contenedores].ARTS_ARTICULO) INNER JOIN STOC_PART WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_PART.PART_ARTICULO WHERE ((([@Stock_Contenedores].[Stock_Uni])>0) AND ((STOC_ARTS.ARTS_CLASIF_2)='0016')) ORDER BY STOC_CA05.CA05_NOMBRE ,STOC_CA04.CA04_NOMBRE ,[@Lista_precio_1_2].ARPV_PRECIO_VTA DESC DECLARE @Contenedor_precio_movimiento TABLE (ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,COTI_COTIZACION DECIMAL(14,2) ,CIMP_TASA DECIMAL (7,2) ,Precio_base_pesos_SI DECIMAL (14,2) ,Pre_Lista_con_IVA_L1_2 DECIMAL (14,2) ,Pre_Cdo_con_IVA_L1_2 DECIMAL (14,2) ) INSERT INTO @Contenedor_precio_movimiento SELECT [@Lista_precio_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1].ARTS_NOMBRE ,[@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1].CIMP_TASA ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [Precio_base_pesos_SI] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100), 2) AS [Pre_Lista_con_IVA_L1_2] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100), 2) AS [Pre_Cdo_con_IVA_L1_2] FROM @Lista_precio_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1].MáxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) WHERE ((([@Lista_precio_1].ARTS_ARTICULO_EMP)='01500026')) DECLARE @Containers_2 TABLE (CA05_NOMBRE VARCHAR(30) ,Longitud VARCHAR(30) ,CA04_NOMBRE VARCHAR(30) ,Tipo VARCHAR(30) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,Stock_Uni DECIMAL(14,0) ,Uni_Pte_Entr_NP DECIMAL(14,0) ,Stk_Disp_pVta DECIMAL(14,0) ,ARPV_PRECIO_VTA DECIMAL(14,2) ,Pre_Lista_USD_con_IVA DECIMAL(14,2) ,Pre_Cdo_USD_con_IVA DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL (14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL (14,2) ,ARPV_MONEDA VARCHAR(3) ,Moneda_del_Precio_Lista_en_USD NVARCHAR(MAX) ,Cotización DECIMAL(14,1) ,CIMP_TASA DECIMAL (7,1) ,CA03_NOMBRE VARCHAR(30) ,Año_de_fabricación VARCHAR(4) ,NPCA_OBSERVACION NVARCHAR(MAX) ,VEND_NOMBRE VARCHAR(30) ,Nro_cliente INT ,Nombre_Cliente VARCHAR(30) ,SDPP_DEPOSITO INT ,DPOS_NOMBRE VARCHAR(20) ,ARTS_CLASIF_4 VARCHAR(10) ,ARTS_CLASIF_5 VARCHAR(10) ,Clas4_Clas5_CTD VARCHAR(20) ,ARTS_PESO_EMB_UMS DECIMAL(14,0) ,PART_PARTIDA_ORI VARCHAR(20) ,Cod_Mov VARCHAR(20) ,Nombre_Movimiento VARCHAR(70) ,Cant_Mov_Nro NUMERIC) INSERT INTO @Containers_2 SELECT [@Containers_1].CA05_NOMBRE ,[@Containers_1].Longitud ,[@Containers_1].CA04_NOMBRE ,[@Containers_1].Tipo ,[@Containers_1].ARTS_ARTICULO_EMP ,[@Containers_1].ARTS_NOMBRE ,[@Containers_1].[Stock_Uni] ,[@Containers_1].[Uni_Pte_Entr_NP] ,[@Containers_1].[Stk_Disp_pVta] ,[@Containers_1].ARPV_PRECIO_VTA ,[@Containers_1].[Pre_Lista_USD_con_IVA] ,[@Containers_1].[Pre_Cdo_USD_con_IVA] ,[@Containers_1].[Pre_Lista_con_IVA_L1] ,[@Containers_1].[Pre_Cdo_con_IVA_L1] ,[@Containers_1].ARPV_MONEDA ,[@Containers_1].[Moneda_del_Precio_Lista_en_USD] ,[@Containers_1].Cotización ,[@Containers_1].CIMP_TASA ,[@Containers_1].CA03_NOMBRE ,[@Containers_1].[Año_de_fabricación] ,[@Containers_1].NPCA_OBSERVACION ,[@Containers_1].VEND_NOMBRE ,[@Containers_1].[Nro_cliente] ,[@Containers_1].[Nombre_Cliente] ,[@Containers_1].SDPP_DEPOSITO ,[@Containers_1].DPOS_NOMBRE ,[@Containers_1].ARTS_CLASIF_4 ,[@Containers_1].ARTS_CLASIF_5 ,[@Containers_1].[Clas4_Clas5_CTD] ,[@Containers_1].ARTS_PESO_EMB_UMS ,[@Containers_1].PART_PARTIDA_ORI ,[@Containers_1].[Cod_Mov] ,[@Movimientos_de_contenedores].[Nombre_Movimiento] ,[@Movimientos_de_contenedores].[Cant_Mov_Nro] FROM @Containers_1 LEFT JOIN @Movimientos_de_contenedores ON [@Containers_1].[Cod_Mov] = [@Movimientos_de_contenedores].[Cod_Cant_Mov] DECLARE @Containers_3 TABLE (CA05_NOMBRE VARCHAR(30) ,Longitud VARCHAR(30) ,CA04_NOMBRE VARCHAR(30) ,Tipo VARCHAR(30) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,Stock_Uni DECIMAL(14,0) ,Uni_Pte_Entr_NP DECIMAL(14,0) ,Stk_Disp_pVta DECIMAL(14,0) ,ARPV_PRECIO_VTA DECIMAL(14,2) ,Pre_Lista_USD_con_IVA DECIMAL(14,2) ,Pre_Cdo_USD_con_IVA DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL (14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL (14,2) ,ARPV_MONEDA VARCHAR(3) ,Moneda_del_Precio_Lista_en_USD NVARCHAR(MAX) ,Cotización DECIMAL(14,1) ,CIMP_TASA DECIMAL (7,1) ,CA03_NOMBRE VARCHAR(30) ,Año_de_fabricación VARCHAR(4) ,NPCA_OBSERVACION NVARCHAR(MAX) ,VEND_NOMBRE VARCHAR(30) ,Nro_cliente INT ,Nombre_Cliente VARCHAR(30) ,SDPP_DEPOSITO INT ,DPOS_NOMBRE VARCHAR(20) ,ARTS_CLASIF_4 VARCHAR(10) ,ARTS_CLASIF_5 VARCHAR(10) ,Clas4_Clas5_CTD VARCHAR(20) ,ARTS_PESO_EMB_UMS DECIMAL(14,0) ,PART_PARTIDA_ORI VARCHAR(20) ,Cod_Mov VARCHAR(20) ,Nombre_Movimiento VARCHAR(70) ,Cant_Mov_Nro NUMERIC ,Pre_Cdo_con_IVA_L1_2 DECIMAL(14,2)) INSERT INTO @Containers_3 SELECT [@Containers_2].CA05_NOMBRE ,[@Containers_2].Longitud ,[@Containers_2].CA04_NOMBRE ,[@Containers_2].Tipo ,[@Containers_2].ARTS_ARTICULO_EMP ,[@Containers_2].ARTS_NOMBRE ,[@Containers_2].[Stock_Uni] ,[@Containers_2].[Uni_Pte_Entr_NP] ,[@Containers_2].[Stk_Disp_pVta] ,[@Containers_2].ARPV_PRECIO_VTA ,[@Containers_2].[Pre_Lista_USD_con_IVA] ,[@Containers_2].[Pre_Cdo_USD_con_IVA] ,[@Containers_2].[Pre_Lista_con_IVA_L1] ,[@Containers_2].[Pre_Cdo_con_IVA_L1] ,[@Containers_2].ARPV_MONEDA ,[@Containers_2].[Moneda_del_Precio_Lista_en_USD] ,[@Containers_2].Cotización ,[@Containers_2].CIMP_TASA ,[@Containers_2].CA03_NOMBRE ,[@Containers_2].[Año_de_fabricación] ,[@Containers_2].NPCA_OBSERVACION ,[@Containers_2].VEND_NOMBRE ,[@Containers_2].[Nro_cliente] ,[@Containers_2].[Nombre_Cliente] ,[@Containers_2].SDPP_DEPOSITO ,[@Containers_2].DPOS_NOMBRE ,[@Containers_2].ARTS_CLASIF_4 ,[@Containers_2].ARTS_CLASIF_5 ,[@Containers_2].[Clas4_Clas5_CTD] ,[@Containers_2].ARTS_PESO_EMB_UMS ,[@Containers_2].PART_PARTIDA_ORI ,[@Containers_2].[Cod_Mov] ,[@Containers_2].[Nombre_Movimiento] ,[@Containers_2].[Cant_Mov_Nro] ,[@Contenedor_precio_movimiento].[Pre_Cdo_con_IVA_L1_2] FROM @Containers_2 ,@Contenedor_precio_movimiento DECLARE @Containers_4 TABLE (CA05_NOMBRE VARCHAR(30) ,Longitud VARCHAR(30) ,CA04_NOMBRE VARCHAR(30) ,Tipo VARCHAR(30) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,Stock_Uni DECIMAL(14,0) ,Uni_Pte_Entr_NP DECIMAL(14,0) ,Stk_Disp_pVta DECIMAL(14,0) ,ARPV_PRECIO_VTA DECIMAL(14,2) ,Pre_Lista_USD_con_IVA DECIMAL(14,2) ,Pre_Cdo_USD_con_IVA DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL (14,2) ,Pre_Cdo_AR_cIVA_L1 DECIMAL (14,2) ,ARPV_MONEDA VARCHAR(3) ,Moneda_del_Precio_Lista_en_USD NVARCHAR(MAX) ,Cotización DECIMAL(14,1) ,CIMP_TASA DECIMAL (7,1) ,CA03_NOMBRE VARCHAR(30) ,Año_de_fabricación VARCHAR(4) ,NPCA_OBSERVACION NVARCHAR(MAX) ,VEND_NOMBRE VARCHAR(30) ,Nro_cliente INT ,Nombre_Cliente VARCHAR(30) ,SDPP_DEPOSITO INT ,DPOS_NOMBRE VARCHAR(20) ,ARTS_CLASIF_4 VARCHAR(10) ,ARTS_CLASIF_5 VARCHAR(10) ,Clas4_Clas5_CTD VARCHAR(20) ,ARTS_PESO_EMB_UMS DECIMAL(14,0) ,PART_PARTIDA_ORI VARCHAR(20) ,Cod_Mov VARCHAR(20) ,Nombre_Movimiento VARCHAR(70) ,Cant_Mov_Nro NUMERIC ,Pre_Cdo_con_IVA_L1_2 DECIMAL(14,2) ,Precio_ARxmov_01500026 DECIMAL(14,2) ,Total_mov DECIMAL(14,2) ,Contenedor_c_mov_AR_cdo_efect DECIMAL(14,2)) INSERT INTO @Containers_4 SELECT [@Containers_3].CA05_NOMBRE ,[@Containers_3].Longitud ,[@Containers_3].CA04_NOMBRE ,[@Containers_3].Tipo ,[@Containers_3].ARTS_ARTICULO_EMP ,[@Containers_3].ARTS_NOMBRE ,[@Containers_3].[Stock_Uni] ,[@Containers_3].[Uni_Pte_Entr_NP] ,[@Containers_3].[Stk_Disp_pVta] ,[@Containers_3].ARPV_PRECIO_VTA ,[@Containers_3].[Pre_Lista_USD_con_IVA] ,[@Containers_3].[Pre_Cdo_USD_con_IVA] ,[@Containers_3].[Pre_Lista_con_IVA_L1] ,[@Containers_3].[Pre_Cdo_con_IVA_L1] AS [Pre_Cdo_AR_cIVA_L1] ,[@Containers_3].ARPV_MONEDA ,[@Containers_3].[Moneda_del_Precio_Lista_en_USD] ,[@Containers_3].Cotización ,[@Containers_3].CIMP_TASA ,[@Containers_3].CA03_NOMBRE ,[@Containers_3].[Año_de_fabricación] ,[@Containers_3].NPCA_OBSERVACION ,[@Containers_3].VEND_NOMBRE ,[@Containers_3].[Nro_cliente] ,[@Containers_3].[Nombre_Cliente] ,[@Containers_3].SDPP_DEPOSITO ,[@Containers_3].DPOS_NOMBRE ,[@Containers_3].ARTS_CLASIF_4 ,[@Containers_3].ARTS_CLASIF_5 ,[@Containers_3].[Clas4_Clas5_CTD] ,[@Containers_3].ARTS_PESO_EMB_UMS ,[@Containers_3].PART_PARTIDA_ORI ,[@Containers_3].[Cod_Mov] ,[@Containers_3].[Nombre_Movimiento] ,[@Containers_3].[Cant_Mov_Nro] ,[@Containers_3].[Pre_Cdo_con_IVA_L1_2] ,IIf([@Containers_3].Cant_Mov_Nro > 0,[@Containers_3].[Pre_Cdo_con_IVA_L1_2],'0') AS [Precio_ARxmov_01500026] ,[@Containers_3].[Pre_Cdo_con_IVA_L1_2]*[@Containers_3].[Cant_Mov_Nro] AS [Total_mov] ,[@Containers_3].[Pre_Cdo_con_IVA_L1]+ISNULL([@Containers_3].[Pre_Cdo_con_IVA_L1_2]*[@Containers_3].[Cant_Mov_Nro],'0') AS [Contenedor_c_mov_AR_cdo_efect] FROM @Containers_3 SELECT IIf([Pre_Cdo_AR_cIVA_L1]=[Contenedor_c_mov_AR_cdo_efect],'No requiere mov','¡¡¡Requiere mov!!!') AS [Movimientos] ,[@Containers_4].Longitud ,[@Containers_4].Tipo ,[@Containers_4].ARTS_ARTICULO_EMP AS [Cód_Art] ,[@Containers_4].ARTS_NOMBRE AS [Nombre_art] ,[@Containers_4].[Stock_Uni] ,[@Containers_4].[Uni_Pte_Entr_NP] ,[@Containers_4].[Stk_Disp_pVta] ,[@Containers_4].[Pre_Cdo_USD_con_IVA] ,[@Containers_4].[Pre_Cdo_AR_cIVA_L1] ,[@Containers_4].[Cant_Mov_Nro] ,[@Containers_4].[Precio_ARxmov_01500026] ,[@Containers_4].[Total_mov] ,[@Containers_4].[Contenedor_c_mov_AR_cdo_efect] ,[@Containers_4].DPOS_NOMBRE AS Depósito ,[@Containers_4].[Moneda_del_Precio_Lista_en_USD] ,[@Containers_4].Cotización ,CONVERT(VARCHAR(30),[@Containers_4].[CIMP_TASA]) + ' %' AS [IVA_incluido_en_precio] ,[@Containers_4].[Año_de_fabricación] ,[@Containers_4].ARTS_PESO_EMB_UMS AS [Peso_aprox_Kg] ,[@Containers_4].[Nro_cliente] ,[@Containers_4].[Nombre_Cliente] ,[@Containers_4].NPCA_OBSERVACION AS [Observación_NP] ,[@Containers_4].VEND_NOMBRE AS Vendedor ,[@DimensionesContenedores].[Medidas_interiores] FROM @Containers_4 INNER JOIN @DimensionesContenedores ON [@Containers_4].[Clas4_Clas5_CTD] = [@DimensionesContenedores].[Clas4_Clas5] ORDER BY [@Containers_4].Longitud ,[@Containers_4].Tipo DESC ,[@Containers_4].[Pre_Cdo_USD_con_IVA]");
    return infoLista.recordsets;
  }
  catch (error){
    console.log(error);
  }
}

async function getNPpendienteEntregaContenedores() {
  try {
    let pool = await sql.connect(config.plataforma);
    let infoPendiente = await pool.request().query("SELECT FORMAT(CAST(VENT_NPCA.NPCA_FECHA_EMI as DATE), 'yyyy-MM-dd') AS [NPCA_FECHA_EMI] ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_UNIMED ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,VENT_NPDE.NPDE_MOTIVO_CANC ,[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] AS [Uni Pte Entr NP] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,VENT_NPCA.NPCA_OBSERVACION ,CCOB_CLIE.CLIE_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE FROM CCOB_CLIE WITH(NOLOCK) INNER JOIN (((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA02 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_2 = STOC_CA02.CA02_CLASIF_2) ON CCOB_CLIE.CLIE_CLIENTE = VENT_NPCA.NPCA_CLIENTE WHERE (((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null) AND ((STOC_ARTS.ARTS_CLASIF_2)='0016'))");
    return infoPendiente.recordsets;
  }
  catch (error){
    console.log(error);
  }
}

async function getControl() {
    try {
      let  pool = await  sql.connect(config.plataforma);
      let  info = await  pool.request().query("SELECT FORMAT(CAST(CCOB_CLIE.CLIE_FECHA_ALTA as DATE), 'yyyy-MM-dd') AS [CLIE_FECHA_ALTA] ,SEGU_AUDI.AUDI_USUARIO ,SEGU_USUA.USUA_NOMBRE ,SIST_VEND.VEND_NOMBRE ,CCOB_CLIE.CLIE_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_CLIE.CLIE_EMAIL ,CCOB_CLC5.CLC5_NOMBRE ,CCOB_DCLI.DCLI_DOMICILIO ,CCOB_DCLI.DCLI_LOCALIDAD ,CCOB_DCLI.DCLI_COD_LOCALIDAD ,CCOB_DCLI.DCLI_COD_POSTAL ,CCOB_DCLI.DCLI_PROVINCIA ,CCOB_CLIE.CLIE_CONDICION_IVA ,CCOB_CLIE.CLIE_CUIT ,CCOB_CLIE.CLIE_ING_BRUTOS ,CCOB_CLIE.CLIE_COND_PAGO ,CCOB_CLIE.CLIE_COBRADOR ,CCOB_CLPF.CLPF_FECHA_NACIM ,CCOB_CLPF.CLPF_NACIONALIDAD ,CCOB_CLPF.CLPF_SEXO FROM(((SEGU_AUDI WITH (NOLOCK) INNER JOIN CCOB_AUCL WITH (NOLOCK) ON SEGU_AUDI.AUDI_AUDITOR = CCOB_AUCL.AUCL_AUDITOR) INNER JOIN SEGU_USUA WITH (NOLOCK) ON SEGU_AUDI.AUDI_USUARIO = SEGU_USUA.USUA_USUARIO) INNER JOIN (((CCOB_CLIE WITH (NOLOCK) INNER JOIN CCOB_DCLI WITH (NOLOCK) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_DCLI.DCLI_CLIENTE) LEFT JOIN CCOB_CLPF WITH (NOLOCK) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_CLPF.CLPF_CLIENTE) INNER JOIN CCOB_CLC5 WITH (NOLOCK) ON CCOB_CLIE.CLIE_CLASIF_5 = CCOB_CLC5.CLC5_CLASIF_5) ON CCOB_AUCL.AUCL_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) INNER JOIN (CCOB_VECL WITH (NOLOCK) INNER JOIN SIST_VEND WITH (NOLOCK) ON CCOB_VECL.VECL_VENDEDOR = SIST_VEND.VEND_VENDEDOR) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_VECL.VECL_CLIENTE WHERE (((SEGU_AUDI.AUDI_INSERTA)=1))");
      return  info.recordsets;
    }
    catch (error) {
      console.log(error);
    }
  }

  async function getListaClientes(){
    try {
      let pool = await sql.connect(config.plataforma);
      let lista = await pool.request().query("DECLARE @Usuario_que_dieron_alta_clientes TABLE(AUDI_FECHA datetime, AUCL_CLIENTE int, CLIE_NOMBRE varchar(30), AUDI_USUARIO varchar(8), USUA_NOMBRE varchar(30), AUDI_INSERTA decimal(1,0)) INSERT INTO @Usuario_que_dieron_alta_clientes SELECT SEGU_AUDI.AUDI_FECHA ,CCOB_AUCL.AUCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,SEGU_AUDI.AUDI_USUARIO ,SEGU_USUA.USUA_NOMBRE ,SEGU_AUDI.AUDI_INSERTA FROM ((SEGU_AUDI WITH (NOLOCK) INNER JOIN CCOB_AUCL WITH (NOLOCK) ON SEGU_AUDI.AUDI_AUDITOR = CCOB_AUCL.AUCL_AUDITOR) INNER JOIN SEGU_USUA WITH (NOLOCK) ON SEGU_AUDI.AUDI_USUARIO = SEGU_USUA.USUA_USUARIO) INNER JOIN CCOB_CLIE WITH (NOLOCK) ON CCOB_AUCL.AUCL_CLIENTE = CCOB_CLIE.CLIE_CLIENTE WHERE (((SEGU_AUDI.AUDI_INSERTA)=1)) SELECT FORMAT(CAST(CCOB_CLIE.CLIE_FECHA_ALTA as DATE), 'yyyy-MM-dd') AS [Fecha_alta_cliente] ,CCOB_CLIE.CLIE_CLIENTE AS [Nro_cliente] ,CCOB_CLIE.CLIE_NOMBRE AS [Nombre_cliente] ,CCOB_DCLI.DCLI_RENGLON AS [Cod_domic] ,CASE WHEN CCOB_DCLI.DCLI_FAX IS NULL THEN '' ELSE CCOB_DCLI.DCLI_FAX END AS [Fax_celular] ,IIf(ISNULL(CASE WHEN CCOB_DCLI.DCLI_FAX IS NULL THEN '' ELSE CCOB_DCLI.DCLI_FAX END,0)='','',IIF(Len(DCLI_FAX)=10,'','Completar, revisar «Fax (celular)»')) AS Verificacion ,CCOB_DCLI.DCLI_TELEFONO AS Telefono ,CCOB_DCLI.DCLI_OBSERVACION AS [Observ_domicilio] ,CCOB_CLIE.CLIE_COBRADOR AS Cobrador ,SIST_VEND.VEND_NOMBRE AS Vendedor ,[@Usuario_que_dieron_alta_clientes].AUDI_USUARIO AS [Auditoria] ,[@Usuario_que_dieron_alta_clientes].USUA_NOMBRE AS [Nombre_Usuario] FROM ((CCOB_CLIE WITH (NOLOCK) INNER JOIN CCOB_DCLI WITH (NOLOCK) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_DCLI.DCLI_CLIENTE) INNER JOIN (CCOB_VECL WITH (NOLOCK) INNER JOIN SIST_VEND WITH (NOLOCK) ON CCOB_VECL.VECL_VENDEDOR = SIST_VEND.VEND_VENDEDOR) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_VECL.VECL_CLIENTE) INNER JOIN @Usuario_que_dieron_alta_clientes ON CCOB_VECL.VECL_CLIENTE = [@Usuario_que_dieron_alta_clientes].AUCL_CLIENTE");
      return lista.recordsets;
    }
    catch (error) {
      console.log(error);
    }
  }

  async function getListaClientes2(getData){
    try {
      let pool = await sql.connect(config.plataforma);
      let lista = await pool.request()
      .input('fechaDesde', sql.Date, getData.fechadesde)
      .input('fechaHasta', sql.Date, getData.fechahasta)
      .query("DECLARE @Usuario_que_dieron_alta_clientes TABLE(AUDI_FECHA datetime, AUCL_CLIENTE int, CLIE_NOMBRE varchar(30), AUDI_USUARIO varchar(8), USUA_NOMBRE varchar(30), AUDI_INSERTA decimal(1,0)) INSERT INTO @Usuario_que_dieron_alta_clientes SELECT SEGU_AUDI.AUDI_FECHA ,CCOB_AUCL.AUCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,SEGU_AUDI.AUDI_USUARIO ,SEGU_USUA.USUA_NOMBRE ,SEGU_AUDI.AUDI_INSERTA FROM((SEGU_AUDI WITH (NOLOCK) INNER JOIN CCOB_AUCL WITH (NOLOCK) ON SEGU_AUDI.AUDI_AUDITOR = CCOB_AUCL.AUCL_AUDITOR) INNER JOIN SEGU_USUA WITH (NOLOCK) ON SEGU_AUDI.AUDI_USUARIO = SEGU_USUA.USUA_USUARIO) INNER JOIN CCOB_CLIE WITH (NOLOCK) ON CCOB_AUCL.AUCL_CLIENTE = CCOB_CLIE.CLIE_CLIENTE WHERE (((SEGU_AUDI.AUDI_INSERTA)=1)) SELECT FORMAT(CAST(CCOB_CLIE.CLIE_FECHA_ALTA as DATE), 'yyyy-MM-dd') AS [Fecha_alta_cliente] ,CCOB_CLIE.CLIE_CLIENTE AS [Nro_cliente] ,CCOB_CLIE.CLIE_NOMBRE AS [Nombre_cliente] ,CCOB_DCLI.DCLI_RENGLON AS [Cod_domic] ,CASE WHEN CCOB_DCLI.DCLI_FAX IS NULL THEN '' ELSE CCOB_DCLI.DCLI_FAX END AS [Fax_celular] ,IIf(ISNULL(CASE WHEN CCOB_DCLI.DCLI_FAX IS NULL THEN '' ELSE CCOB_DCLI.DCLI_FAX END,0)='','',IIF(Len(DCLI_FAX)=10,'','Completar, revisar «Fax (celular)»')) AS Verificacion ,CCOB_CLIE.CLIE_EMAIL ,CASE WHEN CCOB_CLIE.CLIE_EMAIL LIKE '%_@_%_.__%' AND PATINDEX('%[^a-z,0-9,@,.,_,\-]%', CCOB_CLIE.CLIE_EMAIL) = 0 THEN 'Tiene' ELSE 'No tiene / Revisar email' END AS [Validar_Email] ,CCOB_DCLI.DCLI_TELEFONO AS Telefono ,CCOB_DCLI.DCLI_OBSERVACION AS [Observ_domicilio] ,CCOB_CLIE.CLIE_COBRADOR AS Cobrador ,SIST_VEND.VEND_NOMBRE AS Vendedor ,[@Usuario_que_dieron_alta_clientes].AUDI_USUARIO AS [Auditoria] ,[@Usuario_que_dieron_alta_clientes].USUA_NOMBRE AS [Nombre_Usuario] FROM ((CCOB_CLIE WITH (NOLOCK) INNER JOIN CCOB_DCLI WITH (NOLOCK) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_DCLI.DCLI_CLIENTE) INNER JOIN (CCOB_VECL WITH (NOLOCK) INNER JOIN SIST_VEND WITH (NOLOCK) ON CCOB_VECL.VECL_VENDEDOR = SIST_VEND.VEND_VENDEDOR) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_VECL.VECL_CLIENTE) INNER JOIN @Usuario_que_dieron_alta_clientes ON CCOB_VECL.VECL_CLIENTE = [@Usuario_que_dieron_alta_clientes].AUCL_CLIENTE WHERE CCOB_CLIE.CLIE_FECHA_ALTA BETWEEN @fechaDesde AND @fechaHasta");
      return lista.recordsets;
    }
    catch (error) {
      console.log(error);
    }
  }


async function getOrder(fechaAlta) {
  try {
    let  pool = await  sql.connect(config.plataforma);
    let  product = await  pool.request()
    .input('input_parameter', sql.Date, fechaAlta)
    .query("SELECT FORMAT(CAST(CCOB_CLIE.CLIE_FECHA_ALTA as DATE), 'dd-MM-yyyy') AS [CLIE_FECHA_ALTA] ,SEGU_AUDI.AUDI_USUARIO ,SEGU_USUA.USUA_NOMBRE ,CCOB_VECL.VECL_VENDEDOR ,SIST_VEND.VEND_NOMBRE ,CCOB_CLIE.CLIE_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_CLIE.CLIE_EMAIL ,CCOB_CLC5.CLC5_CLASIF_5 ,CCOB_DCLI.DCLI_DOMICILIO ,CCOB_DCLI.DCLI_LOCALIDAD ,CCOB_DCLI.DCLI_COD_LOCALIDAD ,CCOB_DCLI.DCLI_MUNICIPIO ,CCOB_DCLI.DCLI_COD_POSTAL ,CCOB_DCLI.DCLI_PROVINCIA ,CCOB_CLIE.CLIE_CONDICION_IVA ,CCOB_CLIE.CLIE_CUIT FROM ((SEGU_AUDI INNER JOIN ((((CCOB_CLIE INNER JOIN CCOB_DCLI ON CCOB_CLIE.CLIE_CLIENTE = CCOB_DCLI.DCLI_CLIENTE) INNER JOIN CCOB_CLPF ON CCOB_CLIE.CLIE_CLIENTE = CCOB_CLPF.CLPF_CLIENTE) INNER JOIN CCOB_CLC5 ON CCOB_CLIE.CLIE_CLASIF_5 = CCOB_CLC5.CLC5_CLASIF_5) INNER JOIN CCOB_AUCL ON CCOB_CLIE.CLIE_CLIENTE = CCOB_AUCL.AUCL_CLIENTE) ON SEGU_AUDI.AUDI_AUDITOR = CCOB_AUCL.AUCL_AUDITOR) INNER JOIN SEGU_USUA ON SEGU_AUDI.AUDI_USUARIO = SEGU_USUA.USUA_USUARIO) INNER JOIN (CCOB_VECL INNER JOIN SIST_VEND ON CCOB_VECL.VECL_VENDEDOR = SIST_VEND.VEND_VENDEDOR) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_VECL.VECL_CLIENTE WHERE (((SEGU_AUDI.AUDI_INSERTA)=1)) AND CAST(CCOB_CLIE.CLIE_FECHA_ALTA as DATE) >= FORMAT(CAST(@input_parameter as date), 'dd-MM-yyyy')");
    return  product.recordsets;
  }
  catch (error) {
    console.log(error);
  }
}

async function getM2Saldo(M2Saldo){
  try{
    let pool = await sql.connect(config.plataforma);
    let M2xSaldo = await pool.request()
    .input('cod_art', sql.Int, M2Saldo)
    .query("DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH(NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ,Clas_Art_2 VARCHAR(10) ,CA02_NOMBRE VARCHAR(30) ,ARTS_UNIMED_HOMSTO VARCHAR(3) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,ARVE_BLOQUEO_VENTA DECIMAL(1,0)) INSERT INTO @Lista_precio_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 AS [Clas_Art_2] ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARVE.ARVE_BLOQUEO_VENTA FROM (STOC_CA02 WITH (NOLOCK) INNER JOIN (STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO) ON STOC_CA02.CA02_CLASIF_2 = STOC_ARTS.ARTS_CLASIF_2) INNER JOIN STOC_ARVE WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = STOC_ARVE.ARVE_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARVE.ARVE_BLOQUEO_VENTA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1) AND ((STOC_ARVE.ARVE_BLOQUEO_VENTA)=0)) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_2 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ,Clas_Art_2 VARCHAR(10) ,CA02_NOMBRE VARCHAR(30) ,ARTS_UNIMED_HOMSTO VARCHAR(3) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,Precio_base_pesos_SI DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL(14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,2) ,M2xCaja DECIMAL(14,3) ,Pre_M2_UN_Lista_con_IVA_L1 DECIMAL(14,2) ,Pre_M2_UN_Cdo_con_IVA_L1 DECIMAL(14,2) ,Pre_M2_UN_Cdo_con_IVA_L1_Redond DECIMAL(14,0)) INSERT INTO @Lista_precio_2 SELECT [@Lista_precio_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1].ARTS_NOMBRE ,[@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1].CIMP_TASA ,[@Lista_precio_1].[Clas_Art_2] ,[@Lista_precio_1].CA02_NOMBRE ,[@Lista_precio_1].ARTS_UNIMED_HOMSTO ,[@Lista_precio_1].ARTS_FACTOR_HOMSTO ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [Precio_base_pesos_SI] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2) AS [Pre_Cdo_con_IVA_L1] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(1/[ARTS_FACTOR_HOMSTO],3) ,0) AS [M2xCaja] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2)) AS [Pre_M2_UN_Lista_con_IVA_L1] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)) AS [Pre_M2_UN_Cdo_con_IVA_L1] ,ROUND(IIf((IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))-(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))=0,(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2))),(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))+1),0) AS [Pre_M2_UN_Cdo_con_IVA_L1_Redond] FROM @Lista_precio_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) SELECT [@Lista_precio_2].ARTS_ARTICULO_EMP ,[@Lista_precio_2].ARTS_NOMBRE ,[@Lista_precio_2].[Clas_Art_2] ,[@Lista_precio_2].[M2xCaja] ,[@Lista_precio_2].[Pre_M2_UN_Lista_con_IVA_L1] ,[@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1] ,[@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1_Redond] FROM @Lista_precio_2 WHERE ((([@Lista_precio_2].ARTS_ARTICULO_EMP)=@cod_art) AND (([@Lista_precio_2].[Clas_Art_2]) LIKE '0004')) ")
    return M2xSaldo.recordsets;
  }
  catch(error){
    console.log(error);
  }
}

async function getM2Art(M2Art){
  try{
    let pool = await sql.connect(config.plataforma);
    let M2xArt = await pool.request()
    .input('cod_art', sql.Int, M2Art)
    .query("DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH(NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ,Clas_Art_2 VARCHAR(10) ,CA02_NOMBRE VARCHAR(30) ,ARTS_UNIMED_HOMSTO VARCHAR(3) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,ARVE_BLOQUEO_VENTA DECIMAL(1,0)) INSERT INTO @Lista_precio_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 AS [Clas_Art_2] ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARVE.ARVE_BLOQUEO_VENTA FROM (STOC_CA02 WITH (NOLOCK) INNER JOIN (STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO) ON STOC_CA02.CA02_CLASIF_2 = STOC_ARTS.ARTS_CLASIF_2) INNER JOIN STOC_ARVE WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = STOC_ARVE.ARVE_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARVE.ARVE_BLOQUEO_VENTA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1) AND ((STOC_ARVE.ARVE_BLOQUEO_VENTA)=0)) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_2 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ,Clas_Art_2 VARCHAR(10) ,CA02_NOMBRE VARCHAR(30) ,ARTS_UNIMED_HOMSTO VARCHAR(3) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,Precio_base_pesos_SI DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL(14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,2) ,M2xCaja DECIMAL(14,3) ,Pre_M2_UN_Lista_con_IVA_L1 DECIMAL(14,2) ,Pre_M2_UN_Cdo_con_IVA_L1 DECIMAL(14,2) ,Pre_M2_UN_Cdo_con_IVA_L1_Redond DECIMAL(14,0)) INSERT INTO @Lista_precio_2 SELECT [@Lista_precio_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1].ARTS_NOMBRE ,[@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1].CIMP_TASA ,[@Lista_precio_1].[Clas_Art_2] ,[@Lista_precio_1].CA02_NOMBRE ,[@Lista_precio_1].ARTS_UNIMED_HOMSTO ,[@Lista_precio_1].ARTS_FACTOR_HOMSTO ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [Precio_base_pesos_SI] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2) AS [Pre_Cdo_con_IVA_L1] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(1/[ARTS_FACTOR_HOMSTO],3) ,0) AS [M2xCaja] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2)) AS [Pre_M2_UN_Lista_con_IVA_L1] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)) AS [Pre_M2_UN_Cdo_con_IVA_L1] ,ROUND(IIf((IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))-(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))=0,(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2))),(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))+1),0) AS [Pre_M2_UN_Cdo_con_IVA_L1_Redond] FROM @Lista_precio_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) SELECT [@Lista_precio_2].ARTS_ARTICULO_EMP ,[@Lista_precio_2].ARTS_NOMBRE ,[@Lista_precio_2].[Pre_Lista_con_IVA_L1] ,[@Lista_precio_2].[M2xCaja] ,[@Lista_precio_2].[Pre_M2_UN_Lista_con_IVA_L1] ,[@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1] ,[@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1_Redond] ,'Venta por caja cerrada. Cada caja rinde ' + CAST(CAST([M2xCaja] AS DECIMAL(14,3)) AS NVARCHAR) + ' m2 aproximadamente.' AS [Texto_presentación] FROM @Lista_precio_2 WHERE ((([@Lista_precio_2].ARTS_ARTICULO_EMP)=@cod_art))");
    return M2xArt.recordsets;
  }
  catch (error){
    console.log(error);
  }
}

async function getComboArt(comboArt){
  try{
    let pool = await sql.connect(config.plataforma);
    let ComboxArt = await pool.request()
    .input('combo_Art', sql.Int, comboArt)
    .query("DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH(NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ,Clas_Art_2 VARCHAR(10) ,CA02_NOMBRE VARCHAR(30) ,ARTS_UNIMED_HOMSTO VARCHAR(3) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,ARVE_BLOQUEO_VENTA DECIMAL(1,0)) INSERT INTO @Lista_precio_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 AS [Clas_Art_2] ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARVE.ARVE_BLOQUEO_VENTA FROM (STOC_CA02 WITH (NOLOCK) INNER JOIN (STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO) ON STOC_CA02.CA02_CLASIF_2 = STOC_ARTS.ARTS_CLASIF_2) INNER JOIN STOC_ARVE WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = STOC_ARVE.ARVE_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARVE.ARVE_BLOQUEO_VENTA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1) AND ((STOC_ARVE.ARVE_BLOQUEO_VENTA)=0)) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_2 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ,Clas_Art_2 VARCHAR(10) ,CA02_NOMBRE VARCHAR(30) ,ARTS_UNIMED_HOMSTO VARCHAR(3) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,Precio_base_pesos_SI DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL(14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,2) ,M2xCaja DECIMAL(14,3) ,Pre_M2_UN_Lista_con_IVA_L1 DECIMAL(14,2) ,Pre_M2_UN_Cdo_con_IVA_L1 DECIMAL(14,2) ,Pre_M2_UN_Cdo_con_IVA_L1_Redond DECIMAL(14,0)) INSERT INTO @Lista_precio_2 SELECT [@Lista_precio_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1].ARTS_NOMBRE ,[@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1].CIMP_TASA ,[@Lista_precio_1].[Clas_Art_2] ,[@Lista_precio_1].CA02_NOMBRE ,[@Lista_precio_1].ARTS_UNIMED_HOMSTO ,[@Lista_precio_1].ARTS_FACTOR_HOMSTO ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [Precio_base_pesos_SI] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2) AS [Pre_Cdo_con_IVA_L1] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(1/[ARTS_FACTOR_HOMSTO],2) ,0) AS [M2xCaja] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2)) AS [Pre_M2_UN_Lista_con_IVA_L1] ,IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)) AS [Pre_M2_UN_Cdo_con_IVA_L1] ,ROUND(IIf((IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))-(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))=0,(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2))),(IIf([@Lista_precio_1].[Clas_Art_2]='0004',Round(((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100))*[ARTS_FACTOR_HOMSTO],2) ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2)))+1),0) AS [Pre_M2_UN_Cdo_con_IVA_L1_Redond] FROM @Lista_precio_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) SELECT VENT_CMBA.CMBA_COMBO_ART ,VENT_CMBA.CMBA_NOMBRE ,VENT_CMBA.CMBA_OBSERVACION ,VENT_CMBA.CMBA_DESARMABLE ,IIf([CMBA_DESARMABLE]=1,'Desarmable: este ítem se puede vender solo sin cantidad mínima','No desarmable: es posible que este ítem se venda en conjunto con otro ítem y/o se deba ajustar a una cantida mínima. Consultar') AS [Desarmable] ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_CMBD.CMBD_UNIMED ,VENT_CMBD.CMBD_CANTIDAD ,VENT_CMBD.CMBD_POR_DESC ,VENT_CMBA.CMBA_FECHA_VIG_DESDE ,VENT_CMBA.CMBA_FECHA_VIG_HASTA AS [Fecha_vigencia_hasta] ,[@Lista_precio_2].[Clas_Art_2] ,[@Lista_precio_2].[Pre_M2_UN_Lista_con_IVA_L1] ,[@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1] ,CAST(ROUND(IIf(([@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1])*(1-[CMBD_POR_DESC]/100)-[@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1]*(1-[CMBD_POR_DESC]/100)=0,[@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1]*(1-[CMBD_POR_DESC]/100) ,[@Lista_precio_2].[Pre_M2_UN_Cdo_con_IVA_L1]*(1-[CMBD_POR_DESC]/100)+1),0) AS DECIMAL(14,0)) AS [Pre_M2_UN_Cdo_con_IVA_L1_Redond_con_dto_combo] ,IIf(VENT_CMBD.[CMBD_CANTIDAD]>1,'Si compras ' + CAST(CAST([CMBD_CANTIDAD] AS DECIMAL(14,0)) AS NVARCHAR) + ' unidades, te ganas un descuento del ' + CAST(CAST([CMBD_POR_DESC] AS DECIMAL(14,1)) AS NVARCHAR) + '% y accedes a la oferta de...','Si compras sólo ' + CAST(CAST([CMBD_CANTIDAD] AS DECIMAL(14,0)) AS NVARCHAR) + ' unidad, te ganas un descuento del ' + CAST(CAST([CMBD_POR_DESC] AS DECIMAL(14,2)) AS NVARCHAR) + '% y accedes a la oferta de...') AS [Texto_presentacion] FROM ((VENT_CMBD WITH (NOLOCK) INNER JOIN VENT_CMBA WITH (NOLOCK) ON VENT_CMBD.CMBD_COMBO_ART = VENT_CMBA.CMBA_COMBO_ART) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_CMBD.CMBD_ARTICULO = STOC_ARTS.ARTS_ARTICULO) LEFT JOIN @Lista_precio_2 ON STOC_ARTS.ARTS_ARTICULO_EMP = [@Lista_precio_2].ARTS_ARTICULO_EMP WHERE (((VENT_CMBA.CMBA_COMBO_ART)=@combo_Art) AND ((VENT_CMBA.CMBA_FECHA_VIG_HASTA)>=CONVERT(date, GETDATE()) OR (VENT_CMBA.CMBA_FECHA_VIG_HASTA) Is Null)) ORDER BY VENT_CMBA.CMBA_COMBO_ART")
    return ComboxArt.recordsets
  }
  catch (error){
    console.log(error);
  }
}

  // Consulta Vbles. Entr. NP +
  async function getVblesEntrNP(diasAtras){
    try{
      let pool = await sql.connect(config.plataforma);
      let VblesEntrNP = await pool.request()
      .input('dias_atras', sql.Int, diasAtras)
      .query("DECLARE @NP_A_Considerar TABLE(Cod_Comp VARCHAR(30), Nomb_Comp VARCHAR(30)) INSERT INTO @NP_A_Considerar SELECT VENT_TCVE.TCVE_TIPO_COM AS Cod_Comp ,VENT_TCVE.TCVE_NOMBRE AS Nomb_Comp FROM VENT_TCVE WITH (NOLOCK) WHERE (((VENT_TCVE.TCVE_TIPO_COM)='NPC' OR (VENT_TCVE.TCVE_TIPO_COM)='NPG' OR (VENT_TCVE.TCVE_TIPO_COM)='NPT' OR (VENT_TCVE.TCVE_TIPO_COM)='PEA')) DECLARE @Compradores TABLE ( USUA_USUARIO VARCHAR(30), GRUS_GRUPO VARCHAR(30), Cod_Comp VARCHAR(3), Nomb_Comp VARCHAR(30)) INSERT INTO @Compradores SELECT SEGU_USUA.USUA_USUARIO ,SEGU_GRUS.GRUS_GRUPO ,IIf([USUA_USUARIO]='CAROLINA','SCC',IIf([USUA_USUARIO]='GESCOBAR','EGE',IIf([USUA_USUARIO]='LBORDOY','MLB',IIf([USUA_USUARIO]='SARAUJO','SMA',NULL)))) AS Cod_Comp ,IIf([USUA_USUARIO]='CAROLINA','Carolina',IIf([USUA_USUARIO]='GESCOBAR','Gabriel',IIf([USUA_USUARIO]='LBORDOY','Laura',IIf([USUA_USUARIO]='SARAUJO','Nino',NULL)))) AS Nomb_Comp FROM SEGU_USUA WITH (NOLOCK) INNER JOIN SEGU_GRUS WITH (NOLOCK) ON SEGU_USUA.USUA_USUARIO = SEGU_GRUS.GRUS_USUARIO WHERE (((SEGU_GRUS.GRUS_GRUPO)='COMPRA')) DECLARE @CTRL_AUTORIZ_NP TABLE (Cod_Crtl_Aut_NP SMALLINT, Nomb_Crtl_Aut_NP VARCHAR(30)) INSERT INTO @CTRL_AUTORIZ_NP VALUES (1, 'Límite de crédito total (A&F)'), (4, 'Días hist atraso pagos (A&F)'), (6, 'Destos modificados (VTAS)'), (7, 'Precios modificados (VTAS)') DECLARE @APROBACION_ESTADOS TABLE (Cod_Est_Aprob SMALLINT, Nomb_Est_Aprob VARCHAR(30)) INSERT INTO @APROBACION_ESTADOS VALUES (1,'Aprobado'), (2,'Pendiente de aprobar'), (3,'Desaprobado') DECLARE @VBLES_ENTR_NP_RESERVAS TABLE (RSDE_NUMINT_RSCA INT, RSDE_DIVISION_NPCA SMALLINT, RSDE_TIPO_NPCA VARCHAR(3), RSDE_NUMERO_NPCA DECIMAL(10,0), RSDE_RENGLON_NPDE SMALLINT, RSDE_CANT_RESER DECIMAL(14,4), RSCA_TIPO_RSCA VARCHAR(3), RSCU_MOVSTO_MOST INT ) INSERT INTO @VBLES_ENTR_NP_RESERVAS SELECT VENT_RSDE.RSDE_NUMINT_RSCA ,VENT_RSDE.RSDE_DIVISION_NPCA ,VENT_RSDE.RSDE_TIPO_NPCA ,VENT_RSDE.RSDE_NUMERO_NPCA ,VENT_RSDE.RSDE_RENGLON_NPDE ,VENT_RSDE.RSDE_CANT_RESER ,VENT_RSCA.RSCA_TIPO_RSCA ,VENT_RSCU.RSCU_MOVSTO_MOST FROM (VENT_RSDE WITH (NOLOCK) INNER JOIN VENT_RSCA WITH (NOLOCK) ON VENT_RSDE.RSDE_NUMINT_RSCA = VENT_RSCA.RSCA_NUMINT_RSCA) LEFT JOIN VENT_RSCU WITH (NOLOCK) ON VENT_RSDE.RSDE_NUMINT_RSCA = VENT_RSCU.RSCU_NUMINT_RSCA WHERE (((VENT_RSCU.RSCU_MOVSTO_MOST) Is Null)) DECLARE @VENT_NPAU_Crtl_Aut_1 TABLE (NPAU_DIVISION_NPCA SMALLINT, NPAU_TIPO_NPCA VARCHAR(3), NPAU_NUMERO_NPCA DECIMAL(10,0), Ctrl_Aut_1 SMALLINT, NPAU_ESTADO_APROB SMALLINT, NPAU_FECHA_APROB DATETIME, NPAU_APROB_AUTO DECIMAL(1,0), PAU_CAUSA_APROB SMALLINT, NPAU_USUARIO_APROB VARCHAR(8)) INSERT INTO @VENT_NPAU_Crtl_Aut_1 SELECT VENT_NPAU.NPAU_DIVISION_NPCA ,VENT_NPAU.NPAU_TIPO_NPCA ,VENT_NPAU.NPAU_NUMERO_NPCA ,VENT_NPAU.NPAU_CTRL_AUTORIZ AS [Ctrl_Aut_1] ,VENT_NPAU.NPAU_ESTADO_APROB ,VENT_NPAU.NPAU_FECHA_APROB ,VENT_NPAU.NPAU_APROB_AUTO ,VENT_NPAU.NPAU_CAUSA_APROB ,VENT_NPAU.NPAU_USUARIO_APROB FROM VENT_NPAU WITH (NOLOCK) WHERE (((VENT_NPAU.NPAU_CTRL_AUTORIZ)=1) AND ((VENT_NPAU.NPAU_ESTADO_APROB)=2)) DECLARE @VENT_NPAU_Crtl_Aut_4 TABLE (NPAU_DIVISION_NPCA SMALLINT, NPAU_TIPO_NPCA VARCHAR(3), NPAU_NUMERO_NPCA DECIMAL(10,0), Ctrl_Aut_4 SMALLINT, NPAU_ESTADO_APROB SMALLINT, NPAU_FECHA_APROB DATETIME, NPAU_APROB_AUTO DECIMAL(1,0), PAU_CAUSA_APROB SMALLINT, NPAU_USUARIO_APROB VARCHAR(8)) INSERT INTO @VENT_NPAU_Crtl_Aut_4 SELECT VENT_NPAU.NPAU_DIVISION_NPCA ,VENT_NPAU.NPAU_TIPO_NPCA ,VENT_NPAU.NPAU_NUMERO_NPCA ,VENT_NPAU.NPAU_CTRL_AUTORIZ AS [Ctrl_Aut_4] ,VENT_NPAU.NPAU_ESTADO_APROB ,VENT_NPAU.NPAU_FECHA_APROB ,VENT_NPAU.NPAU_APROB_AUTO ,VENT_NPAU.NPAU_CAUSA_APROB ,VENT_NPAU.NPAU_USUARIO_APROB FROM VENT_NPAU WITH (NOLOCK) WHERE (((VENT_NPAU.NPAU_CTRL_AUTORIZ)=4) AND ((VENT_NPAU.NPAU_ESTADO_APROB)=2)) DECLARE @VENT_NPAU_Crtl_Aut_6 TABLE (NPAU_DIVISION_NPCA SMALLINT, NPAU_TIPO_NPCA VARCHAR(3), NPAU_NUMERO_NPCA DECIMAL(10,0), Ctrl_Aut_6 SMALLINT, NPAU_ESTADO_APROB SMALLINT, NPAU_FECHA_APROB DATETIME, NPAU_APROB_AUTO DECIMAL(1,0), PAU_CAUSA_APROB SMALLINT, NPAU_USUARIO_APROB VARCHAR(8)) INSERT INTO @VENT_NPAU_Crtl_Aut_6 SELECT VENT_NPAU.NPAU_DIVISION_NPCA ,VENT_NPAU.NPAU_TIPO_NPCA ,VENT_NPAU.NPAU_NUMERO_NPCA ,VENT_NPAU.NPAU_CTRL_AUTORIZ AS [Ctrl_Aut_6] ,VENT_NPAU.NPAU_ESTADO_APROB ,VENT_NPAU.NPAU_FECHA_APROB ,VENT_NPAU.NPAU_APROB_AUTO ,VENT_NPAU.NPAU_CAUSA_APROB ,VENT_NPAU.NPAU_USUARIO_APROB FROM VENT_NPAU WITH (NOLOCK) WHERE (((VENT_NPAU.NPAU_CTRL_AUTORIZ)=6) AND ((VENT_NPAU.NPAU_ESTADO_APROB)=2)) DECLARE @VENT_NPAU_Crtl_Aut_7 TABLE (NPAU_DIVISION_NPCA SMALLINT, NPAU_TIPO_NPCA VARCHAR(3), NPAU_NUMERO_NPCA DECIMAL(10,0), Ctrl_Aut_7 SMALLINT, NPAU_ESTADO_APROB SMALLINT, NPAU_FECHA_APROB DATETIME, NPAU_APROB_AUTO DECIMAL(1,0), PAU_CAUSA_APROB SMALLINT, NPAU_USUARIO_APROB VARCHAR(8)) INSERT INTO @VENT_NPAU_Crtl_Aut_7 SELECT VENT_NPAU.NPAU_DIVISION_NPCA ,VENT_NPAU.NPAU_TIPO_NPCA ,VENT_NPAU.NPAU_NUMERO_NPCA ,VENT_NPAU.NPAU_CTRL_AUTORIZ AS [Ctrl_Aut_7] ,VENT_NPAU.NPAU_ESTADO_APROB ,VENT_NPAU.NPAU_FECHA_APROB ,VENT_NPAU.NPAU_APROB_AUTO ,VENT_NPAU.NPAU_CAUSA_APROB ,VENT_NPAU.NPAU_USUARIO_APROB FROM VENT_NPAU WITH (NOLOCK) WHERE (((VENT_NPAU.NPAU_CTRL_AUTORIZ)=7) AND ((VENT_NPAU.NPAU_ESTADO_APROB)=2)) DECLARE @Vbles_Entr_NP_Base_1 TABLE ( [Cod_Vend] VARCHAR(4), [Nomb_Vend] VARCHAR(30), [Fecha_Emi] DATE, [Cod_Client] INT, CLIE_NOMBRE VARCHAR(70), CLIE_CLASIF_6 VARCHAR(4), NPCE_NOMBRE VARCHAR(90), [Nomb_Client] VARCHAR(90), NPDE_DIVISION_NPCA SMALLINT, [Tipo_NP] VARCHAR(3), [Nro_NP] DECIMAL(10,0), [Renglon_NP] SMALLINT, NPDE_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), [Cod_Art] VARCHAR(30), ARTS_NOMBRE VARCHAR(70), [Nombre_Art] VARCHAR(70), Uni VARCHAR(3), [Fecha_Entr_Cabec] DATETIME, [Fecha_Entr_Item] DATETIME, [Verif_fecha_entr] VARCHAR(70), NPDE_CANT_PEDIDA DECIMAL(18,2), [Cant_Ped] DECIMAL(18,0), NPDE_CANT_FACTUR DECIMAL(18,2), [Cant_Fact] DECIMAL(18,0), NPDE_CANT_ENTREG DECIMAL(18,2), [Cant_Entr] DECIMAL(18,0), [A_Entr] DECIMAL(18,2), [A_Entregar] DECIMAL(18,0), [Cant_Reserv] DECIMAL(18,0), [Sin_Reser] DECIMAL(18,0), [Tipo_Reserv] VARCHAR(3), [Listo_p_Entr] VARCHAR(30), [Cod_Tte_Cab_NP] VARCHAR(4), [Observacion_NP] NVARCHAR(max), Nomb_Est_Aprob VARCHAR(30), NPCA_OBSER_APROB NVARCHAR(max), [Observ_Aproba] NVARCHAR(max), [Ctrl_Aut_1] VARCHAR(30), [CtrlAut1] VARCHAR(30), [Ctrl_Aut_4] VARCHAR(30), [CtrlAut4] VARCHAR(30), [Ctrl_Aut_6] VARCHAR(30), [CtrlAut6] VARCHAR(30), [Ctrl_Aut_7] VARCHAR(30), [CtrlAut7] VARCHAR(30), NPCA_CLASIF_NPCV_1 VARCHAR(4), [Nombre_Canal_Vta] VARCHAR(30), ARTS_TIPO_ART VARCHAR(3), NPDE_CLASIF_NPDE_1 CHAR(4), NPCA_VEHICULO VARCHAR(6), NPCA_RENGLON_DIR SMALLINT, CLIE_ZONA_VENTA VARCHAR(4), [Kg_Art] DECIMAL(14,4), ARTS_CLASIF_2 VARCHAR(10) ) INSERT INTO @Vbles_Entr_NP_Base_1 SELECT SIST_VEND.VEND_VENDEDOR AS [Cod_Vend] ,SIST_VEND.VEND_NOMBRE AS [Nomb_Vend] ,FORMAT(CAST(VENT_NPCA.NPCA_FECHA_EMI as DATE), 'yyyy-MM-dd') AS [Fecha_Emi] ,VENT_NPCA.NPCA_CLIENTE AS [Cod_Client] ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_CLIE.CLIE_CLASIF_6 ,VENT_NPCE.NPCE_NOMBRE ,(CASE WHEN VENT_NPCE.[NPCE_NOMBRE] = [NPCE_NOMBRE] THEN [NPCE_NOMBRE] ELSE [CLIE_NOMBRE] END) AS [Nomb_Client] ,VENT_NPDE.NPDE_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA AS [Tipo_NP] ,VENT_NPCA.NPCA_NUMERO_NPCA AS [Nro_NP] ,VENT_NPDE.NPDE_RENGLON AS [Renglon_NP] ,VENT_NPDE.NPDE_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,(CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [ARTS_ARTICULO_EMP] END) AS [Cod_Art] ,STOC_ARTS.ARTS_NOMBRE ,(CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN ' Falta CANAL VENTAS ' ELSE [ARTS_NOMBRE] END) AS [Nombre_Art] ,VENT_NPDE.NPDE_UNIMED AS Uni ,VENT_NPCA.NPCA_FEC_ENT_BASE AS [Fecha_Entr_Cabec] ,VENT_NPDE.NPDE_FECHA_ENTREGA AS [Fecha_Entr_Item] ,(CASE WHEN VENT_NPDE.NPDE_FECHA_ENTREGA > DATEADD(day, 6, getdate()) THEN 'Verif. tiempo entrega' ELSE (CASE WHEN VENT_NPCA.NPCA_FEC_ENT_BASE<>VENT_NPDE.NPDE_FECHA_ENTREGA THEN 'Difer.fecha item<>fecha cabec' ELSE NULL END) END) AS [Verif_fecha_entr] ,CONVERT(DECIMAL(18,2),VENT_NPDE.NPDE_CANT_PEDIDA) AS NPDE_CANT_PEDIDA ,CONVERT(DECIMAL,CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [NPDE_CANT_PEDIDA] END) AS [Cant_Ped] ,CONVERT(DECIMAL(18,2),VENT_NPDE.NPDE_CANT_FACTUR) AS NPDE_CANT_FACTUR ,CONVERT(DECIMAL,CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [NPDE_CANT_FACTUR] END) AS [Cant_Fact] ,CONVERT(DECIMAL(18,2),VENT_NPDE.NPDE_CANT_ENTREG) AS NPDE_CANT_ENTREG ,CONVERT(DECIMAL,CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [NPDE_CANT_ENTREG] END) AS [Cant_Entr] ,CONVERT(DECIMAL(18,2),[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG]) AS [A_Entr] ,CONVERT(DECIMAL, CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE ([NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG]) END) AS [A_Entregar] ,CONVERT(DECIMAL, CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [@VBLES_ENTR_NP_RESERVAS].RSDE_CANT_RESER END) AS [Cant_Reserv] ,CONVERT(DECIMAL, CASE WHEN VENT_NPCA.[NPCA_CLASIF_NPCV_1]='-' THEN NULL ELSE (CASE WHEN STOC_ARTS.[ARTS_TIPO_ART]='012' THEN 0 ELSE (CASE WHEN STOC_ARTS.[ARTS_TIPO_ART]='011' THEN 0 ELSE ((CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] END)-(CASE WHEN (CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [@VBLES_ENTR_NP_RESERVAS].RSDE_CANT_RESER END)=(CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [@VBLES_ENTR_NP_RESERVAS].RSDE_CANT_RESER END) THEN (CASE WHEN VENT_NPCA.NPCA_CLASIF_NPCV_1 = '-' THEN NULL ELSE [@VBLES_ENTR_NP_RESERVAS].RSDE_CANT_RESER END) ELSE 0 END))END)END)END) AS [Sin_Reser] ,[@VBLES_ENTR_NP_RESERVAS].RSCA_TIPO_RSCA AS [Tipo_Reserv] ,(CASE WHEN [@VBLES_ENTR_NP_RESERVAS].RSCA_TIPO_RSCA = 'REO' THEN CCOB_CPV2.CPV2_NOMBRE ELSE NULL END) AS [Listo_p_Entr] ,VENT_NPCA.NPCA_FLETE AS [Cod_Tte_Cab_NP] ,VENT_NPCA.NPCA_OBSERVACION AS [Observacion_NP] ,[@APROBACION_ESTADOS].Nomb_Est_Aprob ,VENT_NPCA.NPCA_OBSER_APROB ,(CASE WHEN [@APROBACION_ESTADOS].Nomb_Est_Aprob='Aprobado' THEN NULL ELSE VENT_NPCA.NPCA_OBSER_APROB END) AS [Observ_Aproba] ,[Crtl_Autoriz_NP].[Nomb_Crtl_Aut_NP] AS [Ctrl_Aut_1] ,(CASE WHEN [@APROBACION_ESTADOS].Nomb_Est_Aprob='Aprobado' THEN NULL ELSE [Ctrl_Aut_1] END) AS [CtrlAut1] ,[Crtl_Autoriz_NP_1].[Nomb_Crtl_Aut_NP] AS [Ctrl_Aut_4] ,(CASE WHEN [@APROBACION_ESTADOS].Nomb_Est_Aprob='Aprobado' THEN NULL ELSE [Ctrl_Aut_4] END) AS [CtrlAut4] ,[Crtl_Autoriz_NP_2].[Nomb_Crtl_Aut_NP] AS [Ctrl_Aut_6] ,(CASE WHEN [@APROBACION_ESTADOS].Nomb_Est_Aprob='Aprobado' THEN NULL ELSE [Ctrl_Aut_6] END) AS [CtrlAut6] ,[Crtl_Autoriz_NP_3].[Nomb_Crtl_Aut_NP] AS [Ctrl_Aut_7] ,(CASE WHEN [@APROBACION_ESTADOS].Nomb_Est_Aprob='Aprobado' THEN NULL ELSE [Ctrl_Aut_7] END) AS [CtrlAut7] ,VENT_NPCA.NPCA_CLASIF_NPCV_1 ,CCOB_CPV1.CPV1_NOMBRE AS [Nombre_Canal_Vta] ,STOC_ARTS.ARTS_TIPO_ART ,VENT_NPDE.NPDE_CLASIF_NPDE_1 ,VENT_NPCA.NPCA_VEHICULO ,VENT_NPCA.NPCA_RENGLON_DIR ,CCOB_CLIE.CLIE_ZONA_VENTA ,STOC_ARTS.ARTS_PESO_EMB_UMS AS [Kg_Art] ,STOC_ARTS.ARTS_CLASIF_2 FROM ((((((((((@APROBACION_ESTADOS INNER JOIN (CCOB_CPV1 WITH (NOLOCK) INNER JOIN ((CCOB_CPV2 WITH (NOLOCK) INNER JOIN ((SIST_VEND WITH (NOLOCK) INNER JOIN (VENT_NPVE WITH (NOLOCK) INNER JOIN ((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA)) INNER JOIN @NP_A_Considerar ON VENT_NPDE.NPDE_TIPO_NPCA = [@NP_A_Considerar].[Cod_Comp]) ON (VENT_NPVE.NPVE_DIVISION_NPCA = VENT_NPCA.NPCA_DIVISION_NPCA) AND (VENT_NPVE.NPVE_TIPO_NPCA = VENT_NPCA.NPCA_TIPO_NPCA) AND (VENT_NPVE.NPVE_NUMERO_NPCA = VENT_NPCA.NPCA_NUMERO_NPCA)) ON SIST_VEND.VEND_VENDEDOR = VENT_NPVE.NPVE_VENDEDOR) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON CCOB_CPV2.CPV2_CLASIF_NPCV_2 = VENT_NPCA.NPCA_CLASIF_NPCV_2) INNER JOIN CCOB_CLIE WITH (NOLOCK) ON VENT_NPCA.NPCA_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) ON CCOB_CPV1.CPV1_CLASIF_NPCV_1 = VENT_NPCA.NPCA_CLASIF_NPCV_1) ON [@APROBACION_ESTADOS].Cod_Est_Aprob = VENT_NPCA.NPCA_ESTADO_APROB) LEFT JOIN @VENT_NPAU_Crtl_Aut_1 ON (VENT_NPDE.NPDE_NUMERO_NPCA = [@VENT_NPAU_Crtl_Aut_1].NPAU_NUMERO_NPCA) AND (VENT_NPDE.NPDE_TIPO_NPCA = [@VENT_NPAU_Crtl_Aut_1].NPAU_TIPO_NPCA) AND (VENT_NPDE.NPDE_DIVISION_NPCA = [@VENT_NPAU_Crtl_Aut_1].NPAU_DIVISION_NPCA)) LEFT JOIN @CTRL_AUTORIZ_NP AS [Crtl_Autoriz_NP] ON [@VENT_NPAU_Crtl_Aut_1].[Ctrl_Aut_1] = [Crtl_Autoriz_NP].[Cod_Crtl_Aut_NP]) LEFT JOIN @VENT_NPAU_Crtl_Aut_4 ON (VENT_NPDE.NPDE_NUMERO_NPCA = [@VENT_NPAU_Crtl_Aut_4].NPAU_NUMERO_NPCA) AND (VENT_NPDE.NPDE_TIPO_NPCA = [@VENT_NPAU_Crtl_Aut_4].NPAU_TIPO_NPCA) AND (VENT_NPDE.NPDE_DIVISION_NPCA = [@VENT_NPAU_Crtl_Aut_4].NPAU_DIVISION_NPCA)) LEFT JOIN @CTRL_AUTORIZ_NP AS [Crtl_Autoriz_NP_1] ON [@VENT_NPAU_Crtl_Aut_4].[Ctrl_Aut_4] = [Crtl_Autoriz_NP_1].[Cod_Crtl_Aut_NP]) LEFT JOIN @VENT_NPAU_Crtl_Aut_6 ON (VENT_NPDE.NPDE_NUMERO_NPCA = [@VENT_NPAU_Crtl_Aut_6].NPAU_NUMERO_NPCA) AND (VENT_NPDE.NPDE_TIPO_NPCA = [@VENT_NPAU_Crtl_Aut_6].NPAU_TIPO_NPCA) AND (VENT_NPDE.NPDE_DIVISION_NPCA = [@VENT_NPAU_Crtl_Aut_6].NPAU_DIVISION_NPCA)) LEFT JOIN @CTRL_AUTORIZ_NP AS [Crtl_Autoriz_NP_2] ON [@VENT_NPAU_Crtl_Aut_6].[Ctrl_Aut_6] = [Crtl_Autoriz_NP_2].[Cod_Crtl_Aut_NP]) LEFT JOIN @VENT_NPAU_Crtl_Aut_7 ON (VENT_NPDE.NPDE_NUMERO_NPCA = [@VENT_NPAU_Crtl_Aut_7].NPAU_NUMERO_NPCA) AND (VENT_NPDE.NPDE_TIPO_NPCA = [@VENT_NPAU_Crtl_Aut_7].NPAU_TIPO_NPCA) AND (VENT_NPDE.NPDE_DIVISION_NPCA = [@VENT_NPAU_Crtl_Aut_7].NPAU_DIVISION_NPCA)) LEFT JOIN @CTRL_AUTORIZ_NP AS [Crtl_Autoriz_NP_3] ON [@VENT_NPAU_Crtl_Aut_7].[Ctrl_Aut_7] = [Crtl_Autoriz_NP_3].[Cod_Crtl_Aut_NP]) LEFT JOIN VENT_NPCE ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPCE.NPCE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPCE.NPCE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPCE.NPCE_DIVISION_NPCA)) LEFT JOIN @VBLES_ENTR_NP_RESERVAS ON (VENT_NPDE.NPDE_RENGLON = [@VBLES_ENTR_NP_RESERVAS].RSDE_RENGLON_NPDE) AND (VENT_NPDE.NPDE_NUMERO_NPCA = [@VBLES_ENTR_NP_RESERVAS].RSDE_NUMERO_NPCA) AND (VENT_NPDE.NPDE_TIPO_NPCA = [@VBLES_ENTR_NP_RESERVAS].RSDE_TIPO_NPCA) AND (VENT_NPDE.NPDE_DIVISION_NPCA = [@VBLES_ENTR_NP_RESERVAS].RSDE_DIVISION_NPCA) WHERE (((STOC_ARTS.ARTS_ARTICULO_EMP) Not LIKE 99999999) AND (([NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG])>0) AND ((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null) AND ((CASE WHEN CAST(VENT_NPCA.NPCA_FECHA_EMI AS datetime)>= CONVERT(date, GETDATE()-@dias_atras) THEN 1 ELSE 0 END) = 1)) DECLARE @Vbles_Entr_NP_Base_2 TABLE ( [Cod_Vend] VARCHAR(4), [Nomb_Vend] VARCHAR(30), [Fecha_Emi] DATE, [Cod_Client] INT, CLIE_NOMBRE VARCHAR(70), CLIE_CLASIF_6 VARCHAR(4), NPCE_NOMBRE VARCHAR(90), [Nomb_Client] VARCHAR(90), NPDE_DIVISION_NPCA SMALLINT, [Tipo_NP] VARCHAR(3), [Nro_NP] DECIMAL(10,0), [Renglon_NP] SMALLINT, NPDE_ARTICULO INT, [Cod_Art] VARCHAR(30), [Nombre_Art] VARCHAR(70), Uni VARCHAR(3), [Fecha_Entr_Cabec] DATETIME, [Fecha_Entr_Item] DATETIME, [Verif_fecha_entr] VARCHAR(70), [Cant_Ped] DECIMAL(18,0), [Cant_Fact] DECIMAL(18,0), [Cant_Entr] DECIMAL(18,0), [A_Entregar] DECIMAL(18,0), [Cant_Reserv] DECIMAL(18,0), [Sin_Reser] DECIMAL(18,0), [Tipo_Reserv] VARCHAR(3), [Listo_p_Entr] VARCHAR(30), [Cod_Tte_Cab_NP] VARCHAR(4), [Tte_Item] VARCHAR(30), Vehiculo VARCHAR(40), Domicilio VARCHAR(60), Localidad VARCHAR(50), [Observacion_NP] NVARCHAR(max), Nomb_Est_Aprob VARCHAR(30), NPCA_OBSER_APROB NVARCHAR(max), [Observ_Aproba] NVARCHAR(max), [Ctrl_Aut_1] VARCHAR(30), [CtrlAut1] VARCHAR(30), [Ctrl_Aut_4] VARCHAR(30), [CtrlAut4] VARCHAR(30), [Ctrl_Aut_6] VARCHAR(30), [CtrlAut6] VARCHAR(30), [Ctrl_Aut_7] VARCHAR(30), [CtrlAut7] VARCHAR(30), NPCA_CLASIF_NPCV_1 VARCHAR(4), [Nombre_Canal_Vta] VARCHAR(30), ARTS_TIPO_ART VARCHAR(3), [Zona_Vta] VARCHAR(4), [Nombre_Zona_Vta] VARCHAR(30), NPCA_IMP_TOT_ORI DECIMAL(14,2), [Kg_Art] DECIMAL(14,4), ARTS_CLASIF_2 VARCHAR(10) ) INSERT INTO @Vbles_Entr_NP_Base_2 SELECT [@Vbles_Entr_NP_Base_1].[Cod_Vend] ,[@Vbles_Entr_NP_Base_1].[Nomb_Vend] ,[@Vbles_Entr_NP_Base_1].[Fecha_Emi] ,[@Vbles_Entr_NP_Base_1].[Cod_Client] ,[@Vbles_Entr_NP_Base_1].CLIE_NOMBRE ,[@Vbles_Entr_NP_Base_1].CLIE_CLASIF_6 ,[@Vbles_Entr_NP_Base_1].NPCE_NOMBRE ,[@Vbles_Entr_NP_Base_1].[Nomb_Client] ,[@Vbles_Entr_NP_Base_1].NPDE_DIVISION_NPCA ,[@Vbles_Entr_NP_Base_1].[Tipo_NP] ,[@Vbles_Entr_NP_Base_1].[Nro_NP] ,[@Vbles_Entr_NP_Base_1].[Renglon_NP] ,[@Vbles_Entr_NP_Base_1].NPDE_ARTICULO ,[@Vbles_Entr_NP_Base_1].[Cod_Art] ,[@Vbles_Entr_NP_Base_1].[Nombre_Art] ,[@Vbles_Entr_NP_Base_1].Uni ,[@Vbles_Entr_NP_Base_1].[Fecha_Entr_Cabec] ,[@Vbles_Entr_NP_Base_1].[Fecha_Entr_Item] ,[@Vbles_Entr_NP_Base_1].[Verif_fecha_entr] ,[@Vbles_Entr_NP_Base_1].[Cant_Ped] ,[@Vbles_Entr_NP_Base_1].[Cant_Fact] ,[@Vbles_Entr_NP_Base_1].[Cant_Entr] ,[@Vbles_Entr_NP_Base_1].[A_Entregar] ,[@Vbles_Entr_NP_Base_1].[Cant_Reserv] ,[@Vbles_Entr_NP_Base_1].[Sin_Reser] ,[@Vbles_Entr_NP_Base_1].[Tipo_Reserv] ,[@Vbles_Entr_NP_Base_1].[Listo_p_Entr] ,[@Vbles_Entr_NP_Base_1].[Cod_Tte_Cab_NP] ,SIST_FLET.FLET_NOMBRE AS [Tte_Item] ,DIST_VEHI.VEHI_NOMBRE AS Vehiculo ,CCOB_DCLI.DCLI_DOMICILIO AS Domicilio ,CCOB_DCLI.DCLI_LOCALIDAD AS Localidad ,[@Vbles_Entr_NP_Base_1].[Observacion_NP] ,[@Vbles_Entr_NP_Base_1].[Nomb_Est_Aprob] ,[@Vbles_Entr_NP_Base_1].NPCA_OBSER_APROB ,[@Vbles_Entr_NP_Base_1].[Observ_Aproba] ,[@Vbles_Entr_NP_Base_1].[Ctrl_Aut_1] ,[@Vbles_Entr_NP_Base_1].[CtrlAut1] ,[@Vbles_Entr_NP_Base_1].[Ctrl_Aut_4] ,[@Vbles_Entr_NP_Base_1].[CtrlAut4] ,[@Vbles_Entr_NP_Base_1].[Ctrl_Aut_6] ,[@Vbles_Entr_NP_Base_1].[CtrlAut6] ,[@Vbles_Entr_NP_Base_1].[Ctrl_Aut_7] ,[@Vbles_Entr_NP_Base_1].[CtrlAut7] ,[@Vbles_Entr_NP_Base_1].NPCA_CLASIF_NPCV_1 ,[@Vbles_Entr_NP_Base_1].[Nombre_Canal_Vta] ,[@Vbles_Entr_NP_Base_1].ARTS_TIPO_ART ,[@Vbles_Entr_NP_Base_1].CLIE_ZONA_VENTA AS [Zona_Vta] ,SIST_ZVEN.ZVEN_NOMBRE AS [Nombre_Zona_Vta] ,VENT_NPCA.NPCA_IMP_TOT_ORI ,[@Vbles_Entr_NP_Base_1].[Kg_Art] ,[@Vbles_Entr_NP_Base_1].ARTS_CLASIF_2 FROM (SIST_ZVEN WITH (NOLOCK) INNER JOIN (CCOB_DCLI WITH (NOLOCK) INNER JOIN ((@Vbles_Entr_NP_Base_1 LEFT JOIN SIST_FLET WITH (NOLOCK) ON [@Vbles_Entr_NP_Base_1].NPDE_CLASIF_NPDE_1 = SIST_FLET.FLET_FLETE) LEFT JOIN DIST_VEHI WITH (NOLOCK) ON [@Vbles_Entr_NP_Base_1].NPCA_VEHICULO = DIST_VEHI.VEHI_VEHICULO) ON (CCOB_DCLI.DCLI_CLIENTE = [@Vbles_Entr_NP_Base_1].[Cod_Client]) AND (CCOB_DCLI.DCLI_RENGLON = [@Vbles_Entr_NP_Base_1].NPCA_RENGLON_DIR)) ON SIST_ZVEN.ZVEN_ZONA_VENTA = [@Vbles_Entr_NP_Base_1].CLIE_ZONA_VENTA) INNER JOIN VENT_NPCA WITH (NOLOCK) ON ([@Vbles_Entr_NP_Base_1].NPDE_DIVISION_NPCA = VENT_NPCA.NPCA_DIVISION_NPCA) AND ([@Vbles_Entr_NP_Base_1].[Tipo_NP] = VENT_NPCA.NPCA_TIPO_NPCA) AND ([@Vbles_Entr_NP_Base_1].[Nro_NP] = VENT_NPCA.NPCA_NUMERO_NPCA) DECLARE @Vbles_Entr_NP_Base_3 TABLE ( [Cod_Vend] VARCHAR(4), [Nomb_Vend] VARCHAR(30), [Fecha_Emi] DATE, [Cod_Client] INT, CLIE_NOMBRE VARCHAR(70), CLIE_CLASIF_6 VARCHAR(4), NPCE_NOMBRE VARCHAR(90), [Nomb_Client] VARCHAR(90), NPDE_DIVISION_NPCA SMALLINT, [Tipo_NP] VARCHAR(3), [Nro_NP] DECIMAL(10,0), [Renglon_NP] SMALLINT, [Cod_Art] VARCHAR(30), [Nombre_Art] VARCHAR(70), Uni VARCHAR(3), [Fecha_Entr_Cabec] DATETIME, [Fecha_Entr_Item] DATETIME, [Verif_fecha_entr] VARCHAR(70), [Cant_Ped] DECIMAL(18,0), [Cant_Fact] DECIMAL(18,0), [Cant_Entr] DECIMAL(18,0), [A_Entregar] DECIMAL(18,0), [Cant_Reserv] DECIMAL(18,0), [Sin_Reser] DECIMAL(18,0), [Tipo_Reserv] VARCHAR(3), [Listo_p_Entr] VARCHAR(30), [Cod_Tte_Cab_NP] VARCHAR(4), [Tte_Cab_NP] VARCHAR(30), [Tte_Item] VARCHAR(30), [Verif_Tte] VARCHAR(30), Vehiculo VARCHAR(40), Domicilio VARCHAR(60), Localidad VARCHAR(50), [Observacion_NP] NVARCHAR(max), Nomb_Est_Aprob VARCHAR(30), NPCA_OBSER_APROB NVARCHAR(max), [Observ_Aproba] NVARCHAR(max), [Ctrl_Aut_1] VARCHAR(30), [CtrlAut1] VARCHAR(30), [Ctrl_Aut_4] VARCHAR(30), [CtrlAut4] VARCHAR(30), [Ctrl_Aut_6] VARCHAR(30), [CtrlAut6] VARCHAR(30), [Ctrl_Aut_7] VARCHAR(30), [CtrlAut7] VARCHAR(30), NPCA_CLASIF_NPCV_1 VARCHAR(4), [Nombre_Canal_Vta] VARCHAR(30), ARTS_TIPO_ART VARCHAR(3), [Zona_Vta] VARCHAR(4), [Nombre_Zona_Vta] VARCHAR(30), NPCA_IMP_TOT_ORI DECIMAL(14,2), ARCO_RUBRO_COMPRA VARCHAR(6), RUBC_NOMBRE VARCHAR(30), [Cod_Compr] VARCHAR(3), [Kg_Art] DECIMAL(14,4), ARTS_CLASIF_2 VARCHAR(10) ) INSERT INTO @Vbles_Entr_NP_Base_3 SELECT [@Vbles_Entr_NP_Base_2].[Cod_Vend] ,[@Vbles_Entr_NP_Base_2].[Nomb_Vend] ,[@Vbles_Entr_NP_Base_2].[Fecha_Emi] ,[@Vbles_Entr_NP_Base_2].[Cod_Client] ,[@Vbles_Entr_NP_Base_2].CLIE_NOMBRE ,[@Vbles_Entr_NP_Base_2].CLIE_CLASIF_6 ,[@Vbles_Entr_NP_Base_2].NPCE_NOMBRE ,[@Vbles_Entr_NP_Base_2].[Nomb_Client] ,[@Vbles_Entr_NP_Base_2].NPDE_DIVISION_NPCA ,[@Vbles_Entr_NP_Base_2].[Tipo_NP] ,[@Vbles_Entr_NP_Base_2].[Nro_NP] ,[@Vbles_Entr_NP_Base_2].[Renglon_NP] ,[@Vbles_Entr_NP_Base_2].[Cod_Art] ,[@Vbles_Entr_NP_Base_2].[Nombre_Art] ,[@Vbles_Entr_NP_Base_2].Uni ,[@Vbles_Entr_NP_Base_2].[Fecha_Entr_Cabec] ,[@Vbles_Entr_NP_Base_2].[Fecha_Entr_Item] ,[@Vbles_Entr_NP_Base_2].[Verif_fecha_entr] ,[@Vbles_Entr_NP_Base_2].[Cant_Ped] ,[@Vbles_Entr_NP_Base_2].[Cant_Fact] ,[@Vbles_Entr_NP_Base_2].[Cant_Entr] ,[@Vbles_Entr_NP_Base_2].[A_Entregar] ,[@Vbles_Entr_NP_Base_2].[Cant_Reserv] ,[@Vbles_Entr_NP_Base_2].[Sin_Reser] ,[@Vbles_Entr_NP_Base_2].[Tipo_Reserv] ,[@Vbles_Entr_NP_Base_2].[Listo_p_Entr] ,[@Vbles_Entr_NP_Base_2].[Cod_Tte_Cab_NP] ,SIST_FLET.FLET_NOMBRE AS [Tte_Cab_NP] ,[@Vbles_Entr_NP_Base_2].[Tte_Item] ,IIf(SIST_FLET.FLET_NOMBRE<>[@Vbles_Entr_NP_Base_2].[Tte_Item],'Verificar Transporte',NULL) AS [Verif_Tte] ,[@Vbles_Entr_NP_Base_2].Vehiculo ,[@Vbles_Entr_NP_Base_2].Domicilio ,[@Vbles_Entr_NP_Base_2].Localidad ,[@Vbles_Entr_NP_Base_2].[Observacion_NP] ,[@Vbles_Entr_NP_Base_2].[Nomb_Est_Aprob] ,[@Vbles_Entr_NP_Base_2].NPCA_OBSER_APROB ,[@Vbles_Entr_NP_Base_2].[Observ_Aproba] ,[@Vbles_Entr_NP_Base_2].[Ctrl_Aut_1] ,[@Vbles_Entr_NP_Base_2].[CtrlAut1] ,[@Vbles_Entr_NP_Base_2].[Ctrl_Aut_4] ,[@Vbles_Entr_NP_Base_2].[CtrlAut4] ,[@Vbles_Entr_NP_Base_2].[Ctrl_Aut_6] ,[@Vbles_Entr_NP_Base_2].[CtrlAut6] ,[@Vbles_Entr_NP_Base_2].[Ctrl_Aut_7] ,[@Vbles_Entr_NP_Base_2].[CtrlAut7] ,[@Vbles_Entr_NP_Base_2].NPCA_CLASIF_NPCV_1 ,[@Vbles_Entr_NP_Base_2].[Nombre_Canal_Vta] ,[@Vbles_Entr_NP_Base_2].ARTS_TIPO_ART ,[@Vbles_Entr_NP_Base_2].[Zona_Vta] ,[@Vbles_Entr_NP_Base_2].[Nombre_Zona_Vta] ,[@Vbles_Entr_NP_Base_2].NPCA_IMP_TOT_ORI ,STOC_ARCO.ARCO_RUBRO_COMPRA ,CPAG_RUBC.RUBC_NOMBRE ,Left([RUBC_NOMBRE],3) AS [Cod_Compr] ,[@Vbles_Entr_NP_Base_2].[Kg_Art] ,[@Vbles_Entr_NP_Base_2].ARTS_CLASIF_2 FROM ((@Vbles_Entr_NP_Base_2 INNER JOIN SIST_FLET WITH (NOLOCK) ON [@Vbles_Entr_NP_Base_2].[Cod_Tte_Cab_NP] = SIST_FLET.FLET_FLETE) LEFT JOIN STOC_ARCO WITH (NOLOCK) ON [@Vbles_Entr_NP_Base_2].NPDE_ARTICULO = STOC_ARCO.ARCO_ARTICULO) LEFT JOIN CPAG_RUBC WITH (NOLOCK) ON STOC_ARCO.ARCO_RUBRO_COMPRA = CPAG_RUBC.RUBC_RUBRO_COMPRA ORDER BY [@Vbles_Entr_NP_Base_2].[Fecha_Emi] ,[@Vbles_Entr_NP_Base_2].[Nro_NP] ,[@Vbles_Entr_NP_Base_2].[Renglon_NP] DECLARE @VBLES_ENTR_NP_VINCUL_1 TABLE ( [Cod_Vend] VARCHAR(4), [Nomb_Vend] VARCHAR(30), [Fecha_Emi] DATE, [Cod_Client] INT, [Nomb_Client] VARCHAR(90), NPCA_DIVISION_NPCA SMALLINT, [Tipo_NP] VARCHAR(3), [Nro_NP] DECIMAL(10,0), [Renglon_NP] SMALLINT, [Cod_Art] VARCHAR(30), [Nombre_Art] VARCHAR(70), Uni VARCHAR(3), [Fecha_Entr] DATETIME, [Cant_Ped] DECIMAL(18,0), [Cant_Fact] DECIMAL(18,0), [Cant_Entr] DECIMAL(18,0), [A_Entregar] DECIMAL(18,0) ) INSERT INTO @VBLES_ENTR_NP_VINCUL_1 SELECT VENT_NPVE.NPVE_VENDEDOR AS [Cod_Vend] ,SIST_VEND.VEND_NOMBRE AS [Nomb_Vend] ,VENT_NPCA.NPCA_FECHA_EMI AS [Fecha_Emi] ,VENT_NPCA.NPCA_CLIENTE AS [Cod_Client] ,(CASE WHEN VENT_NPCE.[NPCE_NOMBRE] = [NPCE_NOMBRE] THEN [NPCE_NOMBRE] ELSE [CLIE_NOMBRE] END) AS [Nomb_Client] ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA AS [Tipo_NP] ,VENT_NPCA.NPCA_NUMERO_NPCA AS [Nro_NP] ,VENT_NPDE.NPDE_RENGLON AS [Renglon_NP] ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cod_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,VENT_NPDE.NPDE_UNIMED AS Uni ,VENT_NPDE.NPDE_FECHA_ENTREGA AS [Fecha_Entr] ,VENT_NPDE.NPDE_CANT_PEDIDA AS [Cant_Ped] ,VENT_NPDE.NPDE_CANT_FACTUR AS [Cant_Fact] ,VENT_NPDE.NPDE_CANT_ENTREG AS [Cant_Entr] ,[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] AS [A_Entregar] FROM (((VENT_NPCE WITH (NOLOCK) RIGHT JOIN (CCOB_CLIE WITH (NOLOCK) INNER JOIN ((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPVE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPVE.NPVE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPVE.NPVE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPVE.NPVE_DIVISION_NPCA)) INNER JOIN SIST_VEND WITH (NOLOCK) ON VENT_NPVE.NPVE_VENDEDOR = SIST_VEND.VEND_VENDEDOR) ON CCOB_CLIE.CLIE_CLIENTE = VENT_NPCA.NPCA_CLIENTE) ON (VENT_NPCE.NPCE_NUMERO_NPCA = VENT_NPCA.NPCA_NUMERO_NPCA) AND (VENT_NPCE.NPCE_TIPO_NPCA = VENT_NPCA.NPCA_TIPO_NPCA) AND (VENT_NPCE.NPCE_DIVISION_NPCA = VENT_NPCA.NPCA_DIVISION_NPCA)) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN @NP_A_Considerar ON VENT_NPCA.NPCA_TIPO_NPCA = [@NP_A_Considerar].Cod_Comp WHERE ((([NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG])>0) AND ((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null)) DECLARE @VBLES_ENTR_NP_VINCUL_2 TABLE ( [Cod_Vend] VARCHAR(4), [Nomb_Vend] VARCHAR(30), [Fecha_Emi] DATE, [Cod_Client] INT, [Nomb_Client] VARCHAR(90), NPCA_DIVISION_NPCA SMALLINT, [Tipo_NP] VARCHAR(3), [Nro_NP] DECIMAL(10,0), [Renglon_NP] SMALLINT, [Cod_Art] VARCHAR(30), [Nombre_Art] VARCHAR(70), Uni VARCHAR(3), [Fecha_Entr] DATETIME, [Cant_Ped] DECIMAL(18,0), [Cant_Fact] DECIMAL(18,0), [Cant_Entr] DECIMAL(18,0), [A_Entregar] DECIMAL(18,0), [Cant_Vinc_OC] DECIMAL(14,4), [Fech_Prob_entr_Prov] DATETIME, [Cant_OC] DECIMAL(14,4), [Cant_Recib_Prov] DECIMAL(14,4), [Nro_OC] DECIMAL(10,0), Proveedor VARCHAR(30), RUBC_NOMBRE VARCHAR(30), [Cod_Comp] VARCHAR(3) ) INSERT INTO @VBLES_ENTR_NP_VINCUL_2 SELECT [@VBLES_ENTR_NP_VINCUL_1].[Cod_Vend] ,[@VBLES_ENTR_NP_VINCUL_1].[Nomb_Vend] ,[@VBLES_ENTR_NP_VINCUL_1].[Fecha_Emi] ,[@VBLES_ENTR_NP_VINCUL_1].[Cod_Client] ,[@VBLES_ENTR_NP_VINCUL_1].[Nomb_Client] ,[@VBLES_ENTR_NP_VINCUL_1].NPCA_DIVISION_NPCA ,[@VBLES_ENTR_NP_VINCUL_1].[Tipo_NP] ,[@VBLES_ENTR_NP_VINCUL_1].[Nro_NP] ,[@VBLES_ENTR_NP_VINCUL_1].[Renglon_NP] ,[@VBLES_ENTR_NP_VINCUL_1].[Cod_Art] ,[@VBLES_ENTR_NP_VINCUL_1].[Nombre_Art] ,[@VBLES_ENTR_NP_VINCUL_1].Uni ,[@VBLES_ENTR_NP_VINCUL_1].[Fecha_Entr] ,[@VBLES_ENTR_NP_VINCUL_1].[Cant_Ped] ,[@VBLES_ENTR_NP_VINCUL_1].[Cant_Fact] ,[@VBLES_ENTR_NP_VINCUL_1].[Cant_Entr] ,[@VBLES_ENTR_NP_VINCUL_1].[A_Entregar] ,SIST_OCNP.OCNP_CANT_VINC AS [Cant_Vinc_OC] ,COMP_RODC.RODC_FECHA_ENTREGA AS [Fech_Prob_entr_Prov] ,COMP_RODC.RODC_CANT_PEDIDA AS [Cant_OC] ,COMP_RODC.RODC_CANT_RECIB AS [Cant_Recib_Prov] ,COMP_RODC.RODC_NUM_OC AS [Nro_OC] ,CPAG_PROV.PROV_NOMBRE AS Proveedor ,CPAG_RUBC.RUBC_NOMBRE ,SUBSTRING([RUBC_NOMBRE],1,3) AS [Cod_Comp] FROM ((CPAG_RUBC WITH (NOLOCK) INNER JOIN ((STOC_ARTS WITH (NOLOCK) INNER JOIN ((@VBLES_ENTR_NP_VINCUL_1 LEFT JOIN SIST_OCNP WITH (NOLOCK) ON ([@VBLES_ENTR_NP_VINCUL_1].NPCA_DIVISION_NPCA = SIST_OCNP.OCNP_DIVISION_NPCA) AND ([@VBLES_ENTR_NP_VINCUL_1].[Tipo_NP] = SIST_OCNP.OCNP_TIPO_NPCA) AND ([@VBLES_ENTR_NP_VINCUL_1].[Nro_NP] = SIST_OCNP.OCNP_NUMERO_NPCA) AND ([@VBLES_ENTR_NP_VINCUL_1].[Renglon_NP] = SIST_OCNP.OCNP_RENGLON_NPDE)) LEFT JOIN COMP_RODC WITH (NOLOCK) ON (SIST_OCNP.OCNP_DIVISION_CODC = COMP_RODC.RODC_DIVISION) AND (SIST_OCNP.OCNP_TIPO_CODC = COMP_RODC.RODC_TIPO_OC) AND (SIST_OCNP.OCNP_NUMERO_CODC = COMP_RODC.RODC_NUM_OC) AND (SIST_OCNP.OCNP_RENGLON_RODC = COMP_RODC.RODC_REN_OC)) ON STOC_ARTS.ARTS_ARTICULO_EMP = [@VBLES_ENTR_NP_VINCUL_1].[Cod_Art]) INNER JOIN STOC_ARCO WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_ARCO.ARCO_ARTICULO) ON CPAG_RUBC.RUBC_RUBRO_COMPRA = STOC_ARCO.ARCO_RUBRO_COMPRA) LEFT JOIN COMP_CODC WITH (NOLOCK) ON (COMP_RODC.RODC_NUM_OC = COMP_CODC.CODC_NUM_OC) AND (COMP_RODC.RODC_TIPO_OC = COMP_CODC.CODC_TIPO_OC) AND (COMP_RODC.RODC_DIVISION = COMP_CODC.CODC_DIVISION)) LEFT JOIN CPAG_PROV WITH (NOLOCK) ON COMP_CODC.CODC_PROVEEDOR = CPAG_PROV.PROV_PROVEEDOR WHERE ((Not (SIST_OCNP.OCNP_CANT_VINC) Is Null)) DECLARE @Vbles_Entr_NP_Base_4 TABLE ( [Cod_Vend] VARCHAR(4), [Nomb_Vend] VARCHAR(30), [Fecha_Emi] DATE, [Cod_Client] INT, CLIE_NOMBRE VARCHAR(70), CLIE_CLASIF_6 VARCHAR(4), NPCE_NOMBRE VARCHAR(90), [Nomb_Client] VARCHAR(90), [Tipo_NP] VARCHAR(3), [Nro_NP] DECIMAL(10,0), [Renglon_NP] SMALLINT, [Cod_Art] VARCHAR(30), [Nombre_Art] VARCHAR(70), Uni VARCHAR(3), [Fecha_Entr_Cabec] DATETIME, [Fecha_Entr_Item] DATETIME, [Verif_fecha_entr] VARCHAR(70), [Cant_Ped] DECIMAL(18,0), [Cant_Fact] DECIMAL(18,0), [Cant_Entr] DECIMAL(18,0), [A_Entregar] DECIMAL(18,0), [Cant_Reserv] DECIMAL(18,0), [Sin_Reser] DECIMAL(18,0), [Tipo_Reserv] VARCHAR(3), [Listo_p_Entr] VARCHAR(30), [Cod_Tte_Cab_NP] VARCHAR(4), [Tte_Cab_NP] VARCHAR(30), [Tte_Item] VARCHAR(30), [Verif_Tte] VARCHAR(30), Vehiculo VARCHAR(40), Domicilio VARCHAR(60), Localidad VARCHAR(50), [Observacion_NP] NVARCHAR(max), Nomb_Est_Aprob VARCHAR(30), NPCA_OBSER_APROB NVARCHAR(max), [Observ_Aproba] NVARCHAR(max), [Ctrl_Aut_1] VARCHAR(30), [CtrlAut1] VARCHAR(30), [Ctrl_Aut_4] VARCHAR(30), [CtrlAut4] VARCHAR(30), [Ctrl_Aut_6] VARCHAR(30), [CtrlAut6] VARCHAR(30), [Ctrl_Aut_7] VARCHAR(30), [CtrlAut7] VARCHAR(30), NPCA_CLASIF_NPCV_1 VARCHAR(4), [Nombre_Canal_Vta] VARCHAR(30), ARTS_TIPO_ART VARCHAR(3), [Zona_Vta] VARCHAR(4), [Nombre_Zona_Vta] VARCHAR(30), NPCA_IMP_TOT_ORI DECIMAL(14,2), [Cant_Vinc_OC] DECIMAL(14,4), [Cant_OC] DECIMAL(14,4), [Cant_Recib_Prov] DECIMAL(14,4), [Fech_Prob_entr_Prov] DATETIME, [Nro_OC] DECIMAL(10,0), Proveedor VARCHAR(30), Nomb_Comp VARCHAR(30), [Kg_Art] DECIMAL(14,4), ARTS_CLASIF_2 VARCHAR(10) ) INSERT INTO @Vbles_Entr_NP_Base_4 SELECT [@Vbles_Entr_NP_Base_3].[Cod_Vend] ,[@Vbles_Entr_NP_Base_3].[Nomb_Vend] ,[@Vbles_Entr_NP_Base_3].[Fecha_Emi] ,[@Vbles_Entr_NP_Base_3].[Cod_Client] ,[@Vbles_Entr_NP_Base_3].CLIE_NOMBRE ,[@Vbles_Entr_NP_Base_3].CLIE_CLASIF_6 ,[@Vbles_Entr_NP_Base_3].NPCE_NOMBRE ,[@Vbles_Entr_NP_Base_3].[Nomb_Client] ,[@Vbles_Entr_NP_Base_3].[Tipo_NP] ,[@Vbles_Entr_NP_Base_3].[Nro_NP] ,[@Vbles_Entr_NP_Base_3].[Renglon_NP] ,[@Vbles_Entr_NP_Base_3].[Cod_Art] ,[@Vbles_Entr_NP_Base_3].[Nombre_Art] ,[@Vbles_Entr_NP_Base_3].Uni ,[@Vbles_Entr_NP_Base_3].[Fecha_Entr_Cabec] ,[@Vbles_Entr_NP_Base_3].[Fecha_Entr_Item] ,[@Vbles_Entr_NP_Base_3].[Verif_fecha_entr] ,[@Vbles_Entr_NP_Base_3].[Cant_Ped] ,[@Vbles_Entr_NP_Base_3].[Cant_Fact] ,[@Vbles_Entr_NP_Base_3].[Cant_Entr] ,[@Vbles_Entr_NP_Base_3].[A_Entregar] ,[@Vbles_Entr_NP_Base_3].[Cant_Reserv] ,[@Vbles_Entr_NP_Base_3].[Sin_Reser] ,[@Vbles_Entr_NP_Base_3].[Tipo_Reserv] ,[@Vbles_Entr_NP_Base_3].[Listo_p_Entr] ,[@Vbles_Entr_NP_Base_3].[Cod_Tte_Cab_NP] ,[@Vbles_Entr_NP_Base_3].[Tte_Cab_NP] ,[@Vbles_Entr_NP_Base_3].[Tte_Item] ,[@Vbles_Entr_NP_Base_3].[Verif_Tte] ,[@Vbles_Entr_NP_Base_3].Vehiculo ,[@Vbles_Entr_NP_Base_3].Domicilio ,[@Vbles_Entr_NP_Base_3].Localidad ,[@Vbles_Entr_NP_Base_3].[Observacion_NP] ,[@Vbles_Entr_NP_Base_3].[Nomb_Est_Aprob] ,[@Vbles_Entr_NP_Base_3].NPCA_OBSER_APROB ,[@Vbles_Entr_NP_Base_3].[Observ_Aproba] ,[@Vbles_Entr_NP_Base_3].[Ctrl_Aut_1] ,[@Vbles_Entr_NP_Base_3].[CtrlAut1] ,[@Vbles_Entr_NP_Base_3].[Ctrl_Aut_4] ,[@Vbles_Entr_NP_Base_3].[CtrlAut4] ,[@Vbles_Entr_NP_Base_3].[Ctrl_Aut_6] ,[@Vbles_Entr_NP_Base_3].[CtrlAut6] ,[@Vbles_Entr_NP_Base_3].[Ctrl_Aut_7] ,[@Vbles_Entr_NP_Base_3].[CtrlAut7] ,[@Vbles_Entr_NP_Base_3].NPCA_CLASIF_NPCV_1 ,[@Vbles_Entr_NP_Base_3].[Nombre_Canal_Vta] ,[@Vbles_Entr_NP_Base_3].ARTS_TIPO_ART ,[@Vbles_Entr_NP_Base_3].[Zona_Vta] ,[@Vbles_Entr_NP_Base_3].[Nombre_Zona_Vta] ,[@Vbles_Entr_NP_Base_3].NPCA_IMP_TOT_ORI ,[@VBLES_ENTR_NP_VINCUL_2].[Cant_Vinc_OC] ,[@VBLES_ENTR_NP_VINCUL_2].[Cant_OC] ,[@VBLES_ENTR_NP_VINCUL_2].[Cant_Recib_Prov] ,[@VBLES_ENTR_NP_VINCUL_2].[Fech_Prob_entr_Prov] ,[@VBLES_ENTR_NP_VINCUL_2].[Nro_OC] ,[@VBLES_ENTR_NP_VINCUL_2].Proveedor ,[@Compradores].Nomb_Comp ,[@Vbles_Entr_NP_Base_3].[Kg_Art] ,[@Vbles_Entr_NP_Base_3].ARTS_CLASIF_2 FROM (@Vbles_Entr_NP_Base_3 LEFT JOIN @VBLES_ENTR_NP_VINCUL_2 ON ([@Vbles_Entr_NP_Base_3].[Renglon_NP] = [@VBLES_ENTR_NP_VINCUL_2].[Renglon_NP]) AND ([@Vbles_Entr_NP_Base_3].[Nro_NP] = [@VBLES_ENTR_NP_VINCUL_2].[Nro_NP]) AND ([@Vbles_Entr_NP_Base_3].[Tipo_NP] = [@VBLES_ENTR_NP_VINCUL_2].[Tipo_NP]) AND ([@Vbles_Entr_NP_Base_3].NPDE_DIVISION_NPCA = [@VBLES_ENTR_NP_VINCUL_2].NPCA_DIVISION_NPCA)) LEFT JOIN @Compradores ON [@Vbles_Entr_NP_Base_3].[Cod_Compr] = [@Compradores].Cod_Comp DECLARE @MINIMO_REVENTA_FLETE_GRATIS TABLE (ARPV_ARTICULO INT, ARPV_LISTA_PRECVTA INT, ARPV_PRECIO_VTA DECIMAL(14,4), ARPV_MONEDA VARCHAR(3), MaxDeCOTI_FECHA DATETIME, CIMP_TASA DECIMAL(7,4)) INSERT INTO @MINIMO_REVENTA_FLETE_GRATIS SELECT VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max(SIST_COTI.COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA FROM ((VENT_ARPV WITH (NOLOCK) LEFT JOIN SIST_COTI WITH (NOLOCK) ON VENT_ARPV.ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO) GROUP BY VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1)) ORDER BY Max(SIST_COTI.COTI_FECHA) DECLARE @MINIMO_REVENTA_FLETE_GRATIS_1 TABLE (ARPV_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70),ARPV_LISTA_PRECVTA INT, ARPV_PRECIO_VTA DECIMAL(14,2), ARPV_MONEDA VARCHAR(3), COTI_COTIZACION DECIMAL(14,0), CIMP_TASA DECIMAL(7,0), Precio_base_pesos_SI DECIMAL(18,2), Monto_Min_Fle_Grtis_Cdo_con_IVA_L1 DECIMAL(14,2)) INSERT INTO @MINIMO_REVENTA_FLETE_GRATIS_1 SELECT [@MINIMO_REVENTA_FLETE_GRATIS].ARPV_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,[@MINIMO_REVENTA_FLETE_GRATIS].ARPV_LISTA_PRECVTA ,[@MINIMO_REVENTA_FLETE_GRATIS].ARPV_PRECIO_VTA ,[@MINIMO_REVENTA_FLETE_GRATIS].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@MINIMO_REVENTA_FLETE_GRATIS].CIMP_TASA ,CASE WHEN [SIST_COTI].COTI_COTIZACION = COTI_COTIZACION THEN [ARPV_PRECIO_VTA]*[COTI_COTIZACION] ELSE [ARPV_PRECIO_VTA] END AS [Precio_base_pesos_SI] ,Round((CASE WHEN [SIST_COTI].COTI_COTIZACION = COTI_COTIZACION THEN [ARPV_PRECIO_VTA]*[COTI_COTIZACION] ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2) AS [Monto_Min_Fle_Grtis_Cdo_con_IVA_L1] FROM (@MINIMO_REVENTA_FLETE_GRATIS LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@MINIMO_REVENTA_FLETE_GRATIS].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@MINIMO_REVENTA_FLETE_GRATIS].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON [@MINIMO_REVENTA_FLETE_GRATIS].ARPV_ARTICULO = STOC_ARTS.ARTS_ARTICULO WHERE (((STOC_ARTS.ARTS_ARTICULO_EMP)='01500025')) SELECT [@Vbles_Entr_NP_Base_4].[Cod_Vend] ,[@Vbles_Entr_NP_Base_4].[Nomb_Vend] ,[@Vbles_Entr_NP_Base_4].[Fecha_Emi] ,[@Vbles_Entr_NP_Base_4].[Cod_Client] ,[@Vbles_Entr_NP_Base_4].CLIE_NOMBRE ,[@Vbles_Entr_NP_Base_4].CLIE_CLASIF_6 ,[@Vbles_Entr_NP_Base_4].NPCE_NOMBRE ,[@Vbles_Entr_NP_Base_4].[Nomb_Client] ,[@Vbles_Entr_NP_Base_4].[Tipo_NP] ,[@Vbles_Entr_NP_Base_4].[Nro_NP] ,[@Vbles_Entr_NP_Base_4].[Renglon_NP] ,[@Vbles_Entr_NP_Base_4].[Cod_Art] ,[@Vbles_Entr_NP_Base_4].[Nombre_Art] ,[@Vbles_Entr_NP_Base_4].Uni ,[@Vbles_Entr_NP_Base_4].[Fecha_Entr_Cabec] ,[@Vbles_Entr_NP_Base_4].[Fecha_Entr_Item] ,[@Vbles_Entr_NP_Base_4].[Verif_fecha_entr] ,[@Vbles_Entr_NP_Base_4].[Cant_Ped] ,[@Vbles_Entr_NP_Base_4].[Cant_Fact] ,[@Vbles_Entr_NP_Base_4].[Cant_Entr] ,[@Vbles_Entr_NP_Base_4].[A_Entregar] ,[@Vbles_Entr_NP_Base_4].[Cant_Reserv] ,[@Vbles_Entr_NP_Base_4].[Sin_Reser] ,[@Vbles_Entr_NP_Base_4].[Tipo_Reserv] ,[@Vbles_Entr_NP_Base_4].[Listo_p_Entr] ,[@Vbles_Entr_NP_Base_4].[Cod_Tte_Cab_NP] ,[@Vbles_Entr_NP_Base_4].[Tte_Cab_NP] ,[@Vbles_Entr_NP_Base_4].[Tte_Item] ,[@Vbles_Entr_NP_Base_4].[Verif_Tte] ,[@Vbles_Entr_NP_Base_4].Vehiculo ,[@Vbles_Entr_NP_Base_4].Domicilio ,[@Vbles_Entr_NP_Base_4].Localidad ,[@Vbles_Entr_NP_Base_4].[Observacion_NP] ,[@Vbles_Entr_NP_Base_4].[Nomb_Est_Aprob] ,[@Vbles_Entr_NP_Base_4].NPCA_OBSER_APROB ,[@Vbles_Entr_NP_Base_4].[Observ_Aproba] ,[@Vbles_Entr_NP_Base_4].[Ctrl_Aut_1] ,[@Vbles_Entr_NP_Base_4].[CtrlAut1] ,[@Vbles_Entr_NP_Base_4].[Ctrl_Aut_4] ,[@Vbles_Entr_NP_Base_4].[CtrlAut4] ,[@Vbles_Entr_NP_Base_4].[Ctrl_Aut_6] ,[@Vbles_Entr_NP_Base_4].[CtrlAut6] ,[@Vbles_Entr_NP_Base_4].[Ctrl_Aut_7] ,[@Vbles_Entr_NP_Base_4].[CtrlAut7] ,[@Vbles_Entr_NP_Base_4].NPCA_CLASIF_NPCV_1 ,[@Vbles_Entr_NP_Base_4].[Nombre_Canal_Vta] ,[@Vbles_Entr_NP_Base_4].ARTS_TIPO_ART ,[@Vbles_Entr_NP_Base_4].[Zona_Vta] ,[@Vbles_Entr_NP_Base_4].[Nombre_Zona_Vta] ,[@Vbles_Entr_NP_Base_4].NPCA_IMP_TOT_ORI ,[@Vbles_Entr_NP_Base_4].[Cant_Vinc_OC] ,[@Vbles_Entr_NP_Base_4].[Cant_OC] ,[@Vbles_Entr_NP_Base_4].[Cant_Recib_Prov] ,[@Vbles_Entr_NP_Base_4].[Fech_Prob_entr_Prov] ,[@Vbles_Entr_NP_Base_4].[Nro_OC] ,[@Vbles_Entr_NP_Base_4].Proveedor ,[@Vbles_Entr_NP_Base_4].[Nomb_Comp] ,[@MINIMO_REVENTA_FLETE_GRATIS_1].[Monto_Min_Fle_Grtis_Cdo_con_IVA_L1] AS [Monto_Min_Fle_Grtis] ,IIf([CLIE_CLASIF_6]='b',IIf([NPCA_IMP_TOT_ORI]<[Monto_Min_Fle_Grtis_Cdo_con_IVA_L1],'$ bajo mínimo p/flete gratis. No se envía con camión Nimat',NULL), NULL) AS [Solo_para_Reventa] ,[@Vbles_Entr_NP_Base_4].[Kg_Art] ,IIf([ARTS_TIPO_ART]='012',Round([A_Entregar]*[Kg_Art],2) ,IIf([ARTS_TIPO_ART]='011',Round([A_Entregar]*[Kg_Art],2) ,Round([Cant_Reserv]*[Kg_Art],2))) AS [Kg_Item_Reserv] ,[@Vbles_Entr_NP_Base_4].ARTS_CLASIF_2 FROM @Vbles_Entr_NP_Base_4 ,@MINIMO_REVENTA_FLETE_GRATIS_1")
      return VblesEntrNP.recordsets
    }
    catch (error){
      console.log(error);
    }
  }

  async function getListaPreciosVentaAlPublico(){
    try {
      let pool = await sql.connect(config.plataforma);
      let listaprecios = await pool.request().query("DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH(NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precios_todas TABLE (ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), ARPV_ARTICULO INT, ARPV_LISTA_PRECVTA INT, ARPV_PRECIO_VTA DECIMAL(14,4), ARPV_MONEDA VARCHAR(3), MaxDeCOTI_FECHA DATETIME, CIMP_TASA DECIMAL(7,4), ARTS_CLASIF_2 VARCHAR(10), CA02_NOMBRE VARCHAR(30), ARTS_UNIMED_HOMSTO VARCHAR(3), ARTS_FACTOR_HOMSTO DECIMAL(20,12), ARVE_BLOQUEO_VENTA DECIMAL(1,0)) INSERT INTO @Lista_precios_todas SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARVE.ARVE_BLOQUEO_VENTA FROM STOC_ARVE WITH (NOLOCK) INNER JOIN (STOC_CA02 WITH (NOLOCK) INNER JOIN (STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO) ON STOC_CA02.CA02_CLASIF_2 = STOC_ARTS.ARTS_CLASIF_2) ON STOC_ARVE.ARVE_ARTICULO = STOC_ARTS.ARTS_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARVE.ARVE_BLOQUEO_VENTA HAVING (((STOC_ARVE.ARVE_BLOQUEO_VENTA)=0)) ORDER BY Max([@COTI_MONE].COTI_FECHA) SELECT [@Lista_precios_todas].ARTS_ARTICULO_EMP ,[@Lista_precios_todas].ARTS_NOMBRE ,[@Lista_precios_todas].ARPV_LISTA_PRECVTA ,[@Lista_precios_todas].ARPV_PRECIO_VTA ,[@Lista_precios_todas].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precios_todas].CIMP_TASA ,[@Lista_precios_todas].ARTS_CLASIF_2 ,[@Lista_precios_todas].CA02_NOMBRE ,[@Lista_precios_todas].ARTS_UNIMED_HOMSTO ,[@Lista_precios_todas].ARTS_FACTOR_HOMSTO ,CASE WHEN SIST_COTI.COTI_COTIZACION = [COTI_COTIZACION] THEN [ARPV_PRECIO_VTA]*(CASE WHEN [ARPV_LISTA_PRECVTA]=100 THEN 1 ELSE 0.8 END)*[COTI_COTIZACION] ELSE [ARPV_PRECIO_VTA]*(CASE WHEN [ARPV_LISTA_PRECVTA]=100 THEN 1 ELSE 0.8 END) END AS [Precio_base_pesos_contado_SI] ,CAST(CASE WHEN ARTS_CLASIF_2='0004' THEN ROUND(1/NULLIF([ARTS_FACTOR_HOMSTO],0),4) ELSE 0 END AS decimal(18,4)) AS [M2xCaja] ,CONVERT(date, GETDATE()) AS [Fecha_impresion] ,FORMAT(SYSDATETIME(), N'hh:mm tt') AS [Hora_impresion] FROM @Lista_precios_todas LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precios_todas].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) AND ([@Lista_precios_todas].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) WHERE (([@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=1 OR [@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=2 OR [@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=3 OR [@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=4 OR [@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=5 OR [@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=6 OR [@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=7 OR [@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=8 OR [@Lista_precios_todas].[ARPV_LISTA_PRECVTA]=100))");
      return listaprecios.recordsets;
    }
    catch (error){
      console.log(error);
    }
  }

  async function getListaPreciosCostoReposicion(){
    try {
      let pool = await sql.connect(config.plataforma);
      let listaprecios = await pool.request().query("DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH(NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_de_Precios_100 TABLE (ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), ARPV_ARTICULO INT, ARPV_LISTA_PRECVTA INT, ARPV_PRECIO_VTA DECIMAL(14,4), ARPV_MONEDA VARCHAR(3), MaxDeCOTI_FECHA DATETIME, CIMP_TASA DECIMAL(7,4), ARTS_CLASIF_2 VARCHAR(10), CA02_NOMBRE VARCHAR(30), ARTS_UNIMED_HOMSTO VARCHAR(3), ARTS_FACTOR_HOMSTO DECIMAL(20,12)) INSERT INTO @Lista_de_Precios_100 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO FROM STOC_CA02 WITH (NOLOCK) INNER JOIN (STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO) ON STOC_CA02.CA02_CLASIF_2 = STOC_ARTS.ARTS_CLASIF_2 GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_CA02.CA02_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=100)) ORDER BY Max([@COTI_MONE].COTI_FECHA) SELECT [@Lista_de_Precios_100].ARTS_ARTICULO_EMP ,[@Lista_de_Precios_100].ARTS_NOMBRE ,[@Lista_de_Precios_100].ARPV_ARTICULO ,[@Lista_de_Precios_100].ARPV_LISTA_PRECVTA ,[@Lista_de_Precios_100].ARPV_PRECIO_VTA ,[@Lista_de_Precios_100].ARPV_MONEDA ,CAST(SIST_COTI.COTI_COTIZACION AS decimal(7,0)) AS COTI_COTIZACION ,CAST([@Lista_de_Precios_100].CIMP_TASA AS decimal(7,0)) AS CIMP_TASA ,[@Lista_de_Precios_100].ARTS_CLASIF_2 ,[@Lista_de_Precios_100].CA02_NOMBRE ,[@Lista_de_Precios_100].ARTS_UNIMED_HOMSTO ,[@Lista_de_Precios_100].ARTS_FACTOR_HOMSTO ,CASE WHEN [SIST_COTI].COTI_COTIZACION = COTI_COTIZACION THEN ARPV_PRECIO_VTA*SIST_COTI.COTI_COTIZACION ELSE ARPV_PRECIO_VTA END AS [Precio_L100_pesos_SI] ,ROUND(CASE WHEN [SIST_COTI].COTI_COTIZACION = COTI_COTIZACION THEN ARPV_PRECIO_VTA*SIST_COTI.COTI_COTIZACION ELSE ARPV_PRECIO_VTA END*(1+[CIMP_TASA]/100), 2) AS [Pre_L100_pesos_con_IVA] ,CAST(CASE WHEN ARTS_CLASIF_2='0004' THEN ROUND(1/NULLIF([ARTS_FACTOR_HOMSTO],0),4) ELSE 0 END AS decimal(18,4)) AS [M2xCaja] ,CASE WHEN ARTS_CLASIF_2='0004' THEN ROUND(CASE WHEN [SIST_COTI].COTI_COTIZACION = COTI_COTIZACION THEN ARPV_PRECIO_VTA*SIST_COTI.COTI_COTIZACION ELSE ARPV_PRECIO_VTA END*ARTS_FACTOR_HOMSTO,2) ELSE ROUND(CASE WHEN [SIST_COTI].COTI_COTIZACION = COTI_COTIZACION THEN ARPV_PRECIO_VTA*SIST_COTI.COTI_COTIZACION ELSE ARPV_PRECIO_VTA END,2) END AS [Pre_M2_UN_L100_SI] ,CONVERT(date, GETDATE()) AS [Fecha_impresion] ,FORMAT(SYSDATETIME(), N'hh:mm tt') AS [Hora_impresion] FROM @Lista_de_Precios_100 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_de_Precios_100].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_de_Precios_100].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1)");
      return listaprecios.recordsets;
    }
    catch (error) {
      console.log(error);
    }
  }

  var ArrayDepositoANoConsiderar = [];
  async function ArrayDeposaNoConsiderar() {
      let urlArray = `${process.env.URL_API}` + 'depositoanoconsiderarparastockfisico'
      const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                                  .then(response => {results = []; data = response.data; for(var i = 0; i < data.length; i++){results.push(data[i]['codigo_deposito'])} return results })
                                  .catch((error)=>{console.log(error)});
      return ArrayDepositoANoConsiderar.push(response);
  }
  ArrayDeposaNoConsiderar();
  
  async function getStockPartidaconvencimiento(){
    try {
      const DepositoANoConsiderar = ArrayDepositoANoConsiderar[0]
      let pool = await sql.connect(config.plataforma);
      let listaStock = await pool.request().query("DECLARE @Depos_A_No_considerar_para_stock_fisico TABLE(Cod_Depos INT, Nomb_Depos VARCHAR(30)) INSERT INTO @Depos_A_No_considerar_para_stock_fisico SELECT STOC_DPOS.DPOS_DEPOSITO AS Cod_Depos ,STOC_DPOS.DPOS_NOMBRE AS Nomb_Depos FROM STOC_DPOS WITH (NOLOCK) WHERE STOC_DPOS.DPOS_DEPOSITO IN ("+ DepositoANoConsiderar +") SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_ARTICULO_EMP ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS SumaDeSDPP_STOCK_ACT ,STOC_PART.PART_FECHA_VTO FROM ((STOC_ARTS INNER JOIN STOC_SDPP ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) INNER JOIN STOC_PART ON STOC_SDPP.SDPP_PARTIDA = STOC_PART.PART_PARTIDA) LEFT JOIN @Depos_A_No_considerar_para_stock_fisico ON STOC_SDPP.SDPP_DEPOSITO = [@Depos_A_No_considerar_para_stock_fisico].[Cod_Depos] GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_PART.PART_FECHA_VTO ,[@Depos_A_No_considerar_para_stock_fisico].[Nomb_Depos] HAVING (((Sum(STOC_SDPP.SDPP_STOCK_ACT))>0) AND ((STOC_PART.PART_FECHA_VTO) Is Not Null AND (STOC_PART.PART_FECHA_VTO)<=CONVERT(date, GETDATE())) AND (([@Depos_A_No_considerar_para_stock_fisico].[Nomb_Depos]) Is Null)) ");
      return listaStock.recordsets;
    }
    catch (error) {
      console.log(error);
    }
  }

  async function getStock(){
    try{
      const DepositoANoConsiderar = ArrayDepositoANoConsiderar[0]
      let pool = await sql.connect(config.plataforma);
      let listastock = await pool.request().query("DECLARE @Depos_A_No_considerar_para_stock_fisico TABLE(Cod_Depos INT, Nomb_Depos VARCHAR(30)) INSERT INTO @Depos_A_No_considerar_para_stock_fisico SELECT STOC_DPOS.DPOS_DEPOSITO AS Cod_Depos ,STOC_DPOS.DPOS_NOMBRE AS Nomb_Depos FROM STOC_DPOS WITH (NOLOCK) WHERE STOC_DPOS.DPOS_DEPOSITO IN ("+ DepositoANoConsiderar +") SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cod_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_STDP.STDP_STOCK_ACT) AS [Stock_Uni] ,STOC_ARTS.ARTS_UNIMED_HOMSTO AS [Uni_HS] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_1 ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_ARTS.ARTS_CLASIF_3 ,STOC_ARTS.ARTS_CLASIF_4 ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_ARTS.ARTS_CLASIF_6 ,STOC_ARTS.ARTS_CLASIF_7 ,STOC_ARTS.ARTS_CLASIF_8 FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_STDP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_STDP.STDP_ARTICULO) LEFT JOIN @Depos_A_No_considerar_para_stock_fisico ON STOC_STDP.STDP_DEPOSITO = [@Depos_A_No_considerar_para_stock_fisico].[Cod_Depos] GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_1 ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_ARTS.ARTS_CLASIF_3 ,STOC_ARTS.ARTS_CLASIF_4 ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_ARTS.ARTS_CLASIF_6 ,STOC_ARTS.ARTS_CLASIF_7 ,STOC_ARTS.ARTS_CLASIF_8 ,[@Depos_A_No_considerar_para_stock_fisico].[Nomb_Depos] HAVING ((([@Depos_A_No_considerar_para_stock_fisico].[Nomb_Depos]) Is Null)) ");
      return listastock.recordsets;
    }
    catch(error){
      console.log(error);
    }
  }

  var Array = [];
  async function ArrayNPaConsiderar() {
      let urlArrayNPaConsiderar = `${process.env.URL_API}` + 'npaconsiderar'
      const response = await axios.get(urlArrayNPaConsiderar, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                                  .then(response => {results = []; data = response.data; for(var i = 0; i < data.length; i++){results.push(data[i]['cod_comp'])} return results })
                                  .catch((error)=>{console.log(error)});
      return Array.push(response);
  } 
  ArrayNPaConsiderar();

  async function getNPPendienteEntrega(){
    try{
      const NPaConsiderar = Array[0].map(x => `'${x}'`);
      const NPaConsiderarWithCommas = NPaConsiderar.join(',');
      let pool = await sql.connect(config.plataforma);
      let listaNP = await pool.request()
      .query("DECLARE @NP_A_Considerar TABLE(Cod_Comp VARCHAR(30), Nomb_Comp VARCHAR(30)) INSERT INTO @NP_A_Considerar SELECT VENT_TCVE.TCVE_TIPO_COM AS Cod_Comp ,VENT_TCVE.TCVE_NOMBRE AS Nomb_Comp FROM VENT_TCVE WITH (NOLOCK) WHERE VENT_TCVE.TCVE_TIPO_COM IN ("+ NPaConsiderarWithCommas +") DECLARE @NP_Pendientes_entrega TABLE( NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_UNIMED VARCHAR(3), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), Uni_Pte_Entr_NP DECIMAL(12,2), ARTS_FACTOR_HOMSTO DECIMAL(24,14), ARTS_CLASIF_2 VARCHAR(10)) INSERT INTO @NP_Pendientes_entrega SELECT VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_UNIMED ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,VENT_NPDE.NPDE_MOTIVO_CANC ,[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] AS [Uni_Pte_Entr_NP] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_2 FROM @NP_A_Considerar INNER JOIN ((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON [@NP_A_Considerar].[Cod_Comp] = VENT_NPCA.NPCA_TIPO_NPCA WHERE (((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null)) DECLARE @NP_Pendientes_entrega2 TABLE( NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_UNIMED VARCHAR(3), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), Uni_Pte_Entr_NP DECIMAL(12,2), ARTS_FACTOR_HOMSTO DECIMAL(24,14), NP_UniM2_Pte_Entr DECIMAL(12,2), ARTS_CLASIF_2 VARCHAR(10) ) INSERT INTO @NP_Pendientes_entrega2 SELECT [@NP_Pendientes_entrega].NPCA_FECHA_EMI ,[@NP_Pendientes_entrega].NPCA_DIVISION_NPCA ,[@NP_Pendientes_entrega].NPCA_TIPO_NPCA ,[@NP_Pendientes_entrega].NPCA_NUMERO_NPCA ,[@NP_Pendientes_entrega].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega].ARTS_NOMBRE ,[@NP_Pendientes_entrega].NPDE_UNIMED ,[@NP_Pendientes_entrega].NPDE_CANT_PEDIDA ,[@NP_Pendientes_entrega].NPDE_CANT_ENTREG ,[@NP_Pendientes_entrega].NPDE_MOTIVO_CANC ,[@NP_Pendientes_entrega].Uni_Pte_Entr_NP ,[@NP_Pendientes_entrega].ARTS_FACTOR_HOMSTO ,IIf([ARTS_CLASIF_2]='0004',Round([@NP_Pendientes_entrega].[Uni_Pte_Entr_NP]/[ARTS_FACTOR_HOMSTO],3) ,[@NP_Pendientes_entrega].[Uni_Pte_Entr_NP]) AS [NP_UniM2_Pte_Entr] ,[@NP_Pendientes_entrega].ARTS_CLASIF_2 FROM @NP_Pendientes_entrega WHERE ((([@NP_Pendientes_entrega].[Uni_Pte_Entr_NP])>0)) SELECT [@NP_Pendientes_entrega2].NPCA_TIPO_NPCA ,[@NP_Pendientes_entrega2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega2].ARTS_NOMBRE ,Sum([@NP_Pendientes_entrega2].[Uni_Pte_Entr_NP]) AS [Uni_Pte_Entr_NP] ,Sum([@NP_Pendientes_entrega2].[NP_UniM2_Pte_Entr]) AS [NP_UniM2_Pte_Entr] FROM @NP_Pendientes_entrega2 GROUP BY [@NP_Pendientes_entrega2].NPCA_TIPO_NPCA ,[@NP_Pendientes_entrega2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega2].ARTS_NOMBRE");
      return listaNP.recordsets;
    }
    catch(error){
      console.log(error);
    }
  }

  var ArrayArts = [];
  async function ArrayArtsClasif5StockManual() {
      let urlArray = `${process.env.URL_API}` + 'artsclasif5stockmanual'
      const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                                  .then(response => {results = []; data = response.data; for(var i = 0; i < data.length; i++){results.push(data[i])} return results })
                                  .catch((error)=>{console.log(error)});
      return ArrayArts.push(response);
  } 
  ArrayArtsClasif5StockManual();

  async function getStockFisicoyDisp(){
    try{
      const NPaConsiderar = Array[0].map(x => `'${x}'`);
      const NPaConsiderarWithCommas = NPaConsiderar.join(',');
      const DepositoANoConsiderar = ArrayDepositoANoConsiderar[0]
      const ArtsClasif5 = ArrayArts[0].map(x => x.arts_clasif_5[0]['input'])
      const ArtsClasif5Stock = ArrayArts[0].map(x => x.stock_manual)[0]
      const ArtsClasif5WithCommas = ArtsClasif5.join(',')
      let pool = await sql.connect(config.plataforma);
      let stockfisico = await pool.request()
      .input('ArtsClasif5Stock', sql.Numeric, ArtsClasif5Stock)
      .query("DECLARE @NP_A_Considerar TABLE(Cod_Comp VARCHAR(30), Nomb_Comp VARCHAR(30)) INSERT INTO @NP_A_Considerar SELECT VENT_TCVE.TCVE_TIPO_COM AS Cod_Comp, VENT_TCVE.TCVE_NOMBRE AS Nomb_Comp FROM VENT_TCVE WITH(NOLOCK) WHERE VENT_TCVE.TCVE_TIPO_COM IN ("+ NPaConsiderarWithCommas +") DECLARE @NP_Pendientes_entrega TABLE( NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_UNIMED VARCHAR(3), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), Uni_Pte_Entr_NP DECIMAL(12,2), ARTS_FACTOR_HOMSTO DECIMAL(24,14), ARTS_CLASIF_2 VARCHAR(10)) INSERT INTO @NP_Pendientes_entrega SELECT VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_UNIMED ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,VENT_NPDE.NPDE_MOTIVO_CANC ,[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] AS [Uni_Pte_Entr_NP] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_2 FROM @NP_A_Considerar INNER JOIN ((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON [@NP_A_Considerar].[Cod_Comp] = VENT_NPCA.NPCA_TIPO_NPCA WHERE (((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null)) DECLARE @NP_Pendientes_entrega2 TABLE( NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_UNIMED VARCHAR(3), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), Uni_Pte_Entr_NP DECIMAL(12,2), ARTS_FACTOR_HOMSTO DECIMAL(24,14), NP_UniM2_Pte_Entr DECIMAL(12,2), ARTS_CLASIF_2 VARCHAR(10)) INSERT INTO @NP_Pendientes_entrega2 SELECT [@NP_Pendientes_entrega].NPCA_FECHA_EMI ,[@NP_Pendientes_entrega].NPCA_DIVISION_NPCA ,[@NP_Pendientes_entrega].NPCA_TIPO_NPCA ,[@NP_Pendientes_entrega].NPCA_NUMERO_NPCA ,[@NP_Pendientes_entrega].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega].ARTS_NOMBRE ,[@NP_Pendientes_entrega].NPDE_UNIMED ,[@NP_Pendientes_entrega].NPDE_CANT_PEDIDA ,[@NP_Pendientes_entrega].NPDE_CANT_ENTREG ,[@NP_Pendientes_entrega].NPDE_MOTIVO_CANC ,[@NP_Pendientes_entrega].Uni_Pte_Entr_NP ,[@NP_Pendientes_entrega].ARTS_FACTOR_HOMSTO ,IIf([ARTS_CLASIF_2]='0004',Round([@NP_Pendientes_entrega].[Uni_Pte_Entr_NP]/[ARTS_FACTOR_HOMSTO],3) ,[@NP_Pendientes_entrega].[Uni_Pte_Entr_NP]) AS [NP_UniM2_Pte_Entr] ,[@NP_Pendientes_entrega].ARTS_CLASIF_2 FROM @NP_Pendientes_entrega WHERE ((([@NP_Pendientes_entrega].[Uni_Pte_Entr_NP])>0)) DECLARE @NP_Pendientes_entrega3 TABLE( ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Uni_Pte_Entr_NP DECIMAL(12,2), NP_UniM2_Pte_Entr DECIMAL(12,2) ) INSERT INTO @NP_Pendientes_entrega3 SELECT DISTINCT [@NP_Pendientes_entrega2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega2].ARTS_NOMBRE ,Sum([@NP_Pendientes_entrega2].[Uni_Pte_Entr_NP]) AS Uni_Pte_Entr_NP ,Sum([@NP_Pendientes_entrega2].[NP_UniM2_Pte_Entr]) AS NP_UniM2_Pte_Entr FROM @NP_Pendientes_entrega2 GROUP BY[@NP_Pendientes_entrega2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega2].ARTS_NOMBRE DECLARE @Depos_A_No_considerar_para_stock_fisico TABLE (Cod_Depos INT, Nomb_Depos VARCHAR(30)) INSERT INTO @Depos_A_No_considerar_para_stock_fisico SELECT STOC_DPOS.DPOS_DEPOSITO AS Cod_Depos ,STOC_DPOS.DPOS_NOMBRE AS Nomb_Depos FROM STOC_DPOS WITH (NOLOCK) WHERE STOC_DPOS.DPOS_DEPOSITO IN ("+ DepositoANoConsiderar +") DECLARE @StockConVencido TABLE(ARTS_ARTICULO INT, ARTS_NOMBRE VARCHAR(70), ARTS_ARTICULO_EMP VARCHAR(30), SumaDeSDPP_STOCK_ACT DECIMAL(14,0), PART_FECHA_VTO DATETIME) INSERT INTO @StockConVencido SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_ARTICULO_EMP ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS SumaDeSDPP_STOCK_ACT ,STOC_PART.PART_FECHA_VTO FROM ((STOC_ARTS WITH (NOLOCK) INNER JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) INNER JOIN STOC_PART WITH (NOLOCK) ON STOC_SDPP.SDPP_PARTIDA = STOC_PART.PART_PARTIDA) LEFT JOIN @Depos_A_No_considerar_para_stock_fisico ON STOC_SDPP.SDPP_DEPOSITO = [@Depos_A_No_considerar_para_stock_fisico].[Cod_Depos] GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_PART.PART_FECHA_VTO ,[@Depos_A_No_considerar_para_stock_fisico].[Nomb_Depos] HAVING (((Sum(STOC_SDPP.SDPP_STOCK_ACT))>0) AND ((STOC_PART.PART_FECHA_VTO) Is Not Null AND (STOC_PART.PART_FECHA_VTO)<=CONVERT(date, GETDATE())) AND (([@Depos_A_No_considerar_para_stock_fisico].[Nomb_Depos]) Is Null)) DECLARE @Stock TABLE (ARTS_ARTICULO INT, Cod_Art VARCHAR(30), Nombre_Art VARCHAR(70), Stock_Uni DECIMAL(14,0), Uni_HS VARCHAR(3), ARTS_FACTOR_HOMSTO DECIMAL(14,4), ARTS_CLASIF_1 VARCHAR(10), ARTS_CLASIF_2 VARCHAR(10), ARTS_CLASIF_3 VARCHAR(10), ARTS_CLASIF_4 VARCHAR(10), ARTS_CLASIF_5 VARCHAR(10), ARTS_CLASIF_6 VARCHAR(10), ARTS_CLASIF_7 VARCHAR(10), ARTS_CLASIF_8 VARCHAR(10)) INSERT INTO @Stock SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cod_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_STDP.STDP_STOCK_ACT) AS [Stock_Uni] ,STOC_ARTS.ARTS_UNIMED_HOMSTO AS [Uni_HS] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_1 ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_ARTS.ARTS_CLASIF_3 ,STOC_ARTS.ARTS_CLASIF_4 ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_ARTS.ARTS_CLASIF_6 ,STOC_ARTS.ARTS_CLASIF_7 ,STOC_ARTS.ARTS_CLASIF_8 FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_STDP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_STDP.STDP_ARTICULO) LEFT JOIN @Depos_A_No_considerar_para_stock_fisico ON STOC_STDP.STDP_DEPOSITO = [@Depos_A_No_considerar_para_stock_fisico].[Cod_Depos] GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_1 ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_ARTS.ARTS_CLASIF_3 ,STOC_ARTS.ARTS_CLASIF_4 ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_ARTS.ARTS_CLASIF_6 ,STOC_ARTS.ARTS_CLASIF_7 ,STOC_ARTS.ARTS_CLASIF_8 ,[@Depos_A_No_considerar_para_stock_fisico].[Nomb_Depos] HAVING ((([@Depos_A_No_considerar_para_stock_fisico].[Nomb_Depos]) Is Null)) SELECT [@Stock].ARTS_ARTICULO , [@Stock].[Cod_Art] , [@Stock].[Nombre_Art] , [@Stock].[Stock_Uni] , [@StockConVencido].SumaDeSDPP_STOCK_ACT AS [Stock_Uni_con_vencido] , [@Stock].[Uni_HS] , (CASE WHEN Stock_Uni = [Stock_Uni] THEN (Round([Stock_Uni]/NULLIF([ARTS_FACTOR_HOMSTO],0),2)) ELSE 0 END) AS [Stock_Uni_M2_ceram] , [@NP_Pendientes_entrega3].[Uni_Pte_Entr_NP], CASE WHEN [@Stock].ARTS_CLASIF_5 IN ("+ ArtsClasif5WithCommas +") THEN @ArtsClasif5Stock WHEN ([Stock_Uni]-IIf([@StockConVencido].SumaDeSDPP_STOCK_ACT=[@StockConVencido].SumaDeSDPP_STOCK_ACT,[@StockConVencido].SumaDeSDPP_STOCK_ACT,0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)) > 0 THEN ([Stock_Uni]-IIf([@StockConVencido].SumaDeSDPP_STOCK_ACT=[@StockConVencido].SumaDeSDPP_STOCK_ACT,[@StockConVencido].SumaDeSDPP_STOCK_ACT,0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)) ELSE 0 END AS [Uni_M2_Disp], [@Stock].ARTS_FACTOR_HOMSTO, [@Stock].ARTS_CLASIF_1 , [@Stock].ARTS_CLASIF_2 , [@Stock].ARTS_CLASIF_3 , [@Stock].ARTS_CLASIF_4 , [@Stock].ARTS_CLASIF_5 , [@Stock].ARTS_CLASIF_6 , [@Stock].ARTS_CLASIF_7 , [@Stock].ARTS_CLASIF_8 , STOC_ARVE.ARVE_BLOQUEO_VENTA FROM ((@Stock LEFT JOIN @NP_Pendientes_entrega3 ON [@Stock].[Cod_Art] = [@NP_Pendientes_entrega3].ARTS_ARTICULO_EMP) LEFT JOIN @StockConVencido ON [@Stock].ARTS_ARTICULO = [@StockConVencido].ARTS_ARTICULO) LEFT JOIN STOC_ARVE ON [@Stock].ARTS_ARTICULO = STOC_ARVE.ARVE_ARTICULO");
      return stockfisico.recordsets;
    }
    catch(error){
      console.log(error);
    }
  }

  async function getListadePrecioWeb(){
    try{
      let pool = await sql.connect(config.plataforma);
      let listaprecio = await pool.request().query("DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH(NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1 TABLE( ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,4) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL(7,4)) INSERT INTO @Lista_precio_1 SELECT VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA FROM ((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO) GROUP BY VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1)) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_2 TABLE( ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,4) ,ARPV_MONEDA VARCHAR(3) ,COTI_COTIZACION DECIMAL(14,5) ,CIMP_TASA DECIMAL (7,4) ,Precio_base_pesos_SI DECIMAL(14,4) ,Pre_Lista_con_IVA_L1 DECIMAL(14,4) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,4) ) INSERT INTO @Lista_precio_2 SELECT [@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1].CIMP_TASA ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [Precio_base_pesos_SI] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2) AS [Pre_Cdo_con_IVA_L1] FROM @Lista_precio_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) AND ([@Lista_precio_1].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) DECLARE @Lista_precio_3 TABLE( ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARTS_UNIMED_STOCK VARCHAR(3) ,Unidad VARCHAR(10) ,Pre_Lista_con_IVA_L1 DECIMAL(14,4) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,4) ,Pre_Lista_con_IVA_L1xM2 DECIMAL(14,4) ,Pre_Cdo_con_IVA_L1xM2 DECIMAL(14,4) ,RAC DECIMAL(14,3) ,Copete_2 TEXT ) INSERT INTO @Lista_precio_3 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_UNIMED_STOCK ,IIf([ARTS_CLASIF_2]='0004','M2',STOC_ARTS.[ARTS_UNIMED_STOCK]) AS Unidad ,[@Lista_precio_2].[Pre_Lista_con_IVA_L1] ,[@Lista_precio_2].[Pre_Cdo_con_IVA_L1] ,IIf(STOC_ARTS.[ARTS_CLASIF_2]='0004',Round([@Lista_precio_2].[Pre_Lista_con_IVA_L1]*STOC_ARTS.[ARTS_FACTOR_HOMSTO],2) ,0) AS [Pre_Lista_con_IVA_L1xM2] ,IIf(STOC_ARTS.[ARTS_CLASIF_2]='0004',Round([@Lista_precio_2].[Pre_Cdo_con_IVA_L1]*STOC_ARTS.[ARTS_FACTOR_HOMSTO],2) ,0) AS [Pre_Cdo_con_IVA_L1xM2] ,IIf(STOC_ARTS.[ARTS_CLASIF_2]='0004',Round(1/NULLIF([ARTS_FACTOR_HOMSTO],0),3) ,0) AS [RAC] ,IIf(STOC_ARTS.[ARTS_CLASIF_2]='0004','Venta por caja cerrada. El precio por m2 es aproximado. La caja rinde ' + CAST(CAST(1/NULLIF([ARTS_FACTOR_HOMSTO],0) AS DECIMAL(14,3)) AS NVARCHAR) + ' m2 aproximadamente','') AS [Copete_2] FROM @Lista_precio_2 INNER JOIN STOC_ARTS WITH (NOLOCK) ON [@Lista_precio_2].ARPV_ARTICULO = STOC_ARTS.ARTS_ARTICULO SELECT [@Lista_precio_3].ARTS_ARTICULO_EMP ,[@Lista_precio_3].ARTS_NOMBRE ,[@Lista_precio_3].ARTS_UNIMED_STOCK ,[@Lista_precio_3].[Pre_Cdo_con_IVA_L1] ,[@Lista_precio_3].[Copete_2] FROM @Lista_precio_3 WHERE ((([@Lista_precio_3].[Pre_Cdo_con_IVA_L1])>0))");
      return listaprecio.recordsets;
    }
    catch(error){
      console.log(error);
    }
  }

  async function getPlanillaImportar(){
    try{
      let pool = await sql.connect(config.plataforma);
      let listaPlanilla = await pool.request().query("SELECT 'Simple Product' AS ProductType ,STOC_ARTS.ARTS_NOMBRE AS Name ,'El precio corresponde a pago en efectivo, tarjeta de crédito en una cuota, tarjeta de débito o medios electrónicos.' AS FullDescription ,'Simple Product' AS ProductTemplate ,'' AS MetaKeywords ,'' AS MetaDescription ,'' AS MetaTitle ,'' AS SeName ,'FALSO' AS AllowCustomerReviews ,STOC_ARTS.ARTS_ARTICULO_EMP AS SKU ,'VERDADERO' AS IsShipEnabled ,'Manage Stock' AS ManageInventoryMethod ,IIf(SUBSTRING([ARTS_ARTICULO_EMP],1,2)='91','FALSO','VERDADERO') AS DisplayStockQuantity ,'1' AS NotifyAdminForQuantityBelow ,IIf(([CA08_CLASIF_8]=0130) ,'Allow Qty Below0 And Notify Customer',IIf(SUBSTRING([ARTS_ARTICULO_EMP],1,2)='81','Allow Qty Below0 And Notify Customer','No Backorders')) AS BackorderMode ,1 AS OrderMinimumQuantity ,1000 AS OrderMaximumQuantity ,'FALSO' AS CallForPrice ,STOC_CA06.CA06_NOMBRE AS Manufacturers ,[ARTS_PESO_EMB_UMS] AS Weight ,'' AS Picture1 ,IIf([ARTS_CLASIF_2]=0004,Round(1/NULLIF([ARTS_FACTOR_HOMSTO],0),3),0) AS BasepriceAmount ,'FALSO' AS Deleted FROM(((STOC_ARTS WITH (NOLOCK) INNER JOIN STOC_CA02 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_2 = STOC_CA02.CA02_CLASIF_2) INNER JOIN STOC_CA06 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_6 = STOC_CA06.CA06_CLASIF_6) INNER JOIN STOC_CA08 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_8 = STOC_CA08.CA08_CLASIF_8) INNER JOIN STOC_ARVE WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_ARVE.ARVE_ARTICULO");
      return listaPlanilla.recordsets;
    }
    catch(error){
      console.log(error);
    }
  }

  async function getStocArts(){
    try{
      let pool = await sql.connect(config.plataforma);
      let listaArts = await pool.request().query("SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARVE.ARVE_RUBRO_VENTA ,VENT_RUBV.RUBV_NOMBRE FROM(STOC_ARTS WITH (NOLOCK) INNER JOIN STOC_ARVE WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_ARVE.ARVE_ARTICULO) INNER JOIN VENT_RUBV WITH (NOLOCK) ON STOC_ARVE.ARVE_RUBRO_VENTA = VENT_RUBV.RUBV_RUBRO_VENTA");
      return listaArts.recordsets
    }
    catch(error){
      console.log(error)
    }
  }

  async function getStocArtsAll(){
    try{
      let urlArray = `${process.env.URL_API}` + 'filtroacindarplataforma'
      const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
        .then(response => {
          results = [];
          data = response.data; 
          for(var i = 0; i < data.length; i++){
            for(var y = 0; y < data[i]['clasif6_inc']['c6_i'].length; y++){
              results.push(data[i]['clasif6_inc']['c6_i'][y]);
            }
          } 
          return results 
        })
        .catch((error)=>{
          console.log(error)
        });
      const response2 = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
        .then(response => {
          results = [];
          data = response.data; 
          for(var i = 0; i < data.length; i++){
            for(var y = 0; y < data[i]['clasif5_exc']['c5_e'].length; y++){
              results.push(data[i]['clasif5_exc']['c5_e'][y]);
            }
          } 
          return results 
        })
        .catch((error)=>{
          console.log(error)
        });
      const getListaC6 = response
      const ListaC6 = getListaC6.map(x => `'${x}'`);
      const ListaC6Commas = ListaC6 == '' ? 0 : ListaC6
      const getListaC5 = response2
      const ListaC5 = getListaC5.map(x => `'${x}'`);
      const ListaC5Commas = ListaC5 == '' ? 0 : ListaC5      
      let pool = await sql.connect(config.plataforma);
      let listaStockArts = await pool.request()      
      .query("SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_ARTS.ARTS_CLASIF_6 ,STOC_ARTS.ARTS_FECHA_ALTA ,STOC_ARVE.ARVE_BLOQUEO_VENTA FROM STOC_ARTS WITH(NOLOCK) INNER JOIN STOC_ARVE WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_ARVE.ARVE_ARTICULO WHERE (((STOC_ARTS.ARTS_CLASIF_6) IN ("+ListaC6Commas+",'')) AND ((STOC_ARTS.ARTS_CLASIF_5) NOT IN ("+ListaC5Commas+",'')))");
      return listaStockArts.recordsets
    }
    catch(error){
      console.log(error)
    }
  }

  async function getStocArtsClasif5(){
    try{
      let pool = await sql.connect(config.plataforma);
      let listaStockArtsC5 = await pool.request().query("SELECT * FROM STOC_CA05 WITH (NOLOCK)");
      return listaStockArtsC5.recordsets
    }
    catch(error){
      console.log(error)
    }
  }

  async function getStocArtsClasif6(){
    try{
      let pool = await sql.connect(config.plataforma);
      let listaStockArtsC6 = await pool.request().query("SELECT * FROM STOC_CA06 WITH (NOLOCK)");
      return listaStockArtsC6.recordsets
    }
    catch(error){
      console.log(error)
    }
  }

  var ArrayDeposANoConsiderar = [];
  async function ArrayDeposaNoConsiderar2() {
      let urlArray = `${process.env.URL_API}` + 'deposanoconsiderar'
      const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                                  .then(response => {results = []; data = response.data; for(var i = 0; i < data.length; i++){results.push(data[i]['cod_depos'])} return results })
                                  .catch((error)=>{console.log(error)});
      return ArrayDeposANoConsiderar.push(response);
  }
  ArrayDeposaNoConsiderar2();

  async function getCombo(){
    try{
      const NPaConsiderar = Array[0].map(x => `'${x}'`);
      const NPaConsiderarWithCommas = NPaConsiderar.join(',');
      const DeposANoConsiderar = ArrayDeposANoConsiderar[0]
      let pool = await sql.connect(config.plataforma);
      let combo = await pool.request().query("DECLARE @NP_A_Considerar TABLE(Cod_Comp VARCHAR(30), Nomb_Comp VARCHAR(30)) INSERT INTO @NP_A_Considerar SELECT VENT_TCVE.TCVE_TIPO_COM AS Cod_Comp, VENT_TCVE.TCVE_NOMBRE AS Nomb_Comp FROM VENT_TCVE WITH(NOLOCK) WHERE VENT_TCVE.TCVE_TIPO_COM IN ("+ NPaConsiderarWithCommas +") DECLARE @NP_Pendientes_entrega TABLE( NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_UNIMED VARCHAR(3), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), Uni_Pte_Entr_NP DECIMAL(12,2), ARTS_FACTOR_HOMSTO DECIMAL(24,14), ARTS_CLASIF_2 VARCHAR(10)) INSERT INTO @NP_Pendientes_entrega SELECT VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_UNIMED ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,VENT_NPDE.NPDE_MOTIVO_CANC ,[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] AS [Uni_Pte_Entr_NP] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_2 FROM @NP_A_Considerar INNER JOIN ((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON [@NP_A_Considerar].[Cod_Comp] = VENT_NPCA.NPCA_TIPO_NPCA WHERE (((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null)) DECLARE @NP_Pendientes_entrega2 TABLE( NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_UNIMED VARCHAR(3), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), Uni_Pte_Entr_NP DECIMAL(12,2), ARTS_FACTOR_HOMSTO DECIMAL(24,14), NP_UniM2_Pte_Entr DECIMAL(12,2), ARTS_CLASIF_2 VARCHAR(10)) INSERT INTO @NP_Pendientes_entrega2 SELECT [@NP_Pendientes_entrega].NPCA_FECHA_EMI ,[@NP_Pendientes_entrega].NPCA_DIVISION_NPCA ,[@NP_Pendientes_entrega].NPCA_TIPO_NPCA ,[@NP_Pendientes_entrega].NPCA_NUMERO_NPCA ,[@NP_Pendientes_entrega].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega].ARTS_NOMBRE ,[@NP_Pendientes_entrega].NPDE_UNIMED ,[@NP_Pendientes_entrega].NPDE_CANT_PEDIDA ,[@NP_Pendientes_entrega].NPDE_CANT_ENTREG ,[@NP_Pendientes_entrega].NPDE_MOTIVO_CANC ,[@NP_Pendientes_entrega].Uni_Pte_Entr_NP ,[@NP_Pendientes_entrega].ARTS_FACTOR_HOMSTO ,IIf([ARTS_CLASIF_2]='0004',Round([@NP_Pendientes_entrega].[Uni_Pte_Entr_NP]/[ARTS_FACTOR_HOMSTO],3) ,[@NP_Pendientes_entrega].[Uni_Pte_Entr_NP]) AS [NP_UniM2_Pte_Entr] ,[@NP_Pendientes_entrega].ARTS_CLASIF_2 FROM @NP_Pendientes_entrega WHERE ((([@NP_Pendientes_entrega].[Uni_Pte_Entr_NP])>0)) DECLARE @NP_Pendientes_entrega3 TABLE( ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Uni_Pte_Entr_NP DECIMAL(12,2) ) INSERT INTO @NP_Pendientes_entrega3 SELECT DISTINCT [@NP_Pendientes_entrega2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega2].ARTS_NOMBRE ,Sum([@NP_Pendientes_entrega2].[Uni_Pte_Entr_NP]) AS Uni_Pte_Entr_NP FROM @NP_Pendientes_entrega2 GROUP BY[@NP_Pendientes_entrega2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega2].ARTS_NOMBRE DECLARE @Depos_A_No_considerar TABLE (Cod_Depos INT, Nomb_Depos VARCHAR(30)) INSERT INTO @Depos_A_No_considerar SELECT STOC_DPOS.DPOS_DEPOSITO AS Cod_Depos ,STOC_DPOS.DPOS_NOMBRE AS Nomb_Depos FROM STOC_DPOS WITH (NOLOCK) WHERE STOC_DPOS.DPOS_DEPOSITO IN ("+ DeposANoConsiderar +") DECLARE @Stock TABLE( ARTS_ARTICULO INT, CodArt VARCHAR(30), NombreArt VARCHAR(70), StockUni DECIMAL(14,0) ) INSERT INTO @Stock SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [CodArt] ,STOC_ARTS.ARTS_NOMBRE AS [NombreArt] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [StockUni] FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) LEFT JOIN @Depos_A_No_considerar ON STOC_SDPP.SDPP_DEPOSITO = [@Depos_A_No_considerar].[Cod_Depos] GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,[@Depos_A_No_considerar].[Nomb_Depos] HAVING ((([@Depos_A_No_considerar].[Nomb_Depos]) Is Null)) DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH (NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1_1 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ) INSERT INTO @Lista_precio_1_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA FROM STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1)) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_1_2 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ,Precio_base_pesos_SI DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL(14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,2) ) INSERT INTO @Lista_precio_1_2 SELECT [@Lista_precio_1_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1_1].ARTS_NOMBRE ,[@Lista_precio_1_1].ARPV_ARTICULO ,[@Lista_precio_1_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1_1].ARPV_PRECIO_VTA ,[@Lista_precio_1_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1_1].CIMP_TASA ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [Precio_base_pesos_SI] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2) AS [Pre_Cdo_con_IVA_L1] FROM @Lista_precio_1_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1_1].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) DECLARE @COMBO TABLE(CMBA_COMBO_ART INT, CMBA_NOMBRE VARCHAR(80), CMBA_OBSERVACION VARCHAR(800), CMBA_DESARMABLE SMALLINT, Desarmable TEXT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), CMBD_UNIMED VARCHAR(3), CMBD_CANTIDAD DECIMAL(14,4), CMBD_POR_DESC DECIMAL(5,2), CMBA_FECHA_VIG_DESDE DATETIME, CMBA_FECHA_VIG_HASTA DATETIME ) INSERT INTO @COMBO SELECT VENT_CMBA.CMBA_COMBO_ART ,VENT_CMBA.CMBA_NOMBRE ,VENT_CMBA.CMBA_OBSERVACION ,VENT_CMBA.CMBA_DESARMABLE ,IIf([CMBA_DESARMABLE]=1,'Desarmable: este ítem se puede vender solo sin cantidad mínima','No desarmable: es posible que este ítem se venda en conjunto con otro ítem y/o se deba ajustar a una cantida mínima. Consultar') AS [Desarmable] ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_CMBD.CMBD_UNIMED ,VENT_CMBD.CMBD_CANTIDAD ,VENT_CMBD.CMBD_POR_DESC ,VENT_CMBA.CMBA_FECHA_VIG_DESDE ,VENT_CMBA.CMBA_FECHA_VIG_HASTA FROM (VENT_CMBD WITH (NOLOCK) INNER JOIN VENT_CMBA WITH (NOLOCK) ON VENT_CMBD.CMBD_COMBO_ART = VENT_CMBA.CMBA_COMBO_ART) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_CMBD.CMBD_ARTICULO = STOC_ARTS.ARTS_ARTICULO ORDER BY VENT_CMBA.CMBA_COMBO_ART SELECT [@COMBO].CMBA_COMBO_ART AS [Cod_Combo] ,[@COMBO].CMBA_NOMBRE AS [Nombre_combo] ,[@COMBO].CMBA_OBSERVACION AS [Observacion_combo] ,[@COMBO].ARTS_ARTICULO_EMP AS [Cod_Articulo] ,[@COMBO].ARTS_NOMBRE AS [Nombre_articulo] ,[@COMBO].CMBD_CANTIDAD AS [Cant_del_combo] ,[@Stock].[StockUni] ,[@NP_Pendientes_entrega3].[Uni_Pte_Entr_NP] ,IIf(IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)<0,0,IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)) AS [Stock_Dispon] ,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1] AS [Pre_Nomal_L1_Cdo] ,IIf([@COMBO].CMBD_POR_DESC>0,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1]*(1-[@COMBO].CMBD_POR_DESC/100) ,0) AS [Pre_Oferta_Cdo_x_Uni] ,[@COMBO].[Desarmable] ,[@COMBO].CMBA_FECHA_VIG_DESDE AS [Vigente_desde] ,[@COMBO].[CMBA_FECHA_VIG_HASTA] ,[@COMBO].CMBD_POR_DESC AS [Porcent_Dto_incluido_en_oferta] ,IIf([@COMBO].CMBD_POR_DESC>0,IIf((IIf(IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)<0,0,IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)))<[@COMBO].CMBD_CANTIDAD,'Oferta sin suficiente stock disponible','ok') ,'') AS [Stock_oferta] FROM ((@COMBO LEFT JOIN @NP_Pendientes_entrega3 ON [@COMBO].ARTS_ARTICULO_EMP = [@NP_Pendientes_entrega3].ARTS_ARTICULO_EMP) LEFT JOIN @Stock ON [@COMBO].ARTS_ARTICULO_EMP = [@Stock].[CodArt]) LEFT JOIN @Lista_precio_1_2 ON [@COMBO].ARTS_ARTICULO_EMP = [@Lista_precio_1_2].ARTS_ARTICULO_EMP ORDER BY [@COMBO].CMBA_COMBO_ART ,[@COMBO].ARTS_ARTICULO_EMP")
      return combo.recordsets
    }
    catch(error){
      console.log(error)
    }
  }

  /* async function getCombo(){
    try{
      const NPaConsiderar = Array[0].map(x => `'${x}'`);
      const NPaConsiderarWithCommas = NPaConsiderar.join(',');
      const DeposANoConsiderar = ArrayDeposANoConsiderar[0].map(x => `${x}`);
      const DeposANoConsiederarWithCommas = DeposANoConsiderar.join(',');
      let pool = await sql.connect(config.plataforma);
      let combo = await pool.request()
      .input('NPaConsiderarWithCommas', sql.VarChar, NPaConsiderarWithCommas)
      .input('DeposANoConsiderar', sql.VarChar, DeposANoConsiederarWithCommas)
      .execute('queryCombos')
      return combo.recordsets
    }
    catch(error){
      console.log(error)
    }
  } */

  async function getLPPYRStock(){
    try {
      const NPaConsiderar = Array[0].map(x => `'${x}'`);
      const NPaConsiderarWithCommas = NPaConsiderar.join(',');
      const DeposANoConsiderar = ArrayDeposANoConsiderar[0]
      let pool = await sql.connect(config.plataforma);
      let infoLP = await pool.request().query("DECLARE @DeposANoConsiderar TABLE(Cod_Depos NUMERIC, Nombre_Deposito VARCHAR(40)) INSERT INTO @DeposANoConsiderar SELECT STOC_DPOS.DPOS_DEPOSITO AS Cod_Depos ,STOC_DPOS.DPOS_NOMBRE AS Nombre_Deposito FROM STOC_DPOS WITH(NOLOCK) WHERE STOC_DPOS.DPOS_DEPOSITO IN ("+ DeposANoConsiderar +") DECLARE @NP_a_considerar TABLE (COD_COMP VARCHAR(3), NOMB_COMP VARCHAR(30)) INSERT INTO @NP_a_considerar SELECT VENT_TCVE.TCVE_TIPO_COM AS COD_COMP, VENT_TCVE.TCVE_NOMBRE AS NOMB_COMP FROM VENT_TCVE WITH (NOLOCK) WHERE VENT_TCVE.TCVE_TIPO_COM IN ("+ NPaConsiderarWithCommas +") DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH (NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1 TABLE (ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,4) ,DVC1_CLC1_CLASIF_1 VARCHAR(4) ,LIPV_NOMBRE VARCHAR(30) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4)) INSERT INTO @Lista_precio_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_DVC1.DVC1_CLC1_CLASIF_1 ,VENT_LIPV.LIPV_NOMBRE ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA FROM ((STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO) INNER JOIN VENT_LIPV WITH (NOLOCK) ON VENT_ARPV.ARPV_LISTA_PRECVTA = VENT_LIPV.LIPV_LISTA_PRECVTA) INNER JOIN VENT_DVC1 WITH (NOLOCK) ON VENT_LIPV.LIPV_LISTA_PRECVTA = VENT_DVC1.DVC1_LISTA_PRECVTA WHERE ((([@COTI_MONE].COTI_FECHA)<GETDATE())) GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_DVC1.DVC1_CLC1_CLASIF_1 ,VENT_LIPV.LIPV_NOMBRE ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA ,STOC_ARTS.ARTS_CLASIF_2 HAVING (((STOC_ARTS.ARTS_CLASIF_2)='0004')) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_1_2 TABLE (ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,4) ,DVC1_CLC1_CLASIF_1 VARCHAR(4) ,LIPV_NOMBRE VARCHAR(30) ,ARPV_MONEDA VARCHAR(3) ,COTI_COTIZACION DECIMAL(14,2) ,CIMP_TASA DECIMAL (7,2) ,PRECIO_BASE_PESOS DECIMAL (14,2) ,Pre_Lista_con_IVA_L1 DECIMAL (14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL (14,2) ) INSERT INTO @Lista_precio_1_2 SELECT [@Lista_precio_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1].ARTS_NOMBRE ,[@Lista_precio_1].ARPV_ARTICULO ,[@Lista_precio_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1].ARPV_PRECIO_VTA ,[@Lista_precio_1].DVC1_CLC1_CLASIF_1 ,[@Lista_precio_1].LIPV_NOMBRE ,[@Lista_precio_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION /*,[@COTI_MONE].COTI_COTIZACION*/ ,[@Lista_precio_1].CIMP_TASA ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [PRECIO_BASE_PESOS] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100), 2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100), 2) AS [Pre_Cdo_con_IVA_L1] FROM @Lista_precio_1 LEFT JOIN SIST_COTI ON ([@Lista_precio_1].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) DECLARE @Clasif_a_considerar_pyr TABLE (Clasif_2 VARCHAR(10), Nombre_Clasif_2 VARCHAR(30)) INSERT INTO @Clasif_a_considerar_pyr VALUES ('0004','PISOS Y REVESTIMIENTOS'), ('0006','GRIF.1Y2 AGUAS') DECLARE @NP_Pendientes_entrega_1 TABLE (NPCA_FECHA_EMI DATETIME ,NPCA_DIVISION_NPCA SMALLINT ,NPCA_TIPO_NPCA VARCHAR(3) ,NPCA_NUMERO_NPCA DECIMAL(10,0) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,NPDE_UNIMED VARCHAR(3) ,NPDE_CANT_PEDIDA DECIMAL(14,0) ,NPDE_CANT_ENTREG DECIMAL(14,0) ,NPDE_MOTIVO_CANC VARCHAR(3) ,Uni_Pte_Entr_NP DECIMAL(14,0) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ) INSERT INTO @NP_Pendientes_entrega_1 SELECT VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_UNIMED ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,VENT_NPDE.NPDE_MOTIVO_CANC ,[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] AS [Uni_Pte_Entr_NP] ,STOC_ARTS.ARTS_FACTOR_HOMSTO FROM @NP_a_considerar INNER JOIN (((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN @Clasif_a_considerar_pyr ON STOC_ARTS.ARTS_CLASIF_2 = [@Clasif_a_considerar_pyr].Clasif_2) ON [@NP_a_considerar].[COD_COMP] = VENT_NPCA.NPCA_TIPO_NPCA WHERE (((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null)) DECLARE @NP_Pendientes_entrega_2 TABLE (NPCA_FECHA_EMI DATETIME ,NPCA_DIVISION_NPCA SMALLINT ,NPCA_TIPO_NPCA VARCHAR(3) ,NPCA_NUMERO_NPCA DECIMAL(10,0) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,NPDE_UNIMED VARCHAR(3) ,NPDE_CANT_PEDIDA DECIMAL(14,0) ,NPDE_CANT_ENTREG DECIMAL(14,0) ,NPDE_MOTIVO_CANC VARCHAR(3) ,Uni_Pte_Entr_NP DECIMAL(14,0) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,M2_Pte_Entr_NP DECIMAL(14,2)) INSERT INTO @NP_Pendientes_entrega_2 SELECT [@NP_Pendientes_entrega_1].NPCA_FECHA_EMI ,[@NP_Pendientes_entrega_1].NPCA_DIVISION_NPCA ,[@NP_Pendientes_entrega_1].NPCA_TIPO_NPCA ,[@NP_Pendientes_entrega_1].NPCA_NUMERO_NPCA ,[@NP_Pendientes_entrega_1].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega_1].ARTS_NOMBRE ,[@NP_Pendientes_entrega_1].NPDE_UNIMED ,[@NP_Pendientes_entrega_1].NPDE_CANT_PEDIDA ,[@NP_Pendientes_entrega_1].NPDE_CANT_ENTREG ,[@NP_Pendientes_entrega_1].NPDE_MOTIVO_CANC ,[@NP_Pendientes_entrega_1].[Uni_Pte_Entr_NP] ,[@NP_Pendientes_entrega_1].ARTS_FACTOR_HOMSTO ,IIf([ARTS_FACTOR_HOMSTO]=0,0,Round([Uni_Pte_Entr_NP]/[ARTS_FACTOR_HOMSTO],3)) AS [M2_Pte_Entr_NP] FROM @NP_Pendientes_entrega_1 WHERE ((([@NP_Pendientes_entrega_1].[Uni_Pte_Entr_NP])>0)) DECLARE @NP_Pendientes_entrega_3 TABLE (ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Uni_Pte_Entr_NP DECIMAL(14,0), M2_Pte_Entr_NP DECIMAL(14,2)) INSERT INTO @NP_Pendientes_entrega_3 SELECT DISTINCT [@NP_Pendientes_entrega_2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega_2].ARTS_NOMBRE ,Sum([@NP_Pendientes_entrega_2].[Uni_Pte_Entr_NP]) AS [Uni_Pte_Entr_NP] ,Sum([@NP_Pendientes_entrega_2].[M2_Pte_Entr_NP]) AS [M2_Pte_Entr_NP] FROM @NP_Pendientes_entrega_2 GROUP BY [@NP_Pendientes_entrega_2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega_2].ARTS_NOMBRE DECLARE @ListaPrecios_PYR_completa TABLE (ARTS_CLASIF_3 VARCHAR(10) ,CA03_NOMBRE VARCHAR(30) ,ARTS_CLASIF_5 VARCHAR(10) ,CA05_NOMBRE VARCHAR(30) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,2) ,Pre_Cdo_con_IVA_M2 DECIMAL(14,2) ,M2_Caja DECIMAL(14,3) ,CA04_CLASIF_4 VARCHAR(10) ,CA04_NOMBRE VARCHAR(30) ,ARTS_CLASIF_10 VARCHAR(10) ,CA10_NOMBRE VARCHAR(30) ,DVC1_CLC1_CLASIF_1 VARCHAR(4) ,LIPV_NOMBRE VARCHAR(30) ) INSERT INTO @ListaPrecios_PYR_completa SELECT STOC_ARTS.ARTS_CLASIF_3 ,STOC_CA03.CA03_NOMBRE ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_CA05.CA05_NOMBRE ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1] ,Round([@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1]*STOC_ARTS.[ARTS_FACTOR_HOMSTO],2) AS [Pre_Cdo_con_IVA_M2] ,Round(1/NULLIF([ARTS_FACTOR_HOMSTO],0),3) AS [M2_Caja] ,STOC_CA04.CA04_CLASIF_4 ,STOC_CA04.CA04_NOMBRE ,STOC_ARTS.ARTS_CLASIF_10 ,STOC_CA10.CA10_NOMBRE ,[@Lista_precio_1_2].DVC1_CLC1_CLASIF_1 ,[@Lista_precio_1_2].LIPV_NOMBRE FROM ((@Clasif_a_considerar_pyr INNER JOIN ((((@Lista_precio_1_2 INNER JOIN STOC_ARTS WITH (NOLOCK) ON [@Lista_precio_1_2].ARPV_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA02 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_2 = STOC_CA02.CA02_CLASIF_2) INNER JOIN STOC_CA03 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_3 = STOC_CA03.CA03_CLASIF_3) LEFT JOIN STOC_CA05 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_5 = STOC_CA05.CA05_CLASIF_5) ON [@Clasif_a_considerar_pyr].[Clasif_2] = STOC_ARTS.ARTS_CLASIF_2) INNER JOIN STOC_CA04 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_4 = STOC_CA04.CA04_CLASIF_4) LEFT JOIN STOC_CA10 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_10 = STOC_CA10.CA10_CLASIF_10 WHERE (((STOC_ARTS.ARTS_CLASIF_2)='0004')) ORDER BY STOC_CA03.CA03_NOMBRE ,STOC_CA05.CA05_NOMBRE ,Round([Pre_Cdo_con_IVA_L1]*[ARTS_FACTOR_HOMSTO],2) DESC DECLARE @Stock_1 TABLE (ARTS_ARTICULO INT ,Cód_Art VARCHAR(30) ,Nombre_Art VARCHAR(70) ,Stock_Uni DECIMAL(14,4) ,Uni_HS VARCHAR(3) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,ARTS_CLASIF_1 VARCHAR(10) ,ARTS_CLASIF_2 VARCHAR(10) ,ARTS_CLASIF_3 VARCHAR(10) ,ARTS_CLASIF_4 VARCHAR(10) ,ARTS_CLASIF_5 VARCHAR(10) ,ARTS_CLASIF_6 VARCHAR(10) ,ARTS_CLASIF_7 VARCHAR(10) ,ARTS_CLASIF_8 VARCHAR(10) ) INSERT INTO @Stock_1 SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cód_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [Stock_Uni] ,STOC_ARTS.ARTS_UNIMED_HOMSTO AS [Uni_HS] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_1 ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_ARTS.ARTS_CLASIF_3 ,STOC_ARTS.ARTS_CLASIF_4 ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_ARTS.ARTS_CLASIF_6 ,STOC_ARTS.ARTS_CLASIF_7 ,STOC_ARTS.ARTS_CLASIF_8 FROM ((@Clasif_a_considerar_pyr INNER JOIN STOC_ARTS WITH (NOLOCK) ON [@Clasif_a_considerar_pyr].[Clasif_2] = STOC_ARTS.ARTS_CLASIF_2) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) LEFT JOIN @DeposANoConsiderar ON STOC_SDPP.SDPP_DEPOSITO = [@DeposANoConsiderar].[Cod_Depos] GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_UNIMED_HOMSTO ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_1 ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_ARTS.ARTS_CLASIF_3 ,STOC_ARTS.ARTS_CLASIF_4 ,STOC_ARTS.ARTS_CLASIF_5 ,STOC_ARTS.ARTS_CLASIF_6 ,STOC_ARTS.ARTS_CLASIF_7 ,STOC_ARTS.ARTS_CLASIF_8 ,[@DeposANoConsiderar].[Nombre_Deposito] HAVING ((([@DeposANoConsiderar].[Nombre_Deposito]) Is Null)) DECLARE @Stock_2_positivo TABLE (ARTS_ARTICULO INT ,Cód_Art VARCHAR(30) ,Nombre_Art VARCHAR(70) ,Stock_Uni DECIMAL(14,0) ,Uni_HS VARCHAR(3) ,ARTS_FACTOR_HOMSTO DECIMAL(20,12) ,Stock_M2 DECIMAL(14,2) ,M2_Caja DECIMAL(14,3) ,ARTS_CLASIF_2 VARCHAR(10) ,AGRUP_A_MAYOR VARCHAR(30) ,ARTS_CLASIF_3 VARCHAR(10) ,AGRUP_B_MEDIA VARCHAR(30) ,ARTS_CLASIF_4 VARCHAR(10) ,AGRUP_C_MENOR VARCHAR(30) ,ARTS_CLASIF_5 VARCHAR(10) ,AGRUP_D_MINI VARCHAR(30) ,ARTS_CLASIF_6 VARCHAR(10) ,AGRUP_E_MARCA VARCHAR(30) ,STOCK_Y_PRODUCCION VARCHAR(30) ) INSERT INTO @Stock_2_positivo SELECT [@Stock_1].[ARTS_ARTICULO] ,[@Stock_1].[Cód_Art] ,[@Stock_1].[Nombre_Art] ,[@Stock_1].[Stock_Uni] ,[@Stock_1].[Uni_HS] ,[@Stock_1].[ARTS_FACTOR_HOMSTO] ,(CASE WHEN Stock_Uni = [Stock_Uni] THEN (Round([Stock_Uni]/NULLIF([ARTS_FACTOR_HOMSTO],0),2)) ELSE 0 END) AS [Stock_M2] ,Round(1/NULLIF([ARTS_FACTOR_HOMSTO],0),3) AS [M2_Caja] ,STOC_CA02.CA02_CLASIF_2 ,STOC_CA02.CA02_NOMBRE AS [AGRUP_A_MAYOR] ,STOC_CA03.CA03_CLASIF_3 ,STOC_CA03.CA03_NOMBRE AS [AGRUP_B_MEDIA] ,STOC_CA04.CA04_CLASIF_4 ,STOC_CA04.CA04_NOMBRE AS [AGRUP_C_MENOR] ,STOC_CA05.CA05_CLASIF_5 ,STOC_CA05.CA05_NOMBRE AS [AGRUP_D_MINI] ,STOC_CA06.CA06_CLASIF_6 ,STOC_CA06.CA06_NOMBRE AS [AGRUP_E_MARCA] ,STOC_CA08.CA08_NOMBRE AS [STOCK_Y_PRODUCCION] FROM (((((@Stock_1 INNER JOIN STOC_CA02 WITH (NOLOCK) ON [@Stock_1].ARTS_CLASIF_2 = STOC_CA02.CA02_CLASIF_2) INNER JOIN STOC_CA03 WITH (NOLOCK) ON [@Stock_1].ARTS_CLASIF_3 = STOC_CA03.CA03_CLASIF_3) INNER JOIN STOC_CA04 WITH (NOLOCK) ON [@Stock_1].ARTS_CLASIF_4 = STOC_CA04.CA04_CLASIF_4) INNER JOIN STOC_CA05 WITH (NOLOCK) ON [@Stock_1].ARTS_CLASIF_5 = STOC_CA05.CA05_CLASIF_5) INNER JOIN STOC_CA06 WITH (NOLOCK) ON [@Stock_1].ARTS_CLASIF_6 = STOC_CA06.CA06_CLASIF_6) INNER JOIN STOC_CA08 WITH (NOLOCK) ON [@Stock_1].ARTS_CLASIF_8 = STOC_CA08.CA08_CLASIF_8 WHERE ((([@Stock_1].[Stock_Uni])>0)) DECLARE @ListaPrecio_PYR_Stock_positivo TABLE (CA03_NOMBRE VARCHAR(30) ,ARTS_ARTICULO INT ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,2) ,Pre_Cdo_con_IVA_M2 DECIMAL(14,2) ,M2_Caja DECIMAL(14,3) ,Stock_Uni DECIMAL(14,0) ,Stock_M2 DECIMAL(14,2) ,ARTS_CLASIF_10 VARCHAR(10) ,CA10_NOMBRE VARCHAR(30) ,CA05_NOMBRE VARCHAR(30) ,CA04_CLASIF_4 VARCHAR(10) ,CA04_NOMBRE VARCHAR(30) ,DVC1_CLC1_CLASIF_1 VARCHAR(4) ,LIPV_NOMBRE VARCHAR(30)) INSERT INTO @ListaPrecio_PYR_Stock_positivo SELECT [@ListaPrecios_PYR_completa].CA03_NOMBRE ,[@Stock_2_positivo].ARTS_ARTICULO ,[@ListaPrecios_PYR_completa].ARTS_ARTICULO_EMP ,[@ListaPrecios_PYR_completa].ARTS_NOMBRE ,[@ListaPrecios_PYR_completa].[Pre_Cdo_con_IVA_L1] ,[@ListaPrecios_PYR_completa].[Pre_Cdo_con_IVA_M2] ,[@ListaPrecios_PYR_completa].[M2_Caja] ,[@Stock_2_positivo].[Stock_Uni] ,[@Stock_2_positivo].[Stock_M2] ,[@ListaPrecios_PYR_completa].ARTS_CLASIF_10 ,[@ListaPrecios_PYR_completa].CA10_NOMBRE ,[@ListaPrecios_PYR_completa].CA05_NOMBRE ,[@ListaPrecios_PYR_completa].CA04_CLASIF_4 ,[@ListaPrecios_PYR_completa].CA04_NOMBRE ,[@ListaPrecios_PYR_completa].DVC1_CLC1_CLASIF_1 ,[@ListaPrecios_PYR_completa].LIPV_NOMBRE FROM @ListaPrecios_PYR_completa INNER JOIN @Stock_2_positivo ON [@ListaPrecios_PYR_completa].ARTS_ARTICULO_EMP = [@Stock_2_positivo].[Cód_Art] ORDER BY [@ListaPrecios_PYR_completa].CA03_NOMBRE ,[@ListaPrecios_PYR_completa].[Pre_Cdo_con_IVA_M2] DESC DECLARE @LP_Precios_PYR_con_stock TABLE( CA03_NOMBRE VARCHAR(30) ,Tipología VARCHAR(30) ,ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,2) ,Pre_Cdo_con_IVA_M2 DECIMAL(14,2) ,RAC_M2 DECIMAL(14,2) ,Stock_Uni DECIMAL(14,0) ,Stock_M2 DECIMAL(14,2) ,M2_Pte_Entr_NP DECIMAL(14,2) ,M2_Disp_Habil_Vta DECIMAL(14,2) ,Bloqueado_Vtas VARCHAR(30) ,M2_Bloqueado_Vta DECIMAL(14,0) ,Uso VARCHAR(30) ,DVC1_CLC1_CLASIF_1 VARCHAR(4) ,LIPV_NOMBRE VARCHAR(30) ) INSERT INTO @LP_Precios_PYR_con_stock SELECT [@ListaPrecio_PYR_Stock_positivo].CA03_NOMBRE ,IIf([ARTS_CLASIF_10]='0002',NULL,IIf([ARTS_CLASIF_10]='0001',NULL,[CA10_NOMBRE])) AS Tipología ,[@ListaPrecio_PYR_Stock_positivo].ARTS_ARTICULO_EMP ,[@ListaPrecio_PYR_Stock_positivo].ARTS_NOMBRE ,[@ListaPrecio_PYR_Stock_positivo].[Pre_Cdo_con_IVA_L1] ,[@ListaPrecio_PYR_Stock_positivo].[Pre_Cdo_con_IVA_M2] ,[@ListaPrecio_PYR_Stock_positivo].[M2_Caja] AS [RAC_M2] ,[@ListaPrecio_PYR_Stock_positivo].[Stock_Uni] ,[@ListaPrecio_PYR_Stock_positivo].[Stock_M2] ,[@NP_Pendientes_entrega_3].[M2_Pte_Entr_NP] ,(CASE WHEN [ARVE_BLOQUEO_VENTA] = 0 THEN ( CASE WHEN [Stock_M2]-(CASE WHEN M2_Pte_Entr_NP = [M2_Pte_Entr_NP] THEN [M2_Pte_Entr_NP] ELSE 0 END) < 0 THEN 0 ELSE [Stock_M2]-(CASE WHEN [M2_Pte_Entr_NP] = [M2_Pte_Entr_NP] THEN [M2_Pte_Entr_NP] ELSE 0 END) END ) ELSE 0 END ) AS [M2_Disp_Habil_Vta] ,IIf([ARVE_BLOQUEO_VENTA]=0,' no',' SI') AS [Bloqueado_Vtas] ,(CASE WHEN [ARVE_BLOQUEO_VENTA] = 1 THEN ( CASE WHEN [Stock_M2]-(CASE WHEN M2_Pte_Entr_NP = [M2_Pte_Entr_NP] THEN [M2_Pte_Entr_NP] ELSE 0 END) < 0 THEN 0 ELSE [Stock_M2]-(CASE WHEN [M2_Pte_Entr_NP] = [M2_Pte_Entr_NP] THEN [M2_Pte_Entr_NP] ELSE 0 END) END ) ELSE 0 END ) AS [M2_Bloqueado_Vta] ,[@ListaPrecio_PYR_Stock_positivo].CA04_NOMBRE AS Uso ,[@ListaPrecio_PYR_Stock_positivo].DVC1_CLC1_CLASIF_1 ,[@ListaPrecio_PYR_Stock_positivo].LIPV_NOMBRE FROM (@ListaPrecio_PYR_Stock_positivo LEFT JOIN @NP_Pendientes_entrega_3 ON [@ListaPrecio_PYR_Stock_positivo].ARTS_ARTICULO_EMP = [@NP_Pendientes_entrega_3].ARTS_ARTICULO_EMP) INNER JOIN STOC_ARVE WITH (NOLOCK) ON [@ListaPrecio_PYR_Stock_positivo].ARTS_ARTICULO = STOC_ARVE.ARVE_ARTICULO ORDER BY [@ListaPrecio_PYR_Stock_positivo].CA03_NOMBRE ,IIf([ARTS_CLASIF_10]='0002',NULL,IIf([ARTS_CLASIF_10]='0001',NULL,[CA10_NOMBRE])) ,[@ListaPrecio_PYR_Stock_positivo].[Pre_Cdo_con_IVA_M2] DESC SELECT * FROM @LP_Precios_PYR_con_stock");
      return infoLP.recordsets;
    }
    catch (error){
      console.log(error);
    }
  }

  async function getComboWeb(){
    try {
      const NPaConsiderar = Array[0].map(x => `'${x}'`);
      const NPaConsiderarWithCommas = NPaConsiderar.join(',');
      const DeposANoConsiderar = ArrayDepositoANoConsiderar[0]
      let pool = await sql.connect(config.plataforma);
      let comboweb = await pool.request().query("DECLARE @NP_A_Considerar TABLE(Cod_Comp VARCHAR(30), Nomb_Comp VARCHAR(30)) INSERT INTO @NP_A_Considerar SELECT VENT_TCVE.TCVE_TIPO_COM AS Cod_Comp, VENT_TCVE.TCVE_NOMBRE AS Nomb_Comp FROM VENT_TCVE WITH(NOLOCK) WHERE VENT_TCVE.TCVE_TIPO_COM IN ("+ NPaConsiderarWithCommas +") DECLARE @NP_Pendientes_entrega TABLE( NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_UNIMED VARCHAR(3), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), Uni_Pte_Entr_NP DECIMAL(12,2), ARTS_FACTOR_HOMSTO DECIMAL(24,14), ARTS_CLASIF_2 VARCHAR(10)) INSERT INTO @NP_Pendientes_entrega SELECT VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_UNIMED ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,VENT_NPDE.NPDE_MOTIVO_CANC ,[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG] AS [Uni_Pte_Entr_NP] ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_ARTS.ARTS_CLASIF_2 FROM @NP_A_Considerar INNER JOIN ((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON [@NP_A_Considerar].[Cod_Comp] = VENT_NPCA.NPCA_TIPO_NPCA WHERE (((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null)) DECLARE @NP_Pendientes_entrega2 TABLE( NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_UNIMED VARCHAR(3), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), Uni_Pte_Entr_NP DECIMAL(12,2), ARTS_FACTOR_HOMSTO DECIMAL(24,14), NP_UniM2_Pte_Entr DECIMAL(12,2), ARTS_CLASIF_2 VARCHAR(10)) INSERT INTO @NP_Pendientes_entrega2 SELECT [@NP_Pendientes_entrega].NPCA_FECHA_EMI ,[@NP_Pendientes_entrega].NPCA_DIVISION_NPCA ,[@NP_Pendientes_entrega].NPCA_TIPO_NPCA ,[@NP_Pendientes_entrega].NPCA_NUMERO_NPCA ,[@NP_Pendientes_entrega].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega].ARTS_NOMBRE ,[@NP_Pendientes_entrega].NPDE_UNIMED ,[@NP_Pendientes_entrega].NPDE_CANT_PEDIDA ,[@NP_Pendientes_entrega].NPDE_CANT_ENTREG ,[@NP_Pendientes_entrega].NPDE_MOTIVO_CANC ,[@NP_Pendientes_entrega].Uni_Pte_Entr_NP ,[@NP_Pendientes_entrega].ARTS_FACTOR_HOMSTO ,IIf([ARTS_CLASIF_2]='0004',Round([@NP_Pendientes_entrega].[Uni_Pte_Entr_NP]/[ARTS_FACTOR_HOMSTO],3) ,[@NP_Pendientes_entrega].[Uni_Pte_Entr_NP]) AS [NP_UniM2_Pte_Entr] ,[@NP_Pendientes_entrega].ARTS_CLASIF_2 FROM @NP_Pendientes_entrega WHERE ((([@NP_Pendientes_entrega].[Uni_Pte_Entr_NP])>0)) DECLARE @NP_Pendientes_entrega3 TABLE( ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Uni_Pte_Entr_NP DECIMAL(12,2) ) INSERT INTO @NP_Pendientes_entrega3 SELECT DISTINCT [@NP_Pendientes_entrega2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega2].ARTS_NOMBRE ,Sum([@NP_Pendientes_entrega2].[Uni_Pte_Entr_NP]) AS Uni_Pte_Entr_NP FROM @NP_Pendientes_entrega2 GROUP BY[@NP_Pendientes_entrega2].ARTS_ARTICULO_EMP ,[@NP_Pendientes_entrega2].ARTS_NOMBRE DECLARE @Depos_A_No_considerar TABLE (Cod_Depos INT, Nomb_Depos VARCHAR(30)) INSERT INTO @Depos_A_No_considerar SELECT STOC_DPOS.DPOS_DEPOSITO AS Cod_Depos ,STOC_DPOS.DPOS_NOMBRE AS Nomb_Depos FROM STOC_DPOS WITH (NOLOCK) WHERE STOC_DPOS.DPOS_DEPOSITO IN ("+ DeposANoConsiderar +") DECLARE @Stock TABLE( ARTS_ARTICULO INT, CodArt VARCHAR(30), NombreArt VARCHAR(70), StockUni DECIMAL(14,0) ) INSERT INTO @Stock SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [CodArt] ,STOC_ARTS.ARTS_NOMBRE AS [NombreArt] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [StockUni] FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) LEFT JOIN @Depos_A_No_considerar ON STOC_SDPP.SDPP_DEPOSITO = [@Depos_A_No_considerar].[Cod_Depos] GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,[@Depos_A_No_considerar].[Nomb_Depos] HAVING ((([@Depos_A_No_considerar].[Nomb_Depos]) Is Null)) DECLARE @COTI_MONE TABLE(COTI_COTIZACION DECIMAL(14,5), COTI_FECHA DATETIME, COTI_MONEDA1 VARCHAR(3), COTI_MONEDA2 VARCHAR(3)) INSERT INTO @COTI_MONE SELECT SIST_COTI.COTI_COTIZACION, SIST_COTI.COTI_FECHA, SIST_COTI.COTI_MONEDA1, SIST_COTI.COTI_MONEDA2 FROM SIST_COTI WITH (NOLOCK) WHERE SIST_COTI.COTI_FECHA < GETDATE() DECLARE @Lista_precio_1_1 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ) INSERT INTO @Lista_precio_1_1 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,Max([@COTI_MONE].COTI_FECHA) AS MaxDeCOTI_FECHA ,SIST_CIMP.CIMP_TASA FROM STOC_ARTS WITH (NOLOCK) INNER JOIN (((VENT_ARPV WITH (NOLOCK) LEFT JOIN @COTI_MONE ON VENT_ARPV.ARPV_MONEDA = [@COTI_MONE].COTI_MONEDA1) INNER JOIN VENT_ARVI WITH (NOLOCK) ON VENT_ARPV.ARPV_ARTICULO = VENT_ARVI.ARVI_ARTICULO) INNER JOIN SIST_CIMP WITH (NOLOCK) ON (VENT_ARVI.ARVI_CATEGORIA_IMP = SIST_CIMP.CIMP_CATEGORIA_IMP) AND (VENT_ARVI.ARVI_IMPUESTO = SIST_CIMP.CIMP_IMPUESTO)) ON STOC_ARTS.ARTS_ARTICULO = VENT_ARPV.ARPV_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_ARPV.ARPV_ARTICULO ,VENT_ARPV.ARPV_LISTA_PRECVTA ,VENT_ARPV.ARPV_PRECIO_VTA ,VENT_ARPV.ARPV_MONEDA ,SIST_CIMP.CIMP_TASA HAVING (((VENT_ARPV.ARPV_LISTA_PRECVTA)=1)) ORDER BY Max([@COTI_MONE].COTI_FECHA) DECLARE @Lista_precio_1_2 TABLE(ARTS_ARTICULO_EMP VARCHAR(30) ,ARTS_NOMBRE VARCHAR(70) ,ARPV_ARTICULO INT ,ARPV_LISTA_PRECVTA INT ,ARPV_PRECIO_VTA DECIMAL(14,2) ,ARPV_MONEDA VARCHAR(3) ,MaxDeCOTI_FECHA DATETIME ,CIMP_TASA DECIMAL (7,4) ,Precio_base_pesos_SI DECIMAL(14,2) ,Pre_Lista_con_IVA_L1 DECIMAL(14,2) ,Pre_Cdo_con_IVA_L1 DECIMAL(14,2) ) INSERT INTO @Lista_precio_1_2 SELECT [@Lista_precio_1_1].ARTS_ARTICULO_EMP ,[@Lista_precio_1_1].ARTS_NOMBRE ,[@Lista_precio_1_1].ARPV_ARTICULO ,[@Lista_precio_1_1].ARPV_LISTA_PRECVTA ,[@Lista_precio_1_1].ARPV_PRECIO_VTA ,[@Lista_precio_1_1].ARPV_MONEDA ,SIST_COTI.COTI_COTIZACION ,[@Lista_precio_1_1].CIMP_TASA ,(CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END) AS [Precio_base_pesos_SI] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*(1+[CIMP_TASA]/100) ,2) AS [Pre_Lista_con_IVA_L1] ,Round((CASE WHEN COTI_COTIZACION = [COTI_COTIZACION] THEN ([ARPV_PRECIO_VTA]*[COTI_COTIZACION]) ELSE [ARPV_PRECIO_VTA] END)*0.8*(1+[CIMP_TASA]/100) ,2) AS [Pre_Cdo_con_IVA_L1] FROM @Lista_precio_1_1 LEFT JOIN SIST_COTI WITH (NOLOCK) ON ([@Lista_precio_1_1].MaxDeCOTI_FECHA = SIST_COTI.COTI_FECHA) AND ([@Lista_precio_1_1].ARPV_MONEDA = SIST_COTI.COTI_MONEDA1) DECLARE @COMBO TABLE(CMBA_COMBO_ART INT, CMBA_NOMBRE VARCHAR(80), CMBA_OBSERVACION VARCHAR(800), CMBA_DESARMABLE SMALLINT, Desarmable NVARCHAR(1000), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), CMBD_UNIMED VARCHAR(3), CMBD_CANTIDAD DECIMAL(14,4), CMBD_POR_DESC DECIMAL(5,2), CMBA_FECHA_VIG_DESDE DATETIME, CMBA_FECHA_VIG_HASTA DATETIME, ARTS_CLASIF_2 VARCHAR(4), ARTS_FACTOR_HOMSTO DECIMAL(20,12), CA06_NOMBRE VARCHAR(30), Weight DECIMAL(14,4), BasepriceAmount DECIMAL(20,12) ) INSERT INTO @COMBO SELECT VENT_CMBA.CMBA_COMBO_ART ,VENT_CMBA.CMBA_NOMBRE ,VENT_CMBA.CMBA_OBSERVACION ,VENT_CMBA.CMBA_DESARMABLE ,IIf([CMBA_DESARMABLE]=1,'Desarmable: este ítem se puede vender solo sin cantidad mínima','No desarmable: es posible que este ítem se venda en conjunto con otro ítem y/o se deba ajustar a una cantida mínima. Consultar') AS [Desarmable] ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_CMBD.CMBD_UNIMED ,VENT_CMBD.CMBD_CANTIDAD ,VENT_CMBD.CMBD_POR_DESC ,VENT_CMBA.CMBA_FECHA_VIG_DESDE ,VENT_CMBA.CMBA_FECHA_VIG_HASTA ,STOC_ARTS.ARTS_CLASIF_2 ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,STOC_CA06.CA06_NOMBRE ,STOC_ARTS.ARTS_PESO_EMB_UMS AS Weight ,IIf([ARTS_CLASIF_2]=0004,Round(1/NULLIF([ARTS_FACTOR_HOMSTO],0),3),0) AS BasepriceAmount FROM ((VENT_CMBD WITH (NOLOCK) INNER JOIN VENT_CMBA WITH (NOLOCK) ON VENT_CMBD.CMBD_COMBO_ART = VENT_CMBA.CMBA_COMBO_ART) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_CMBD.CMBD_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA06 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_6 = STOC_CA06.CA06_CLASIF_6 DECLARE @COMBO2 TABLE(Cod_Combo INT, Nombre_combo VARCHAR(80), Observacion_combo VARCHAR(800), Cantidad_combo DECIMAL(14,4), Stock_Uni DECIMAL(14,0), Uni_Pte_Entr_NP DECIMAL(14,0), Stock_Dispon DECIMAL(14,0), StockDispon_CantCombo DECIMAL(14,0), Stock_Bool VARCHAR(30), Pre_Nomal_L1_Cdo DECIMAL(14,2), Pre_Oferta_Cdo_x_Uni DECIMAL(14,2), Pre_Oferta_Cdo_total DECIMAL(14,2), CMBA_FECHA_VIG_DESDE DATETIME, CMBA_FECHA_VIG_HASTA DATETIME, Porcent_Dto_incluido_en_oferta DECIMAL(5,2), CA06_NOMBRE VARCHAR(30), Weight DECIMAL(14,4), BasepriceAmount DECIMAL(20,12) ) INSERT INTO @COMBO2 SELECT [@COMBO].CMBA_COMBO_ART AS [Cod_Combo] ,[@COMBO].CMBA_NOMBRE AS [Nombre_combo] ,[@COMBO].CMBA_OBSERVACION AS [Observacion_combo] ,[@COMBO].CMBD_CANTIDAD AS [Cantidad_combo] ,[@Stock].[StockUni] AS [Stock_Uni] ,[@NP_Pendientes_entrega3].[Uni_Pte_Entr_NP] AS [Uni_Pte_Entr_NP] ,IIf(IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)<0,0,IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)) AS [Stock_Dispon] ,IIf(IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)<0,0,CAST((IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0))/([@COMBO].[CMBD_CANTIDAD])AS DECIMAL(12,0))) AS [StockDispon_CantCombo] ,IIf((IIf(IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0)<0,0,CAST((IIf([@Stock].[StockUni]=[@Stock].[StockUni],[@Stock].[StockUni],0)-IIf([Uni_Pte_Entr_NP]=[Uni_Pte_Entr_NP],[Uni_Pte_Entr_NP],0))/([@COMBO].[CMBD_CANTIDAD])AS DECIMAL(12,0))))=0,'FALSE','TRUE') AS [Stock_Bool] ,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1] AS [Pre_Nomal_L1_Cdo] ,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1]*(1-[@COMBO].CMBD_POR_DESC/100) AS [Pre_Oferta_Cdo_x_Uni] ,[@Lista_precio_1_2].[Pre_Cdo_con_IVA_L1]*(1-[@COMBO].CMBD_POR_DESC/100)*([@COMBO].[CMBD_CANTIDAD]) AS [Pre_Oferta_Cdo_total] ,[@COMBO].[CMBA_FECHA_VIG_DESDE] ,[@COMBO].[CMBA_FECHA_VIG_HASTA] ,[@COMBO].[CMBD_POR_DESC] AS [Porcent_Dto_incluido_en_oferta] ,[@COMBO].CA06_NOMBRE ,[@COMBO].Weight ,[@COMBO].BasepriceAmount FROM ((@COMBO LEFT JOIN @NP_Pendientes_entrega3 ON [@COMBO].ARTS_ARTICULO_EMP = [@NP_Pendientes_entrega3].ARTS_ARTICULO_EMP) LEFT JOIN @Stock ON [@COMBO].ARTS_ARTICULO_EMP = [@Stock].[CodArt]) LEFT JOIN @Lista_precio_1_2 ON [@COMBO].ARTS_ARTICULO_EMP = [@Lista_precio_1_2].ARTS_ARTICULO_EMP SELECT FORMAT([@COMBO2].[Cod_Combo], '0000') AS Cod_Combo ,[@COMBO2].[Nombre_combo] ,[@COMBO2].[Observacion_combo] ,Min([@COMBO2].[Stock_Uni]) AS [SumaDeStock_Uni] ,Min([@COMBO2].[Uni_Pte_Entr_NP]) AS [SumaDeUni_Pte_Entr_NP] ,Min([@COMBO2].Stock_Dispon) AS [SumaDeStock_Dispon] ,Min([@COMBO2].StockDispon_CantCombo) AS [SumaDeStockDispon_CantCombo] ,CASE WHEN Min(CASE WHEN [@COMBO2].Stock_Bool = 'TRUE' THEN 1 ELSE 0 END) = 1 THEN 1 WHEN NOT (min(CASE WHEN [@COMBO2].Stock_Bool = 'TRUE' THEN 1 ELSE 0 END) = 1) THEN 0 END AS [Sotck_Bool] ,Sum([@COMBO2].Pre_Nomal_L1_Cdo) AS [SumaDePre_Nomal_L1_Cdo] ,Sum([@COMBO2].Pre_Oferta_Cdo_x_Uni) AS [SumaDePre_Oferta_Cdo_x_Uni] ,Sum([@COMBO2].[Pre_Oferta_Cdo_total]) AS [SumaDePre_Oferta_Cdo_total] ,[@COMBO2].CMBA_FECHA_VIG_DESDE ,[@COMBO2].CMBA_FECHA_VIG_HASTA ,Avg([@COMBO2].[Porcent_Dto_incluido_en_oferta]) AS [Porcent_Dto_incluido_en_oferta] ,Min([@COMBO2].CA06_NOMBRE) AS PrimeroDeCA06_NOMBRE ,Sum([@COMBO2].Weight) AS SumaDeWeight ,Sum([@COMBO2].BasepriceAmount) AS SumaDeBasepriceAmount FROM @COMBO2 GROUP BY [@COMBO2].Cod_Combo ,[@COMBO2].Nombre_combo ,[@COMBO2].Observacion_combo ,[@COMBO2].CMBA_FECHA_VIG_DESDE ,[@COMBO2].[CMBA_FECHA_VIG_HASTA]");
      return comboweb.recordsets;
    }
    catch (error){
      console.log(error);
    }
  }

async function getUltimaVta(){
  try{
    let pool = await sql.connect(config.plataforma);
    let listaUltimaVta = await pool.request().query("DECLARE @Ultima_Vuelta TABLE(CVCL_FECHA_EMI DATETIME, CVCL_CLIENTE INT, CLIE_NOMBRE VARCHAR(30), CVCL_DIVISION_CVCL SMALLINT, CVCL_SUCURSAL_IMP INT, CVCL_TIPO_VAR VARCHAR(3), CVCL_NUMERO_CVCL DECIMAL(10,0), CVRF_RENGLON_CVRF SMALLINT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), CVRF_UNIMED VARCHAR(3), CVRF_CANT_ING DECIMAL(14,4), CVRF_PRE_NETLOC_SI DECIMAL(14,4), Subtotal_SI DECIMAL(14,4)) INSERT INTO @Ultima_Vuelta SELECT CCOB_CVCL.CVCL_FECHA_EMI ,CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_CVCL.CVCL_DIVISION_CVCL ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_NUMERO_CVCL ,VENT_CVRF.CVRF_RENGLON_CVRF ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_CVRF.CVRF_UNIMED ,VENT_CVRF.CVRF_CANT_ING ,VENT_CVRF.CVRF_PRE_NETLOC_SI ,Round([CVRF_CANT_ING]*[CVRF_PRE_NETLOC_SI],2) AS [Subtotal_SI] FROM(CCOB_CLIE INNER JOIN (CCOB_CVCL INNER JOIN VENT_CVRF ON (CCOB_CVCL.CVCL_NUMERO_CVCL = VENT_CVRF.CVRF_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = VENT_CVRF.CVRF_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = VENT_CVRF.CVRF_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = VENT_CVRF.CVRF_DIVISION_CVCL)) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_CVCL.CVCL_CLIENTE) INNER JOIN STOC_ARTS ON VENT_CVRF.CVRF_ARTICULO = STOC_ARTS.ARTS_ARTICULO SELECT [@Ultima_Vuelta].ARTS_ARTICULO_EMP, [@Ultima_Vuelta].ARTS_NOMBRE, Max([@Ultima_Vuelta].CVCL_FECHA_EMI) AS [Ultima Vta] FROM @Ultima_Vuelta GROUP BY [@Ultima_Vuelta].ARTS_ARTICULO_EMP, [@Ultima_Vuelta].ARTS_NOMBRE;");
    return listaUltimaVta.recordsets;
  }
  catch(error){
    console.log(error);
  }
}

var ArrayComprobantes = [];
async function ArrayComprobantesOmitir() {
  let urlArray = `${process.env.URL_API}` + 'comprobantesaomitir'
  const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
    .then(response => {results = []; data = response.data; for(var i = 0; i < data.length; i++){results.push(data[i]['cod_comprobante'])} return results })
    .catch((error)=>{console.log(error)});
  return ArrayComprobantes.push(response);
  } 
ArrayComprobantesOmitir();

var ArrayComprobantes2 = [];
async function ArrayRemitosVtas() {
  let urlArray = `${process.env.URL_API}` + 'remitosvtas'
  const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
    .then(response => {results = []; data = response.data; for(var i = 0; i < data.length; i++){results.push(data[i]['cod_comprobante'])} return results })
    .catch((error)=>{console.log(error)});
  return ArrayComprobantes2.push(response);
  } 
ArrayRemitosVtas();

async function AcopioCemento(fechaAlta){
  try{
    const NPaConsiderar = Array[0].map(x => `'${x}'`);
    const NPaConsiderarWithCommas = NPaConsiderar.join(',');
    const DeposANoConsiderar = ArrayDepositoANoConsiderar[0]
    const CodComprobante = ArrayComprobantes[0].map(x => `'${x}'`);
    const ComprobanteAOmitir = CodComprobante.join(',');
    const CodRemitos = ArrayComprobantes2[0].map(x => `'${x}'`);
    const RemitosVtas = CodRemitos.join(',');
    let pool = await sql.connect(config.plataforma);
    let listaAcopioCemento = await pool.request()
    .input('input_parameter', sql.Date, fechaAlta)
    .query("DECLARE @Depos_A_No_considerar TABLE(Cod_Depos INT, Nomb_Depos VARCHAR(30)) INSERT INTO @Depos_A_No_considerar SELECT STOC_DPOS.DPOS_DEPOSITO AS Cod_Depos ,STOC_DPOS.DPOS_NOMBRE AS Nomb_Depos FROM STOC_DPOS WITH (NOLOCK) WHERE STOC_DPOS.DPOS_DEPOSITO IN ("+ DeposANoConsiderar +") DECLARE @Stock_Cemento TABLE(ARTS_ARTICULO INT, Cod_Art VARCHAR(30), Nombre_Art VARCHAR(70), Stock_Uni_Cemento DECIMAL(14,4)) INSERT INTO @Stock_Cemento SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cod_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [Stock_Uni_Cemento] FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) LEFT JOIN @Depos_A_No_considerar ON STOC_SDPP.SDPP_DEPOSITO = [@Depos_A_No_considerar].[Cod_Depos] GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,[@Depos_A_No_considerar].[Nomb_Depos] HAVING (((STOC_ARTS.ARTS_ARTICULO_EMP)='01300045') AND (([@Depos_A_No_considerar].[Nomb_Depos]) Is Null)) DECLARE @NP_A_Considerar TABLE(Cod_Comp VARCHAR(30), Nomb_Comp VARCHAR(30)) INSERT INTO @NP_A_Considerar SELECT VENT_TCVE.TCVE_TIPO_COM AS Cod_Comp, VENT_TCVE.TCVE_NOMBRE AS Nomb_Comp FROM VENT_TCVE WITH (NOLOCK) WHERE VENT_TCVE.TCVE_TIPO_COM IN ("+ NPaConsiderarWithCommas +") DECLARE @Cemento_NP1 TABLE(NPCA_FECHA_EMI DATETIME, NPCA_DIVISION_NPCA SMALLINT, NPCA_TIPO_NPCA VARCHAR(3), NPCA_NUMERO_NPCA DECIMAL(10,0), NPCA_CLIENTE INT, NPDE_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPDE_CANT_PEDIDA DECIMAL(14,4), NPDE_CANT_ENTREG DECIMAL(14,4), Pend_entreg_NP DECIMAL(14,4), NPDE_CANT_FACTUR DECIMAL(14,4), NPDE_MOTIVO_CANC VARCHAR(3), ARTS_FACTOR_HOMSTO DECIMAL(20,12)) INSERT INTO @Cemento_NP1 SELECT VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_CLIENTE ,VENT_NPDE.NPDE_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,[NPDE_CANT_PEDIDA]-IIf([NPDE_CANT_ENTREG]>[NPDE_CANT_FACTUR],[NPDE_CANT_ENTREG],[NPDE_CANT_FACTUR]) AS [Pend_entreg_NP] ,VENT_NPDE.NPDE_CANT_FACTUR ,VENT_NPDE.NPDE_MOTIVO_CANC ,STOC_ARTS.ARTS_FACTOR_HOMSTO FROM @NP_A_Considerar INNER JOIN ((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON [@NP_A_Considerar].Cod_Comp = VENT_NPCA.NPCA_TIPO_NPCA GROUP BY VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_CLIENTE ,VENT_NPDE.NPDE_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,[NPDE_CANT_PEDIDA]-IIf([NPDE_CANT_ENTREG]>[NPDE_CANT_FACTUR],[NPDE_CANT_ENTREG],[NPDE_CANT_FACTUR]) ,VENT_NPDE.NPDE_CANT_FACTUR ,VENT_NPDE.NPDE_MOTIVO_CANC ,STOC_ARTS.ARTS_FACTOR_HOMSTO ,VENT_NPDE.NPDE_CANT_ENTREG HAVING (((STOC_ARTS.ARTS_ARTICULO_EMP)='01300045') AND (([NPDE_CANT_PEDIDA]-IIf([NPDE_CANT_ENTREG]>[NPDE_CANT_FACTUR],[NPDE_CANT_ENTREG],[NPDE_CANT_FACTUR]))>0) AND ((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null)) DECLARE @Cemento_NP TABLE(NPDE_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), SumaDePendentregNP DECIMAL(14,4)) INSERT INTO @Cemento_NP SELECT [@Cemento_NP1].NPDE_ARTICULO ,[@Cemento_NP1].ARTS_ARTICULO_EMP ,[@Cemento_NP1].ARTS_NOMBRE ,Sum([@Cemento_NP1].[Pend_entreg_NP]) AS [SumaDePendentregNP] FROM @Cemento_NP1 GROUP BY [@Cemento_NP1].NPDE_ARTICULO ,[@Cemento_NP1].ARTS_ARTICULO_EMP ,[@Cemento_NP1].ARTS_NOMBRE DECLARE @Fact_Cemento_Acopio TABLE( CVCL_FECHA_EMI DATETIME, CVCL_DIVISION_CVCL SMALLINT, CVCL_SUCURSAL_IMP INT, CVCL_TIPO_VAR VARCHAR(3), CVCL_NUMERO_CVCL DECIMAL(10,0), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), CVRF_SIGNO VARCHAR(1), CVRF_CANT_ING DECIMAL(14,4), CVRF_PRE_NETLOC_SI DECIMAL(14,4), CVRF_CREP DECIMAL(14,3), Cantidad DECIMAL(14,4), Costo_reposicion DECIMAL(14,3)) INSERT INTO @Fact_Cemento_Acopio SELECT CCOB_CVCL.CVCL_FECHA_EMI ,CCOB_CVCL.CVCL_DIVISION_CVCL ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_NUMERO_CVCL ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_CVRF.CVRF_SIGNO ,VENT_CVRF.CVRF_CANT_ING ,VENT_CVRF.CVRF_PRE_NETLOC_SI ,VENT_CVRF.CVRF_CREP ,VENT_CVRF.[CVRF_CANT_ING]*IIf(VENT_CVRF.[CVRF_SIGNO]='E',-1,1) AS Cantidad ,IIf(VENT_CVRF.[CVRF_CREP]=VENT_CVRF.[CVRF_CREP],VENT_CVRF.[CVRF_CREP]*IIf(VENT_CVRF.[CVRF_SIGNO]='E',-1,1), 0.0001) AS [Costo_reposicion] FROM (CCOB_CVCL WITH (NOLOCK) INNER JOIN VENT_CVRF WITH (NOLOCK) ON (CCOB_CVCL.CVCL_NUMERO_CVCL = VENT_CVRF.CVRF_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = VENT_CVRF.CVRF_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = VENT_CVRF.CVRF_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = VENT_CVRF.CVRF_DIVISION_CVCL)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_CVRF.CVRF_ARTICULO = STOC_ARTS.ARTS_ARTICULO WHERE (((CCOB_CVCL.CVCL_FECHA_EMI)>= @input_parameter) AND ((STOC_ARTS.ARTS_ARTICULO_EMP)='01300045')) AND (CCOB_CVCL.CVCL_TIPO_VAR NOT IN ("+ ComprobanteAOmitir +")) ORDER BY CCOB_CVCL.CVCL_FECHA_EMI ,CCOB_CVCL.CVCL_DIVISION_CVCL ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_NUMERO_CVCL DECLARE @Facturas TABLE(CVCL_FECHA_EMI DATETIME, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Cantidad_de_facturas DECIMAL(14,4)) INSERT INTO @Facturas SELECT DISTINCT [@Fact_Cemento_Acopio].CVCL_FECHA_EMI ,[@Fact_Cemento_Acopio].ARTS_ARTICULO_EMP ,[@Fact_Cemento_Acopio].ARTS_NOMBRE ,Sum([@Fact_Cemento_Acopio].Cantidad) AS [Cantidad_de_facturas] FROM @Fact_Cemento_Acopio GROUP BY [@Fact_Cemento_Acopio].CVCL_FECHA_EMI ,[@Fact_Cemento_Acopio].ARTS_ARTICULO_EMP ,[@Fact_Cemento_Acopio].ARTS_NOMBRE DECLARE @Remitos_A_Clientes_Cemento TABLE( MSMV_DIVISION_MSVA SMALLINT, MSMV_SUCURSAL_MSVA INT, MSMV_TIPO_MSVA VARCHAR(3), MSMV_NUMERO_MSVA DECIMAL(10,0), Fecha_comprobante DATETIME, AnosMes VARCHAR(30), MOST_MOVSTO_MOST INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), MOSD_CANT_ING DECIMAL(14,4), MOSD_SIGNO VARCHAR(1), Cantidad DECIMAL(14,4)) INSERT INTO @Remitos_A_Clientes_Cemento SELECT STOC_MSMV.MSMV_DIVISION_MSVA ,STOC_MSMV.MSMV_SUCURSAL_MSVA ,STOC_MSMV.MSMV_TIPO_MSVA ,STOC_MSMV.MSMV_NUMERO_MSVA ,STOC_MOST.MOST_FECHA_EMI AS [Fecha_comprobante] ,CAST(YEAR(STOC_MOST.MOST_FECHA_EMI) AS NVARCHAR) + ' - ' + RIGHT('0' + CAST(Month(STOC_MOST.MOST_FECHA_EMI) AS NVARCHAR),2) AS [AnosMes] ,STOC_MOST.MOST_MOVSTO_MOST ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_MOSD.MOSD_CANT_ING ,STOC_MOSD.MOSD_SIGNO ,IIf([MOSD_SIGNO]='E',-1,1)*[MOSD_CANT_ING] AS Cantidad FROM (STOC_MOST WITH (NOLOCK) INNER JOIN (STOC_MSMV WITH (NOLOCK) INNER JOIN STOC_MOSD WITH (NOLOCK) ON STOC_MSMV.MSMV_MOVSTO_MOST = STOC_MOSD.MOSD_MOVSTO_MOST) ON STOC_MOST.MOST_MOVSTO_MOST = STOC_MSMV.MSMV_MOVSTO_MOST) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_MOSD.MOSD_ARTICULO = STOC_ARTS.ARTS_ARTICULO WHERE (((STOC_MOST.MOST_FECHA_EMI)>= @input_parameter) AND ((STOC_ARTS.ARTS_ARTICULO_EMP)='01300045')) AND (STOC_MSMV.MSMV_TIPO_MSVA IN ("+ RemitosVtas +")) DECLARE @Remitos TABLE(Fecha_comprobante DATETIME,ARTS_ARTICULO_EMP VARCHAR(30),ARTS_NOMBRE VARCHAR(70), Cantidad_de_remitos DECIMAL(14,4)) INSERT INTO @Remitos SELECT DISTINCT [@Remitos_A_Clientes_Cemento].[Fecha_comprobante] ,[@Remitos_A_Clientes_Cemento].ARTS_ARTICULO_EMP ,[@Remitos_A_Clientes_Cemento].ARTS_NOMBRE ,Sum([@Remitos_A_Clientes_Cemento].Cantidad) AS [Cantidad_de_remitos] FROM @Remitos_A_Clientes_Cemento GROUP BY [@Remitos_A_Clientes_Cemento].[Fecha_comprobante] ,[@Remitos_A_Clientes_Cemento].ARTS_ARTICULO_EMP ,[@Remitos_A_Clientes_Cemento].ARTS_NOMBRE DECLARE @Consolidacion TABLE(CVCL_FECHA_EMI DATETIME, Fecha TEXT, Cantidad_de_facturas DECIMAL(14,4), Cantidad_de_remitos DECIMAL(14,4)) INSERT INTO @Consolidacion SELECT [@Facturas].CVCL_FECHA_EMI ,FORMAT(CAST([@Facturas].CVCL_FECHA_EMI AS DATETIME), 'dddd', 'es-es') AS Fecha ,[@Facturas].[Cantidad_de_facturas] ,[@Remitos].[Cantidad_de_remitos] FROM @Facturas INNER JOIN @Remitos ON [@Facturas].CVCL_FECHA_EMI = [@Remitos].Fecha_comprobante SELECT [@Consolidacion].CVCL_FECHA_EMI ,[@Consolidacion].[Fecha] AS Dia_semana ,[@Consolidacion].[Cantidad_de_facturas] ,[@Consolidacion].[Cantidad_de_remitos] ,[@Cemento_NP].[SumaDePendentregNP] ,[@Stock_Cemento].Stock_Uni_Cemento AS Stock_Cemento_todos_los_Depos FROM @Consolidacion ,@Cemento_NP ,@Stock_Cemento");
    return listaAcopioCemento.recordsets;
  }
  catch(error){
    console.log(error)
  }
}

var ArrayArticulosCalesCementosPlasticor = [];
async function ArrayArticulos() {
  let urlArray = `${process.env.URL_API}` + 'calescementosplasticor'
  const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
    .then(response => {results = []; data = response.data; for(var i = 0; i < data.length; i++){results.push(data[i]['cod_articulos'])} return results })
    .catch((error)=>{console.log(error)});
  return ArrayArticulosCalesCementosPlasticor.push(response);
  } 
ArrayArticulos();

async function StockNPOC_CalesCementosPlasticor(){
  const NPaConsiderar = Array[0].map(x => `'${x}'`);
  const NPaConsiderarWithCommas = NPaConsiderar.join(',');
  const DeposANoConsiderar = ArrayDepositoANoConsiderar[0]
  const ArrayArtCalesCementosPlasticor = ArrayArticulosCalesCementosPlasticor[0].map(x => `'${x}'`);
  const CalesCementosPlasticor = ArrayArtCalesCementosPlasticor.join(',');
  try{
    let pool = await sql.connect(config.plataforma);
    let listaCalesCementosPlasticor = await pool.request()
    .query("DECLARE @AGMO_Stock_NP_0C1_NP2 TABLE(ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Pend_entreg_NP DECIMAL(14,4)) INSERT INTO @AGMO_Stock_NP_0C1_NP2 SELECT STOC_ARTS.ARTS_ARTICULO_EMP, STOC_ARTS.ARTS_NOMBRE, SUM([NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG]) AS [Pend_entreg_NP] FROM(((((VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA06 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_6 = STOC_CA06.CA06_CLASIF_6) INNER JOIN STOC_CA02 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_2 = STOC_CA02.CA02_CLASIF_2)) WHERE (((VENT_NPDE.NPDE_MOTIVO_CANC) Is Null) AND ((STOC_CA06.CA06_CLASIF_6)='0059') AND (STOC_ARTS.ARTS_ARTICULO_EMP IN ("+ CalesCementosPlasticor +")) AND (STOC_ARTS.ARTS_CLASIF_2 IN ('0011')) AND (VENT_NPCA.NPCA_TIPO_NPCA IN ("+ NPaConsiderarWithCommas +"))) GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP, STOC_ARTS.ARTS_NOMBRE DECLARE @AGMO_Stock_NP_OC2_Stock TABLE(ARTS_ARTICULO INT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Stock_Uni_todos_los_depos DECIMAL(14,4)) INSERT INTO @AGMO_Stock_NP_OC2_Stock SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,SUM([SDPP_STOCK_ACT]) AS [Stock_Uni_todos_los_depos] FROM STOC_CA06 WITH (NOLOCK) INNER JOIN (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) ON STOC_CA06.CA06_CLASIF_6 = STOC_ARTS.ARTS_CLASIF_6 WHERE (((STOC_SDPP.SDPP_DEPOSITO) NOT IN ("+ DeposANoConsiderar +")) AND (STOC_ARTS.ARTS_ARTICULO_EMP IN ("+ CalesCementosPlasticor +"))) GROUP BY STOC_ARTS.ARTS_ARTICULO, STOC_ARTS.ARTS_ARTICULO_EMP, STOC_ARTS.ARTS_NOMBRE DECLARE @AGMO_Stock_NP_OC3_OC2 TABLE(ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Cant_pend_ent_OC DECIMAL(14,4)) INSERT INTO @AGMO_Stock_NP_OC3_OC2 SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,SUM(IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0)) AS [Cant_pend_ent_OC] FROM ((((CPAG_PROV WITH (NOLOCK) INNER JOIN ((((COMP_CODC WITH (NOLOCK) INNER JOIN COMP_RODC WITH (NOLOCK) ON (COMP_CODC.CODC_NUM_OC = COMP_RODC.RODC_NUM_OC) AND (COMP_CODC.CODC_TIPO_OC = COMP_RODC.RODC_TIPO_OC) AND (COMP_CODC.CODC_DIVISION = COMP_RODC.RODC_DIVISION)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_ARCO WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARCO.ARCO_ARTICULO) INNER JOIN CPAG_RUBC WITH (NOLOCK) ON STOC_ARCO.ARCO_RUBRO_COMPRA = CPAG_RUBC.RUBC_RUBRO_COMPRA) ON CPAG_PROV.PROV_PROVEEDOR = COMP_CODC.CODC_PROVEEDOR) INNER JOIN STOC_CA02 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_2 = STOC_CA02.CA02_CLASIF_2) INNER JOIN STOC_CA03 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_3 = STOC_CA03.CA03_CLASIF_3) INNER JOIN STOC_CA06 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_6 = STOC_CA06.CA06_CLASIF_6) INNER JOIN STOC_CA08 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_8 = STOC_CA08.CA08_CLASIF_8 WHERE (((IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0))>0) AND ((COMP_RODC.RODC_MOTIVO_CANC) Is Null) AND (STOC_ARTS.ARTS_CLASIF_2 IN ('0011')) AND (STOC_ARTS.ARTS_ARTICULO_EMP IN ("+ CalesCementosPlasticor +"))) GROUP BY STOC_ARTS.ARTS_ARTICULO_EMP, STOC_ARTS.ARTS_NOMBRE SELECT STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,[@AGMO_Stock_NP_OC2_Stock].[Stock_Uni_todos_los_depos] ,[@AGMO_Stock_NP_0C1_NP2].[Pend_entreg_NP] ,IIf([@AGMO_Stock_NP_OC2_Stock].[Stock_Uni_todos_los_depos]-[@AGMO_Stock_NP_0C1_NP2].[Pend_entreg_NP]<0,0,[@AGMO_Stock_NP_OC2_Stock].[Stock_Uni_todos_los_depos]-[@AGMO_Stock_NP_0C1_NP2].[Pend_entreg_NP]) AS [Stock_disponible] ,[@AGMO_Stock_NP_OC3_OC2].[Cant_pend_ent_OC] FROM ((STOC_ARTS LEFT JOIN @AGMO_Stock_NP_0C1_NP2 ON STOC_ARTS.ARTS_ARTICULO_EMP = [@AGMO_Stock_NP_0C1_NP2].ARTS_ARTICULO_EMP) LEFT JOIN @AGMO_Stock_NP_OC3_OC2 ON STOC_ARTS.ARTS_ARTICULO_EMP = [@AGMO_Stock_NP_OC3_OC2].ARTS_ARTICULO_EMP) LEFT JOIN @AGMO_Stock_NP_OC2_Stock ON STOC_ARTS.ARTS_ARTICULO_EMP = [@AGMO_Stock_NP_OC2_Stock].ARTS_ARTICULO_EMP WHERE STOC_ARTS.ARTS_CLASIF_2 IN ('0011') AND STOC_ARTS.ARTS_ARTICULO_EMP IN ("+ CalesCementosPlasticor +")");
    return listaCalesCementosPlasticor.recordsets;
  }
  catch(error){
    console.log(error);
  }
}

async function ListaClientesPlataforma(){
  try{
    let pool = await sql.connect(config.plataforma);
    let listaClientesPlataforma = await pool.request()
    .query("SELECT CCOB_CLIE.CLIE_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_CLIE.CLIE_EMAIL, CCOB_CLIE.CLIE_CUIT FROM CCOB_CLIE WITH(NOLOCK) WHERE CCOB_CLIE.CLIE_TIPO_CLI IN ('REC', 'GEN') AND CCOB_CLIE.CLIE_FECHA_BAJA IS NULL");
    return listaClientesPlataforma.recordsets
  }
  catch(error){
    console.log(error);
  }
}

var ArrayFiltrosClientes = [];
var ArrayFiltrosClientes2 = []
async function ArrayFiltrosClientesPlataforma() {
  let urlArray = `${process.env.URL_API}` + 'filtroclientesplataforma'
  const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
    .then(response => {
      results = []; 
      data = response.data; 
      for(var i = 0; i < data.length; i++){
        for(var y = 0; y < data[i]['tipo_de_cliente']['tc'].length; y++){
          results.push(data[i]['tipo_de_cliente']['tc'][y]);
        }
      } 
      return results })
    .catch((error)=>{console.log(error)});
  return ArrayFiltrosClientes.push(response);
  } 
ArrayFiltrosClientesPlataforma();

async function ArrayFiltrosClientesPlataforma2() {
  let urlArray = `${process.env.URL_API}` + 'filtroclientesplataforma'
  const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
    .then(response => {
      results = []; 
      data = response.data; 
      for(var i = 0; i < data.length; i++){
        for(var y = 0; y < data[i]['perfil_crediticio']['pc'].length; y++){
          results.push(data[i]['perfil_crediticio']['pc'][y]);
        }
      } 
      return results })
    .catch((error)=>{console.log(error)});
  return ArrayFiltrosClientes2.push(response);
  } 
ArrayFiltrosClientesPlataforma2();

async function ListaClientesPlataformaCtaCte(){
  const getListaTC = ArrayFiltrosClientes[0]
  const ListaTC = getListaTC.map(x => `'${x}'`);
  const ListaTCCommas = ListaTC.join(',');
  const getListaPC = ArrayFiltrosClientes2[0]
  const ListaPC = getListaPC.map(x => `'${x}'`);
  const ListaPCCommas = ListaPC.join(',');
  try{
    let pool = await sql.connect(config.plataforma);
    let listaClientesPlataformaCtaCte = await pool.request()
    .query("SELECT CCOB_CLIE.CLIE_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_CLIE.CLIE_EMAIL FROM CCOB_CLIE WITH(NOLOCK) WHERE CCOB_CLIE.CLIE_TIPO_CLI IN ("+ ListaTCCommas +") AND CCOB_CLIE.CLIE_CLASIF_2 IN ("+ ListaPCCommas +") AND CCOB_CLIE.CLIE_FECHA_BAJA IS NULL");
    return listaClientesPlataformaCtaCte.recordsets
  }
  catch(error){
    console.log(error);
  }
}

async function ListaClientesPlataformaAcopios(){
  try{
    let pool = await sql.connect(config.plataforma);
    let listaClientesAcopios = await pool.request()
    .query("SELECT MAX(VENT_PACA.PACA_FECHA_EMI) AS FECHA_EMI, MAX(VENT_PACA.PACA_FECHA_VIG_HASTA) AS FECHA_VIG_HASTA, VENT_PACA.PACA_CLIENTE, CCOB_CLIE.CLIE_NOMBRE, PDVE_TFAC.TFAC_TIPO_PAC FROM((VENT_PACA WITH (NOLOCK) INNER JOIN CCOB_CLIE WITH (NOLOCK) ON VENT_PACA.PACA_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) INNER JOIN CCOB_CVCL WITH (NOLOCK) ON VENT_PACA.PACA_NUMINT_PACA = CCOB_CVCL.CVCL_NUMINT_PACA) INNER JOIN PDVE_TFAC WITH (NOLOCK) ON (CCOB_CVCL.CVCL_SUCURSAL_IMP = PDVE_TFAC.TFAC_SUCURSAL_FAC) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = PDVE_TFAC.TFAC_DIVISION_FAC) WHERE (((PDVE_TFAC.TFAC_TIPO_PAC)='PAC')) GROUP BY VENT_PACA.PACA_CLIENTE, CCOB_CLIE.CLIE_NOMBRE, PDVE_TFAC.TFAC_TIPO_PAC, CCOB_CLIE.CLIE_TIPO_CLI, CCOB_CLIE.CLIE_CLASIF_2");
    return listaClientesAcopios.recordsets
  }
  catch(error){
    console.log(error);
  }
}

async function TiposDeClientes(){
  try{
    let pool = await sql.connect(config.plataforma);
    let listaTipos = await pool.request()
    .query("SELECT CCOB_TCLI.TCLI_TIPO_CLI,CCOB_TCLI.TCLI_NOMBRE,CCOB_TCLI.TCLI_UTILIZABLE FROM CCOB_TCLI WITH (NOLOCK)");
    return listaTipos.recordsets
  }
  catch(error){
    console.log(error);
  }
}

async function PerfilCrediticio(){
  try{
    let pool = await sql.connect(config.plataforma);
    let ListaPerfilC = await pool.request().query("SELECT CCOB_CLC2.CLC2_CLASIF_2,CCOB_CLC2.CLC2_NOMBRE,CCOB_CLC2.CLC2_UTILIZABLE FROM CCOB_CLC2 WITH (NOLOCK)");
    return ListaPerfilC.recordsets
  }
  catch(error){
    console.log(error);
  }
}

async function NP_Problema_EI(fechaDesde){
  try{
    let pool = await sql.connect(config.plataforma);
    let ListaNPCProblemaEI = await pool.request()
    .input('input_FechaDesde', sql.Date, fechaDesde)
    .query("SELECT VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,SIST_VEND.VEND_NOMBRE ,IIf(([VENT_NPCA].[NPCA_TIPO_NPCA]='NPT') ,IIf(([VENT_NPAU].[NPAU_CTRL_AUTORIZ]=1) ,IIf(([VENT_NPAU].[NPAU_ESTADO_APROB]=1) ,'*','No aprobado - Ver con FINANZAS') ,'*') ,'*') AS ControlCrediticio FROM(((((VENT_NPCA INNER JOIN CCOB_CLIE ON VENT_NPCA.NPCA_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) LEFT JOIN VENT_NPCF ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPCF.NPCF_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPCF.NPCF_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPCF.NPCF_NUMERO_NPCA)) LEFT JOIN VENT_RSDE ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_RSDE.RSDE_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_RSDE.RSDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_RSDE.RSDE_NUMERO_NPCA)) INNER JOIN VENT_NPVE ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPVE.NPVE_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPVE.NPVE_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPVE.NPVE_NUMERO_NPCA)) INNER JOIN SIST_VEND ON VENT_NPVE.NPVE_VENDEDOR = SIST_VEND.VEND_VENDEDOR) INNER JOIN VENT_NPAU ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPAU.NPAU_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPAU.NPAU_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPAU.NPAU_NUMERO_NPCA) GROUP BY VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,SIST_VEND.VEND_NOMBRE ,IIf(([VENT_NPCA].[NPCA_TIPO_NPCA]='NPT') ,IIf(([VENT_NPAU].[NPAU_CTRL_AUTORIZ]=1) ,IIf(([VENT_NPAU].[NPAU_ESTADO_APROB]=1) ,'*','No aprobado - Ver con FINANZAS') ,'*') ,'*') ,VENT_NPAU.NPAU_CTRL_AUTORIZ ,VENT_NPCA.NPCA_MODALIDAD_ENTREGA HAVING (((VENT_NPCA.NPCA_TIPO_NPCA) IN ('NPC','NPG','NPT','PEA')) AND ((VENT_NPCA.NPCA_FECHA_EMI)>= @input_FechaDesde) AND ((IIf(([VENT_NPCA].[NPCA_TIPO_NPCA]='NPT') ,IIf(([VENT_NPAU].[NPAU_CTRL_AUTORIZ]=1) ,IIf(([VENT_NPAU].[NPAU_ESTADO_APROB]=1) ,'*','No aprobado - Ver con FINANZAS') ,'*') ,'*'))<>'*') AND ((VENT_NPAU.NPAU_CTRL_AUTORIZ)=1 OR (VENT_NPAU.NPAU_CTRL_AUTORIZ)=7) AND ((VENT_NPCA.NPCA_MODALIDAD_ENTREGA)='00')) UNION SELECT VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,SIST_VEND.VEND_NOMBRE ,IIf([VENT_NPCA].[NPCA_HABIL_GEN_ORDEN_PREP]=1,'0','Deshabilitada Para Orden de Preparacion - VENDEDOR') AS HabilitadaOP FROM (((((VENT_NPCA INNER JOIN CCOB_CLIE ON VENT_NPCA.NPCA_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) LEFT JOIN VENT_NPCF ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPCF.NPCF_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPCF.NPCF_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPCF.NPCF_NUMERO_NPCA)) LEFT JOIN VENT_RSDE ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_RSDE.RSDE_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_RSDE.RSDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_RSDE.RSDE_NUMERO_NPCA)) INNER JOIN VENT_NPVE ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPVE.NPVE_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPVE.NPVE_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPVE.NPVE_NUMERO_NPCA)) INNER JOIN SIST_VEND ON VENT_NPVE.NPVE_VENDEDOR = SIST_VEND.VEND_VENDEDOR) INNER JOIN VENT_NPAU ON (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPAU.NPAU_DIVISION_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPAU.NPAU_TIPO_NPCA) AND (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPAU.NPAU_NUMERO_NPCA) GROUP BY VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,SIST_VEND.VEND_NOMBRE ,IIf([VENT_NPCA].[NPCA_HABIL_GEN_ORDEN_PREP]=1,'0','Deshabilitada Para Orden de Preparacion - VENDEDOR') ,VENT_NPAU.NPAU_CTRL_AUTORIZ ,VENT_NPCA.NPCA_MODALIDAD_ENTREGA HAVING (((VENT_NPCA.NPCA_TIPO_NPCA) IN ('NPC','NPG','NPT','PEA')) AND ((VENT_NPCA.NPCA_FECHA_EMI)>= @input_FechaDesde) AND ((IIf([VENT_NPCA].[NPCA_HABIL_GEN_ORDEN_PREP]=1,'0','Deshabilitada Para Orden de Preparacion - VENDEDOR'))<>'0') AND ((VENT_NPAU.NPAU_CTRL_AUTORIZ)=1 OR (VENT_NPAU.NPAU_CTRL_AUTORIZ)=7) AND ((VENT_NPCA.NPCA_MODALIDAD_ENTREGA)='00')) UNION SELECT VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,SIST_VEND.VEND_NOMBRE ,IIf(([VENT_NPCF].[NPCF_NUMERO_CVCL] Is Null), IIf(([VENT_NPCA].[NPCA_TIPO_NPCA]='NPT'), Null, 'Pendiente de Facturar - CAJAS'), IIf(([VENT_RSDE].[RSDE_NUMINT_RSCA] Is Null) ,'Falta Reserva - VENDEDOR',Null)) AS EstadoFacturacion FROM (((((VENT_NPCA INNER JOIN CCOB_CLIE ON VENT_NPCA.NPCA_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) LEFT JOIN VENT_NPCF ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPCF.NPCF_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPCF.NPCF_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPCF.NPCF_DIVISION_NPCA)) LEFT JOIN VENT_RSDE ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_RSDE.RSDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_RSDE.RSDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_RSDE.RSDE_DIVISION_NPCA)) INNER JOIN VENT_NPVE ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPVE.NPVE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPVE.NPVE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPVE.NPVE_DIVISION_NPCA)) INNER JOIN SIST_VEND ON VENT_NPVE.NPVE_VENDEDOR = SIST_VEND.VEND_VENDEDOR) INNER JOIN VENT_NPAU ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPAU.NPAU_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPAU.NPAU_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPAU.NPAU_DIVISION_NPCA) GROUP BY VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,SIST_VEND.VEND_NOMBRE ,IIf(([VENT_NPCF].[NPCF_NUMERO_CVCL] Is Null) ,IIf(([VENT_NPCA].[NPCA_TIPO_NPCA]='NPT') ,Null,'Pendiente de Facturar - CAJAS') ,IIf(([VENT_RSDE].[RSDE_NUMINT_RSCA] Is Null) ,'Falta Reserva - VENDEDOR',Null)) ,VENT_NPAU.NPAU_CTRL_AUTORIZ ,VENT_NPCA.NPCA_MODALIDAD_ENTREGA HAVING (((VENT_NPCA.NPCA_TIPO_NPCA) IN ('NPC','NPG','NPT','PEA')) AND ((VENT_NPCA.NPCA_FECHA_EMI)>= @input_FechaDesde) AND ((IIf(([VENT_NPCF].[NPCF_NUMERO_CVCL] Is Null) ,IIf(([VENT_NPCA].[NPCA_TIPO_NPCA]='NPT') ,Null,'Pendiente de Facturar - CAJAS') ,IIf(([VENT_RSDE].[RSDE_NUMINT_RSCA] Is Null) ,'Falta Reserva - VENDEDOR',Null))) Is Not Null) AND ((VENT_NPAU.NPAU_CTRL_AUTORIZ)=1 OR (VENT_NPAU.NPAU_CTRL_AUTORIZ)=7) AND ((VENT_NPCA.NPCA_MODALIDAD_ENTREGA)='00')) ORDER BY CCOB_CLIE.CLIE_NOMBRE")
    return ListaNPCProblemaEI.recordsets
  }
  catch(error){
    console.log(error);
  }
}

async function NCInformesAcindarPTF(){
  try{
    let pool = await sql.connect(config.plataforma);
    let ListaNCInformesAcindarPTF = await pool.request().query("DECLARE @1ConsultaAcindarNCTodoslosComprobantes TABLE( CVCL_TIPO_VAR VARCHAR(3), CVCL_SUCURSAL_IMP INT, CVCL_NUMERO_CVCL DECIMAL(10,0), CVRF_RENGLON_CVRF SMALLINT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPCF_TIPO_NPCA VARCHAR(3), NPCF_NUMERO_NPCA DECIMAL(10,0), NPCF_RENGLON_NPDE SMALLINT, CVCL_FECHA_EMI DATETIME) INSERT INTO @1ConsultaAcindarNCTodoslosComprobantes SELECT CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_NUMERO_CVCL ,VENT_CVRF.CVRF_RENGLON_CVRF ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPCF.NPCF_TIPO_NPCA ,VENT_NPCF.NPCF_NUMERO_NPCA ,VENT_NPCF.NPCF_RENGLON_NPDE ,CCOB_CVCL.CVCL_FECHA_EMI FROM(CCOB_CPCD WITH (NOLOCK) INNER JOIN ((CCOB_CLIE WITH (NOLOCK) INNER JOIN (CCOB_CVCL WITH (NOLOCK) INNER JOIN (VENT_CVRF WITH (NOLOCK) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_CVRF.CVRF_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON (CCOB_CVCL.CVCL_NUMERO_CVCL = VENT_CVRF.CVRF_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = VENT_CVRF.CVRF_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = VENT_CVRF.CVRF_SUCURSAL_CVCL)) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_CVCL.CVCL_CLIENTE) INNER JOIN CCOB_CPCL WITH (NOLOCK) ON CCOB_CLIE.CLIE_COND_PAGO = CCOB_CPCL.CPCL_COND_PAGO) ON CCOB_CPCD.CPCD_COND_PAGO = CCOB_CPCL.CPCL_COND_PAGO) LEFT JOIN VENT_NPCF WITH (NOLOCK) ON (VENT_CVRF.CVRF_RENGLON_CVRF = VENT_NPCF.NPCF_RENGLON_CVRF) AND (VENT_CVRF.CVRF_NUMERO_CVCL = VENT_NPCF.NPCF_NUMERO_CVCL) AND (VENT_CVRF.CVRF_TIPO_CVCL = VENT_NPCF.NPCF_TIPO_CVCL) AND (VENT_CVRF.CVRF_SUCURSAL_CVCL = VENT_NPCF.NPCF_SUCURSAL_CVCL) WHERE (((CCOB_CVCL.CVCL_FECHA_EMI) BETWEEN DATEADD(DAY,1, EOMONTH(GETDATE(),-2)) AND EOMONTH(GETDATE(),-1)) AND ((VENT_CVRF.CVRF_SIGNO) IN ('E')) AND ((STOC_ARTS.ARTS_CLASIF_6) IN ('0009'))) SELECT [@1ConsultaAcindarNCTodoslosComprobantes].CVCL_TIPO_VAR ,[@1ConsultaAcindarNCTodoslosComprobantes].CVCL_SUCURSAL_IMP ,[@1ConsultaAcindarNCTodoslosComprobantes].CVCL_NUMERO_CVCL ,[@1ConsultaAcindarNCTodoslosComprobantes].CVRF_RENGLON_CVRF ,VENT_NCFA.NCFA_TIPO_FC_ANTIC ,VENT_NCFA.NCFA_SUCURSAL_FC_ANTIC ,VENT_NCFA.NCFA_NUMERO_FC_ANTIC ,VENT_NCFA.NCFA_RENGLON_FC_ANTIC ,FORMAT([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_FECHA_EMI, 'dd/MM/yyyy', 'en-US') AS CVCL_FECHA_EMI ,[@1ConsultaAcindarNCTodoslosComprobantes].ARTS_ARTICULO_EMP ,[@1ConsultaAcindarNCTodoslosComprobantes].ARTS_NOMBRE FROM @1ConsultaAcindarNCTodoslosComprobantes INNER JOIN VENT_NCFA ON ([@1ConsultaAcindarNCTodoslosComprobantes].CVRF_RENGLON_CVRF = VENT_NCFA.NCFA_RENGLON_NC_CANC) AND ([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_NUMERO_CVCL = VENT_NCFA.NCFA_NUMERO_NC_CANC) AND ([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_SUCURSAL_IMP = VENT_NCFA.NCFA_SUCURSAL_NC_CANC) AND ([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_TIPO_VAR = VENT_NCFA.NCFA_TIPO_NC_CANC) WHERE ([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_TIPO_VAR IN ('NCA', 'NCB', 'NAF')) UNION SELECT [@1ConsultaAcindarNCTodoslosComprobantes].CVCL_TIPO_VAR ,[@1ConsultaAcindarNCTodoslosComprobantes].CVCL_SUCURSAL_IMP ,[@1ConsultaAcindarNCTodoslosComprobantes].CVCL_NUMERO_CVCL ,[@1ConsultaAcindarNCTodoslosComprobantes].CVRF_RENGLON_CVRF ,VENT_NPCF.NPCF_TIPO_CVCL ,VENT_NPCF.NPCF_SUCURSAL_CVCL ,VENT_NPCF.NPCF_NUMERO_CVCL ,VENT_NPCF.NPCF_RENGLON_CVRF ,FORMAT(CCOB_CVCL.CVCL_FECHA_EMI, 'dd/MM/yyyy', 'en-US') AS CVCL_FECHA_EMI ,[@1ConsultaAcindarNCTodoslosComprobantes].ARTS_ARTICULO_EMP ,[@1ConsultaAcindarNCTodoslosComprobantes].ARTS_NOMBRE FROM (@1ConsultaAcindarNCTodoslosComprobantes LEFT JOIN VENT_NPCF WITH (NOLOCK) ON ([@1ConsultaAcindarNCTodoslosComprobantes].NPCF_RENGLON_NPDE = VENT_NPCF.NPCF_RENGLON_NPDE) AND ([@1ConsultaAcindarNCTodoslosComprobantes].NPCF_NUMERO_NPCA = VENT_NPCF.NPCF_NUMERO_NPCA) AND ([@1ConsultaAcindarNCTodoslosComprobantes].NPCF_TIPO_NPCA = VENT_NPCF.NPCF_TIPO_NPCA)) LEFT JOIN CCOB_CVCL WITH (NOLOCK) ON (VENT_NPCF.NPCF_SUCURSAL_CVCL = CCOB_CVCL.CVCL_SUCURSAL_IMP) AND (VENT_NPCF.NPCF_TIPO_CVCL = CCOB_CVCL.CVCL_TIPO_VAR) AND (VENT_NPCF.NPCF_NUMERO_CVCL = CCOB_CVCL.CVCL_NUMERO_CVCL) WHERE (((VENT_NPCF.NPCF_SIGNO)='S'))")
    return ListaNCInformesAcindarPTF.recordsets
  }
  catch(error){
    console.log(error)
  }
}

async function InformesAcindarPTF(){
  try{
    let pool = await sql.connect(config.plataforma);
    let ListaInformesAcindarPTF = await pool.request().query("SELECT CASE WHEN [CVCL_SUCURSAL_IMP] BETWEEN 100 AND 999 THEN RIGHT('0'+CAST([CVCL_SUCURSAL_IMP] AS VARCHAR(3)),4) WHEN [CVCL_SUCURSAL_IMP] BETWEEN 10 AND 99 THEN RIGHT('00'+CAST([CVCL_SUCURSAL_IMP] AS VARCHAR(2)),4) WHEN [CVCL_SUCURSAL_IMP] BETWEEN 1 AND 9 THEN RIGHT('000'+CAST([CVCL_SUCURSAL_IMP] AS VARCHAR(1)),4) ELSE '' END + '-' + [CVCL_TIPO_VAR] + '-' + CASE WHEN [CVCL_NUMERO_CVCL] BETWEEN 10000 AND 99999 THEN RIGHT('000'+CAST([CVCL_NUMERO_CVCL] AS VARCHAR(5)),9) WHEN [CVCL_NUMERO_CVCL] BETWEEN 1000 AND 9999 THEN RIGHT('0000'+CAST([CVCL_NUMERO_CVCL] AS VARCHAR(4)),8) WHEN [CVCL_NUMERO_CVCL] BETWEEN 100 AND 999 THEN RIGHT('00000'+CAST([CVCL_NUMERO_CVCL] AS VARCHAR(3)),8) WHEN [CVCL_NUMERO_CVCL] BETWEEN 10 AND 99 THEN RIGHT('000000'+CAST([CVCL_NUMERO_CVCL] AS VARCHAR(2)),8) ELSE '' END AS [Comprobante] ,FORMAT(CCOB_CVCL.CVCL_FECHA_EMI, 'dd/MM/yyyy', 'en-US') AS CVCL_FECHA_EMI ,CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,IIf([CLIE_CUIT]='99-99999999-9','',IIf(Left([CLIE_CUIT],2)='99',SUBSTRING([CLIE_CUIT],4,8) ,SUBSTRING([CLIE_CUIT],1,2) + SUBSTRING([CLIE_CUIT],4,8) + SUBSTRING([CLIE_CUIT],13,1))) AS CLIE_CUIT ,IIf([CLIE_CUIT]='99-99999999-9','',[CLIE_DOMICILIO]) AS CLIE_DOMICILIO ,IIf(CHARINDEX(' ', [CLIE_LOCALIDAD])=1,SUBSTRING([CLIE_LOCALIDAD],2,Len([CLIE_LOCALIDAD])-1) ,IIf(CHARINDEX(',', [CLIE_LOCALIDAD] )=0,[CLIE_LOCALIDAD],SUBSTRING([CLIE_LOCALIDAD],CHARINDEX(',', [CLIE_LOCALIDAD] )+2,Len([CLIE_LOCALIDAD])))) AS CLIE_LOCALIDAD ,SIST_PCIA.PCIA_PROVINCIA ,SIST_PCIA.PCIA_NOMBRE ,CCOB_CLIE.CLIE_CLASIF_1 ,CCOB_CTEC.CTEC_COND_PAGO ,CCOB_CPCL.CPCL_NOMBRE ,IIf([PACA_FECHA_EMI]=[PACA_FECHA_EMI],'CONTADO',[CPCL_NOMBRE]) AS [Nombre_Cond_Vta] ,IIf([PACA_FECHA_EMI]=[PACA_FECHA_EMI],FORMAT(PACA_FECHA_EMI, 'dd/MM/yyyy', 'en-US'),IIf([VENT_NPCA_1].[NPCA_FECHA_EMI]=[VENT_NPCA_1].[NPCA_FECHA_EMI],FORMAT([VENT_NPCA_1].[NPCA_FECHA_EMI], 'dd/MM/yyyy', 'es-US'),FORMAT([VENT_NPCA].[NPCA_FECHA_EMI], 'dd/MM/yyyy','es-US'))) AS [Fecha_Costo] ,CCOB_CPCD.CPCD_DIAS_VTO ,IIf([PACA_FECHA_EMI]=[PACA_FECHA_EMI],0,[CPCD_DIAS_VTO]) AS DIAS_COND_VTA ,CCOB_CVCL.CVCL_SUCURSAL_IMP AS Sucursal ,CCOB_CVCL.CVCL_TIPO_VAR AS [Tipo_cpbte] ,CCOB_CVCL.CVCL_NUMERO_CVCL AS [Nro_cpbte] ,VENT_CVRF.CVRF_RENGLON_CVRF ,CCOB_CVCL.CVCL_DIVISION_CVCL ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_CVRF.CVRF_UNIMED ,VENT_CVRF.CVRF_SIGNO ,VENT_CVRF.CVRF_CREP ,[CVRF_CANT_ING]*IIf([CVRF_SIGNO]='S',1,-1) AS Cant ,([CVRF_PRE_NETLOC_SI])*([CVRF_CANT_ING]*IIf([CVRF_SIGNO]='S',1,-1)) AS [Subtotal_item_SI] ,IIf([DCVE_POR_DESCUENTO]=[DCVE_POR_DESCUENTO],[DCVE_POR_DESCUENTO],0) AS [Dto_Cab_2] ,IIf([DCVE_POR_DESCUENTO]=0,((CAST([CVRF_PRE_NETLOC_SI] AS DECIMAL(14,4)))*([CVRF_CANT_ING]*IIf([CVRF_SIGNO]='S',1,-1)))*0.8,(CAST([CVRF_PRE_NETLOC_SI] AS DECIMAL(14,4)))*([CVRF_CANT_ING]*IIf([CVRF_SIGNO]='S',1,-1))) AS [Subtotal_item_SI_a_infomar_a_Acindar] /*,IIf([VENT_NPCA_1].[NPCA_FECHA_EMI]=[VENT_NPCA_1].[NPCA_FECHA_EMI],[VENT_NPCA_1].[NPCA_FECHA_EMI],[VENT_NPCA].[NPCA_FECHA_EMI]) AS FECHA_COSTO */ FROM((((((((((((((CCOB_CLIE INNER JOIN CCOB_CVCL ON CCOB_CLIE.CLIE_CLIENTE = CCOB_CVCL.CVCL_CLIENTE) INNER JOIN VENT_CVRF ON (CCOB_CVCL.CVCL_NUMERO_CVCL = VENT_CVRF.CVRF_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = VENT_CVRF.CVRF_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = VENT_CVRF.CVRF_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = VENT_CVRF.CVRF_DIVISION_CVCL)) INNER JOIN STOC_ARTS ON VENT_CVRF.CVRF_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA05 ON STOC_ARTS.ARTS_CLASIF_5 = STOC_CA05.CA05_CLASIF_5) INNER JOIN STOC_CA06 ON STOC_ARTS.ARTS_CLASIF_6 = STOC_CA06.CA06_CLASIF_6) INNER JOIN VENT_DCVE ON (VENT_CVRF.CVRF_DIVISION_CVCL = VENT_DCVE.DCVE_DIVISION_CVCL) AND (VENT_CVRF.CVRF_SUCURSAL_CVCL = VENT_DCVE.DCVE_SUCURSAL_CVCL) AND (VENT_CVRF.CVRF_TIPO_CVCL = VENT_DCVE.DCVE_TIPO_CVCL) AND (VENT_CVRF.CVRF_NUMERO_CVCL = VENT_DCVE.DCVE_NUMERO_CVCL)) INNER JOIN SIST_PCIA ON CCOB_CLIE.CLIE_PROVINCIA = SIST_PCIA.PCIA_PROVINCIA) INNER JOIN CCOB_CVCC ON (CCOB_CVCL.CVCL_NUMERO_CVCL = CCOB_CVCC.CVCC_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = CCOB_CVCC.CVCC_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = CCOB_CVCC.CVCC_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = CCOB_CVCC.CVCC_DIVISION_CVCL)) INNER JOIN CCOB_CTEC ON CCOB_CVCC.CVCC_CTACTE_CTEC = CCOB_CTEC.CTEC_CTACTE_CTEC) INNER JOIN CCOB_CPCD ON CCOB_CTEC.CTEC_COND_PAGO = CCOB_CPCD.CPCD_COND_PAGO) INNER JOIN CCOB_CPCL ON CCOB_CTEC.CTEC_COND_PAGO = CCOB_CPCL.CPCL_COND_PAGO) LEFT JOIN VENT_PACA ON CCOB_CVCL.CVCL_NUMINT_PACA = VENT_PACA.PACA_NUMERO_PACA) LEFT JOIN VENT_NCFA ON (VENT_CVRF.CVRF_DIVISION_CVCL = VENT_NCFA.NCFA_DIVISION_NC_CANC) AND (VENT_CVRF.CVRF_SUCURSAL_CVCL = VENT_NCFA.NCFA_SUCURSAL_NC_CANC) AND (VENT_CVRF.CVRF_TIPO_CVCL = VENT_NCFA.NCFA_TIPO_NC_CANC) AND (VENT_CVRF.CVRF_NUMERO_CVCL = VENT_NCFA.NCFA_NUMERO_NC_CANC) AND (VENT_CVRF.CVRF_RENGLON_CVRF = VENT_NCFA.NCFA_RENGLON_NC_CANC)) LEFT JOIN (VENT_NPCF LEFT JOIN VENT_NPCA ON (VENT_NPCF.NPCF_NUMERO_NPCA = VENT_NPCA.NPCA_NUMERO_NPCA) AND (VENT_NPCF.NPCF_TIPO_NPCA = VENT_NPCA.NPCA_TIPO_NPCA) AND (VENT_NPCF.NPCF_DIVISION_NPCA = VENT_NPCA.NPCA_DIVISION_NPCA)) ON (VENT_NCFA.NCFA_RENGLON_FC_ANTIC = VENT_NPCF.NPCF_RENGLON_CVRF) AND (VENT_NCFA.NCFA_NUMERO_FC_ANTIC = VENT_NPCF.NPCF_NUMERO_CVCL) AND (VENT_NCFA.NCFA_TIPO_FC_ANTIC = VENT_NPCF.NPCF_TIPO_CVCL) AND (VENT_NCFA.NCFA_SUCURSAL_FC_ANTIC = VENT_NPCF.NPCF_SUCURSAL_CVCL) AND (VENT_NCFA.NCFA_DIVISION_FC_ANTIC = VENT_NPCF.NPCF_DIVISION_CVCL)) LEFT JOIN (VENT_NPCF AS VENT_NPCF_1 LEFT JOIN VENT_NPCA AS VENT_NPCA_1 ON (VENT_NPCF_1.NPCF_NUMERO_NPCA = VENT_NPCA_1.NPCA_NUMERO_NPCA) AND (VENT_NPCF_1.NPCF_TIPO_NPCA = VENT_NPCA_1.NPCA_TIPO_NPCA) AND (VENT_NPCF_1.NPCF_DIVISION_NPCA = VENT_NPCA_1.NPCA_DIVISION_NPCA)) ON (VENT_CVRF.CVRF_RENGLON_CVRF = VENT_NPCF_1.NPCF_RENGLON_CVRF) AND (VENT_CVRF.CVRF_NUMERO_CVCL = VENT_NPCF_1.NPCF_NUMERO_CVCL) AND (VENT_CVRF.CVRF_TIPO_CVCL = VENT_NPCF_1.NPCF_TIPO_CVCL) AND (VENT_CVRF.CVRF_SUCURSAL_CVCL = VENT_NPCF_1.NPCF_SUCURSAL_CVCL) AND (VENT_CVRF.CVRF_DIVISION_CVCL = VENT_NPCF_1.NPCF_DIVISION_CVCL) WHERE (((CCOB_CVCL.CVCL_FECHA_EMI) BETWEEN DATEADD(DAY,1, EOMONTH(GETDATE(),-2)) AND EOMONTH(GETDATE(),-1)) AND ((STOC_CA06.CA06_CLASIF_6) IN ('0009')) AND ((STOC_CA05.CA05_CLASIF_5) NOT IN ('0215','0080')) AND ((VENT_DCVE.DCVE_ORDEN) IN (2))) ORDER BY CCOB_CVCL.CVCL_FECHA_EMI");
    return ListaInformesAcindarPTF.recordsets
  }
  catch(error){
    console.log(error);
  }
}

async function InformesAcindarPTFDate(getDates){
  try{
    let pool = await sql.connect(config.plataforma);
    let ListaInformesAcindarPTF = await pool.request()
    .input('fechadesde', sql.Date, getDates.fechadesde)
    .input('fechahasta', sql.Date, getDates.fechahasta)
    .query("SELECT CASE WHEN [CVCL_SUCURSAL_IMP] BETWEEN 100 AND 999 THEN RIGHT('0'+CAST([CVCL_SUCURSAL_IMP] AS VARCHAR(3)),4) WHEN [CVCL_SUCURSAL_IMP] BETWEEN 10 AND 99 THEN RIGHT('00'+CAST([CVCL_SUCURSAL_IMP] AS VARCHAR(2)),4) WHEN [CVCL_SUCURSAL_IMP] BETWEEN 1 AND 9 THEN RIGHT('000'+CAST([CVCL_SUCURSAL_IMP] AS VARCHAR(1)),4) ELSE '' END + '-' + [CVCL_TIPO_VAR] + '-' + CASE WHEN [CVCL_NUMERO_CVCL] BETWEEN 10000 AND 99999 THEN RIGHT('000'+CAST([CVCL_NUMERO_CVCL] AS VARCHAR(5)),9) WHEN [CVCL_NUMERO_CVCL] BETWEEN 1000 AND 9999 THEN RIGHT('0000'+CAST([CVCL_NUMERO_CVCL] AS VARCHAR(4)),8) WHEN [CVCL_NUMERO_CVCL] BETWEEN 100 AND 999 THEN RIGHT('00000'+CAST([CVCL_NUMERO_CVCL] AS VARCHAR(3)),8) WHEN [CVCL_NUMERO_CVCL] BETWEEN 10 AND 99 THEN RIGHT('000000'+CAST([CVCL_NUMERO_CVCL] AS VARCHAR(2)),8) ELSE '' END AS [Comprobante] ,FORMAT(CCOB_CVCL.CVCL_FECHA_EMI, 'dd/MM/yyyy', 'en-US') AS CVCL_FECHA_EMI ,CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,IIf([CLIE_CUIT]='99-99999999-9','',IIf(Left([CLIE_CUIT],2)='99',SUBSTRING([CLIE_CUIT],4,8) ,SUBSTRING([CLIE_CUIT],1,2) + SUBSTRING([CLIE_CUIT],4,8) + SUBSTRING([CLIE_CUIT],13,1))) AS CLIE_CUIT ,IIf([CLIE_CUIT]='99-99999999-9','',[CLIE_DOMICILIO]) AS CLIE_DOMICILIO ,IIf(CHARINDEX(' ', [CLIE_LOCALIDAD])=1,SUBSTRING([CLIE_LOCALIDAD],2,Len([CLIE_LOCALIDAD])-1) ,IIf(CHARINDEX(',', [CLIE_LOCALIDAD] )=0,[CLIE_LOCALIDAD],SUBSTRING([CLIE_LOCALIDAD],CHARINDEX(',', [CLIE_LOCALIDAD] )+2,Len([CLIE_LOCALIDAD])))) AS CLIE_LOCALIDAD ,SIST_PCIA.PCIA_PROVINCIA ,SIST_PCIA.PCIA_NOMBRE ,CCOB_CLIE.CLIE_CLASIF_1 ,CCOB_CTEC.CTEC_COND_PAGO ,CCOB_CPCL.CPCL_NOMBRE ,IIf([PACA_FECHA_EMI]=[PACA_FECHA_EMI],'CONTADO',[CPCL_NOMBRE]) AS [Nombre_Cond_Vta] ,IIf([PACA_FECHA_EMI]=[PACA_FECHA_EMI],FORMAT(PACA_FECHA_EMI, 'dd/MM/yyyy', 'en-US'),IIf([VENT_NPCA_1].[NPCA_FECHA_EMI]=[VENT_NPCA_1].[NPCA_FECHA_EMI],FORMAT([VENT_NPCA_1].[NPCA_FECHA_EMI], 'dd/MM/yyyy', 'es-US'),FORMAT([VENT_NPCA].[NPCA_FECHA_EMI], 'dd/MM/yyyy','es-US'))) AS [Fecha_Costo] ,CCOB_CPCD.CPCD_DIAS_VTO ,IIf([PACA_FECHA_EMI]=[PACA_FECHA_EMI],0,[CPCD_DIAS_VTO]) AS DIAS_COND_VTA ,CCOB_CVCL.CVCL_SUCURSAL_IMP AS Sucursal ,CCOB_CVCL.CVCL_TIPO_VAR AS [Tipo_cpbte] ,CCOB_CVCL.CVCL_NUMERO_CVCL AS [Nro_cpbte] ,VENT_CVRF.CVRF_RENGLON_CVRF ,CCOB_CVCL.CVCL_DIVISION_CVCL ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_CVRF.CVRF_UNIMED ,VENT_CVRF.CVRF_SIGNO ,VENT_CVRF.CVRF_CREP ,[CVRF_CANT_ING]*IIf([CVRF_SIGNO]='S',1,-1) AS Cant ,([CVRF_PRE_NETLOC_SI])*([CVRF_CANT_ING]*IIf([CVRF_SIGNO]='S',1,-1)) AS [Subtotal_item_SI] ,IIf([DCVE_POR_DESCUENTO]=[DCVE_POR_DESCUENTO],[DCVE_POR_DESCUENTO],0) AS [Dto_Cab_2] ,IIf([DCVE_POR_DESCUENTO]=0,((CAST([CVRF_PRE_NETLOC_SI] AS DECIMAL(14,4)))*([CVRF_CANT_ING]*IIf([CVRF_SIGNO]='S',1,-1)))*0.8,(CAST([CVRF_PRE_NETLOC_SI] AS DECIMAL(14,4)))*([CVRF_CANT_ING]*IIf([CVRF_SIGNO]='S',1,-1))) AS [Subtotal_item_SI_a_infomar_a_Acindar] /*,IIf([VENT_NPCA_1].[NPCA_FECHA_EMI]=[VENT_NPCA_1].[NPCA_FECHA_EMI],[VENT_NPCA_1].[NPCA_FECHA_EMI],[VENT_NPCA].[NPCA_FECHA_EMI]) AS FECHA_COSTO */ FROM((((((((((((((CCOB_CLIE INNER JOIN CCOB_CVCL ON CCOB_CLIE.CLIE_CLIENTE = CCOB_CVCL.CVCL_CLIENTE) INNER JOIN VENT_CVRF ON (CCOB_CVCL.CVCL_NUMERO_CVCL = VENT_CVRF.CVRF_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = VENT_CVRF.CVRF_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = VENT_CVRF.CVRF_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = VENT_CVRF.CVRF_DIVISION_CVCL)) INNER JOIN STOC_ARTS ON VENT_CVRF.CVRF_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA05 ON STOC_ARTS.ARTS_CLASIF_5 = STOC_CA05.CA05_CLASIF_5) INNER JOIN STOC_CA06 ON STOC_ARTS.ARTS_CLASIF_6 = STOC_CA06.CA06_CLASIF_6) INNER JOIN VENT_DCVE ON (VENT_CVRF.CVRF_DIVISION_CVCL = VENT_DCVE.DCVE_DIVISION_CVCL) AND (VENT_CVRF.CVRF_SUCURSAL_CVCL = VENT_DCVE.DCVE_SUCURSAL_CVCL) AND (VENT_CVRF.CVRF_TIPO_CVCL = VENT_DCVE.DCVE_TIPO_CVCL) AND (VENT_CVRF.CVRF_NUMERO_CVCL = VENT_DCVE.DCVE_NUMERO_CVCL)) INNER JOIN SIST_PCIA ON CCOB_CLIE.CLIE_PROVINCIA = SIST_PCIA.PCIA_PROVINCIA) INNER JOIN CCOB_CVCC ON (CCOB_CVCL.CVCL_NUMERO_CVCL = CCOB_CVCC.CVCC_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = CCOB_CVCC.CVCC_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = CCOB_CVCC.CVCC_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = CCOB_CVCC.CVCC_DIVISION_CVCL)) INNER JOIN CCOB_CTEC ON CCOB_CVCC.CVCC_CTACTE_CTEC = CCOB_CTEC.CTEC_CTACTE_CTEC) INNER JOIN CCOB_CPCD ON CCOB_CTEC.CTEC_COND_PAGO = CCOB_CPCD.CPCD_COND_PAGO) INNER JOIN CCOB_CPCL ON CCOB_CTEC.CTEC_COND_PAGO = CCOB_CPCL.CPCL_COND_PAGO) LEFT JOIN VENT_PACA ON CCOB_CVCL.CVCL_NUMINT_PACA = VENT_PACA.PACA_NUMERO_PACA) LEFT JOIN VENT_NCFA ON (VENT_CVRF.CVRF_DIVISION_CVCL = VENT_NCFA.NCFA_DIVISION_NC_CANC) AND (VENT_CVRF.CVRF_SUCURSAL_CVCL = VENT_NCFA.NCFA_SUCURSAL_NC_CANC) AND (VENT_CVRF.CVRF_TIPO_CVCL = VENT_NCFA.NCFA_TIPO_NC_CANC) AND (VENT_CVRF.CVRF_NUMERO_CVCL = VENT_NCFA.NCFA_NUMERO_NC_CANC) AND (VENT_CVRF.CVRF_RENGLON_CVRF = VENT_NCFA.NCFA_RENGLON_NC_CANC)) LEFT JOIN (VENT_NPCF LEFT JOIN VENT_NPCA ON (VENT_NPCF.NPCF_NUMERO_NPCA = VENT_NPCA.NPCA_NUMERO_NPCA) AND (VENT_NPCF.NPCF_TIPO_NPCA = VENT_NPCA.NPCA_TIPO_NPCA) AND (VENT_NPCF.NPCF_DIVISION_NPCA = VENT_NPCA.NPCA_DIVISION_NPCA)) ON (VENT_NCFA.NCFA_RENGLON_FC_ANTIC = VENT_NPCF.NPCF_RENGLON_CVRF) AND (VENT_NCFA.NCFA_NUMERO_FC_ANTIC = VENT_NPCF.NPCF_NUMERO_CVCL) AND (VENT_NCFA.NCFA_TIPO_FC_ANTIC = VENT_NPCF.NPCF_TIPO_CVCL) AND (VENT_NCFA.NCFA_SUCURSAL_FC_ANTIC = VENT_NPCF.NPCF_SUCURSAL_CVCL) AND (VENT_NCFA.NCFA_DIVISION_FC_ANTIC = VENT_NPCF.NPCF_DIVISION_CVCL)) LEFT JOIN (VENT_NPCF AS VENT_NPCF_1 LEFT JOIN VENT_NPCA AS VENT_NPCA_1 ON (VENT_NPCF_1.NPCF_NUMERO_NPCA = VENT_NPCA_1.NPCA_NUMERO_NPCA) AND (VENT_NPCF_1.NPCF_TIPO_NPCA = VENT_NPCA_1.NPCA_TIPO_NPCA) AND (VENT_NPCF_1.NPCF_DIVISION_NPCA = VENT_NPCA_1.NPCA_DIVISION_NPCA)) ON (VENT_CVRF.CVRF_RENGLON_CVRF = VENT_NPCF_1.NPCF_RENGLON_CVRF) AND (VENT_CVRF.CVRF_NUMERO_CVCL = VENT_NPCF_1.NPCF_NUMERO_CVCL) AND (VENT_CVRF.CVRF_TIPO_CVCL = VENT_NPCF_1.NPCF_TIPO_CVCL) AND (VENT_CVRF.CVRF_SUCURSAL_CVCL = VENT_NPCF_1.NPCF_SUCURSAL_CVCL) AND (VENT_CVRF.CVRF_DIVISION_CVCL = VENT_NPCF_1.NPCF_DIVISION_CVCL) WHERE (((CCOB_CVCL.CVCL_FECHA_EMI) BETWEEN @fechadesde AND @fechahasta) AND ((STOC_CA06.CA06_CLASIF_6) IN ('0009')) AND ((STOC_CA05.CA05_CLASIF_5) NOT IN ('0215','0080')) AND ((VENT_DCVE.DCVE_ORDEN) IN (2))) ORDER BY CCOB_CVCL.CVCL_FECHA_EMI");
    return ListaInformesAcindarPTF.recordsets
  }
  catch(error){
    console.log(error);
  }
}

async function NCInformesAcindarPTFDate(getDates){
  try{
    let pool = await sql.connect(config.plataforma);
    let ListaNCInformesAcindarPTF = await pool.request()
    .input('fechadesde', sql.Date, getDates.fechadesde)
    .input('fechahasta', sql.Date, getDates.fechahasta)
    .query("DECLARE @1ConsultaAcindarNCTodoslosComprobantes TABLE( CVCL_TIPO_VAR VARCHAR(3), CVCL_SUCURSAL_IMP INT, CVCL_NUMERO_CVCL DECIMAL(10,0), CVRF_RENGLON_CVRF SMALLINT, ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), NPCF_TIPO_NPCA VARCHAR(3), NPCF_NUMERO_NPCA DECIMAL(10,0), NPCF_RENGLON_NPDE SMALLINT, CVCL_FECHA_EMI DATETIME) INSERT INTO @1ConsultaAcindarNCTodoslosComprobantes SELECT CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_NUMERO_CVCL ,VENT_CVRF.CVRF_RENGLON_CVRF ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,VENT_NPCF.NPCF_TIPO_NPCA ,VENT_NPCF.NPCF_NUMERO_NPCA ,VENT_NPCF.NPCF_RENGLON_NPDE ,CCOB_CVCL.CVCL_FECHA_EMI FROM(CCOB_CPCD WITH (NOLOCK) INNER JOIN ((CCOB_CLIE WITH (NOLOCK) INNER JOIN (CCOB_CVCL WITH (NOLOCK) INNER JOIN (VENT_CVRF WITH (NOLOCK) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_CVRF.CVRF_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON (CCOB_CVCL.CVCL_NUMERO_CVCL = VENT_CVRF.CVRF_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = VENT_CVRF.CVRF_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = VENT_CVRF.CVRF_SUCURSAL_CVCL)) ON CCOB_CLIE.CLIE_CLIENTE = CCOB_CVCL.CVCL_CLIENTE) INNER JOIN CCOB_CPCL WITH (NOLOCK) ON CCOB_CLIE.CLIE_COND_PAGO = CCOB_CPCL.CPCL_COND_PAGO) ON CCOB_CPCD.CPCD_COND_PAGO = CCOB_CPCL.CPCL_COND_PAGO) LEFT JOIN VENT_NPCF WITH (NOLOCK) ON (VENT_CVRF.CVRF_RENGLON_CVRF = VENT_NPCF.NPCF_RENGLON_CVRF) AND (VENT_CVRF.CVRF_NUMERO_CVCL = VENT_NPCF.NPCF_NUMERO_CVCL) AND (VENT_CVRF.CVRF_TIPO_CVCL = VENT_NPCF.NPCF_TIPO_CVCL) AND (VENT_CVRF.CVRF_SUCURSAL_CVCL = VENT_NPCF.NPCF_SUCURSAL_CVCL) WHERE (((CCOB_CVCL.CVCL_FECHA_EMI) BETWEEN @fechadesde AND @fechahasta) AND ((VENT_CVRF.CVRF_SIGNO) IN ('E')) AND ((STOC_ARTS.ARTS_CLASIF_6) IN ('0009'))) SELECT [@1ConsultaAcindarNCTodoslosComprobantes].CVCL_TIPO_VAR ,[@1ConsultaAcindarNCTodoslosComprobantes].CVCL_SUCURSAL_IMP ,[@1ConsultaAcindarNCTodoslosComprobantes].CVCL_NUMERO_CVCL ,[@1ConsultaAcindarNCTodoslosComprobantes].CVRF_RENGLON_CVRF ,VENT_NCFA.NCFA_TIPO_FC_ANTIC ,VENT_NCFA.NCFA_SUCURSAL_FC_ANTIC ,VENT_NCFA.NCFA_NUMERO_FC_ANTIC ,VENT_NCFA.NCFA_RENGLON_FC_ANTIC ,FORMAT([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_FECHA_EMI, 'dd/MM/yyyy', 'en-US') AS CVCL_FECHA_EMI ,[@1ConsultaAcindarNCTodoslosComprobantes].ARTS_ARTICULO_EMP ,[@1ConsultaAcindarNCTodoslosComprobantes].ARTS_NOMBRE FROM @1ConsultaAcindarNCTodoslosComprobantes INNER JOIN VENT_NCFA WITH (NOLOCK) ON ([@1ConsultaAcindarNCTodoslosComprobantes].CVRF_RENGLON_CVRF = VENT_NCFA.NCFA_RENGLON_NC_CANC) AND ([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_NUMERO_CVCL = VENT_NCFA.NCFA_NUMERO_NC_CANC) AND ([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_SUCURSAL_IMP = VENT_NCFA.NCFA_SUCURSAL_NC_CANC) AND ([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_TIPO_VAR = VENT_NCFA.NCFA_TIPO_NC_CANC) WHERE ([@1ConsultaAcindarNCTodoslosComprobantes].CVCL_TIPO_VAR IN ('NCA', 'NCB', 'NAF')) UNION SELECT [@1ConsultaAcindarNCTodoslosComprobantes].CVCL_TIPO_VAR ,[@1ConsultaAcindarNCTodoslosComprobantes].CVCL_SUCURSAL_IMP ,[@1ConsultaAcindarNCTodoslosComprobantes].CVCL_NUMERO_CVCL ,[@1ConsultaAcindarNCTodoslosComprobantes].CVRF_RENGLON_CVRF ,VENT_NPCF.NPCF_TIPO_CVCL ,VENT_NPCF.NPCF_SUCURSAL_CVCL ,VENT_NPCF.NPCF_NUMERO_CVCL ,VENT_NPCF.NPCF_RENGLON_CVRF ,FORMAT(CCOB_CVCL.CVCL_FECHA_EMI, 'dd/MM/yyyy', 'en-US') AS CVCL_FECHA_EMI ,[@1ConsultaAcindarNCTodoslosComprobantes].ARTS_ARTICULO_EMP ,[@1ConsultaAcindarNCTodoslosComprobantes].ARTS_NOMBRE FROM (@1ConsultaAcindarNCTodoslosComprobantes LEFT JOIN VENT_NPCF WITH (NOLOCK) ON ([@1ConsultaAcindarNCTodoslosComprobantes].NPCF_RENGLON_NPDE = VENT_NPCF.NPCF_RENGLON_NPDE) AND ([@1ConsultaAcindarNCTodoslosComprobantes].NPCF_NUMERO_NPCA = VENT_NPCF.NPCF_NUMERO_NPCA) AND ([@1ConsultaAcindarNCTodoslosComprobantes].NPCF_TIPO_NPCA = VENT_NPCF.NPCF_TIPO_NPCA)) LEFT JOIN CCOB_CVCL WITH (NOLOCK) ON (VENT_NPCF.NPCF_SUCURSAL_CVCL = CCOB_CVCL.CVCL_SUCURSAL_IMP) AND (VENT_NPCF.NPCF_TIPO_CVCL = CCOB_CVCL.CVCL_TIPO_VAR) AND (VENT_NPCF.NPCF_NUMERO_CVCL = CCOB_CVCL.CVCL_NUMERO_CVCL) WHERE (((VENT_NPCF.NPCF_SIGNO)='S')) ")
    return ListaNCInformesAcindarPTF.recordsets
  }
  catch(error){
    console.log(error)
  }
}

async function getCheckQR(getData){
  try{
    let pool = await sql.connect(config.plataforma);
    let addQueryFechaEmision = getData.fechaemision == '1969-12-31' ? ' ' : "HAVING ((VENT_NPCA.NPCA_FECHA_EMI) = @fechaemision)"
    let addQueryQR = getData.qr ? "WHERE ((VENT_NPCA.NPCA_REFERENCIA) LIKE '%'+ @qr +'%')" : ' '
    let ListaQR = await pool.request()
    .input('qr', sql.VarChar(20), getData.qr)
    .input('fechaemision', sql.Date, getData.fechaemision)
    .query("SELECT VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,FORMAT(VENT_NPCA.NPCA_FECHA_EMI, 'dd/MM/yyyy', 'en-US') AS NPCA_FECHA_EMI ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,VENT_NPCA.NPCA_REFERENCIA ,VENT_NPCF.NPCF_SUCURSAL_CVCL ,VENT_NPCF.NPCF_TIPO_CVCL ,VENT_NPCF.NPCF_NUMERO_CVCL FROM(VENT_NPCA INNER JOIN CCOB_CLIE ON VENT_NPCA.NPCA_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) LEFT JOIN VENT_NPCF ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPCF.NPCF_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPCF.NPCF_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPCF.NPCF_DIVISION_NPCA) "+ addQueryQR +" GROUP BY VENT_NPCA.NPCA_DIVISION_NPCA ,VENT_NPCA.NPCA_TIPO_NPCA ,VENT_NPCA.NPCA_NUMERO_NPCA ,VENT_NPCA.NPCA_FECHA_EMI ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,VENT_NPCA.NPCA_REFERENCIA ,VENT_NPCF.NPCF_SUCURSAL_CVCL ,VENT_NPCF.NPCF_TIPO_CVCL ,VENT_NPCF.NPCF_NUMERO_CVCL ,VENT_NPCF.NPCF_SIGNO " + addQueryFechaEmision);
    return ListaQR.recordsets
  }
  catch(error){
    console.log(error)
  }
}

async function ConsultaOrdenesCompraFechaUltRem(getData){
  try{
    let pool = await sql.connect(config.plataforma);
    let ConsultaOC = await pool.request()
    .input('fechaDesde', sql.Date, getData.fechadesde)
    .input('difDias', sql.Numeric, getData.difdias)
    .query("DECLARE @ConsultaOrdenesCompra TABLE(CODC_TIPO_OC VARCHAR(3), CODC_NUM_OC DECIMAL(10,0), CODC_FECHA_OC DATETIME, PROV_PROVEEDOR INT, PROV_NOMBRE VARCHAR(30), ARTS_ARTICULO_EMP VARCHAR(30), ARTS_NOMBRE VARCHAR(70), Dias_Ult_Vta VARCHAR(30), Diferencia_Dias_Ult_Vta DECIMAL(10,0), MOST_FECHA_EMI DATETIME) INSERT INTO @ConsultaOrdenesCompra SELECT COMP_CODC.CODC_TIPO_OC ,COMP_CODC.CODC_NUM_OC ,COMP_CODC.CODC_FECHA_OC ,CPAG_PROV.PROV_PROVEEDOR ,CPAG_PROV.PROV_NOMBRE ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,IIf((DateDiff(DAY,[most_fecha_emi],CONVERT(date, GETDATE())))>60,'Revisar','Ok') AS [Dias_Ult_Vta] ,Max((DateDiff(DAY,[most_fecha_emi],[CODC_FECHA_OC]))) AS [Diferencia_Dias_Ult_Vta] ,STOC_MOST.MOST_FECHA_EMI FROM (((((COMP_CODC WITH (NOLOCK) INNER JOIN COMP_RODC WITH (NOLOCK) ON (COMP_CODC.CODC_NUM_OC = COMP_RODC.RODC_NUM_OC) AND (COMP_CODC.CODC_TIPO_OC = COMP_RODC.RODC_TIPO_OC) AND (COMP_CODC.CODC_DIVISION = COMP_RODC.RODC_DIVISION)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN CPAG_PROV WITH (NOLOCK) ON COMP_CODC.CODC_PROVEEDOR = CPAG_PROV.PROV_PROVEEDOR) INNER JOIN STOC_MOSD WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_MOSD.MOSD_ARTICULO) INNER JOIN STOC_MOST WITH (NOLOCK) ON STOC_MOSD.MOSD_MOVSTO_MOST = STOC_MOST.MOST_MOVSTO_MOST) INNER JOIN STOC_MSMV WITH (NOLOCK) ON STOC_MOST.MOST_MOVSTO_MOST = STOC_MSMV.MSMV_MOVSTO_MOST GROUP BY COMP_CODC.CODC_TIPO_OC ,COMP_CODC.CODC_NUM_OC ,COMP_CODC.CODC_FECHA_OC ,CPAG_PROV.PROV_PROVEEDOR ,CPAG_PROV.PROV_NOMBRE ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,IIf((DateDiff(DAY,[most_fecha_emi],CONVERT(date, GETDATE())))>60,'Revisar','Ok') ,STOC_MOST.MOST_FECHA_EMI ,STOC_MSMV.MSMV_TIPO_MSVA HAVING (((COMP_CODC.CODC_FECHA_OC)>=@fechaDesde) AND ((STOC_MSMV.MSMV_TIPO_MSVA)='RVP')) SELECT [@ConsultaOrdenesCompra].CODC_FECHA_OC AS [Fecha_Compra] ,[@ConsultaOrdenesCompra].ARTS_ARTICULO_EMP ,[@ConsultaOrdenesCompra].ARTS_NOMBRE ,Max([@ConsultaOrdenesCompra].MOST_FECHA_EMI) AS [Fecha_Ult_Venta] ,Min([@ConsultaOrdenesCompra].[Diferencia_Dias_Ult_Vta]) AS [Cant_Dias_Ultima_Venta] FROM @ConsultaOrdenesCompra GROUP BY [@ConsultaOrdenesCompra].CODC_FECHA_OC ,[@ConsultaOrdenesCompra].ARTS_ARTICULO_EMP ,[@ConsultaOrdenesCompra].ARTS_NOMBRE HAVING (((Min([@ConsultaOrdenesCompra].[Diferencia_Dias_Ult_Vta]))>=@difDias)) ORDER BY [@ConsultaOrdenesCompra].ARTS_NOMBRE")
    return ConsultaOC.recordsets
  }
  catch(error){
    console.log(error)
  }
}

async function ConsultaSaldosCtaCte(getData){ 
  try{
    console.log(getData)
    let pool = await sql.connect(config.plataforma);
    let addNombre = getData.nombre ? "AND ((CCOB_CLIE.CLIE_NOMBRE) LIKE '%"+ getData.nombre +"%')" : ''
    let addCliente = getData.cliente ? "AND ((CCOB_CVCL.CVCL_CLIENTE) = @cliente)" : ''
    let addFactura = getData.factura ? "AND ((CCOB_CVCL.CVCL_NUMERO_CVCL) = @factura)" : ''
    let addQR = getData.qr ? "AND ((VENT_NPCA.NPCA_REFERENCIA) = @qr )" : ''
    let ConsultaSaldos = await pool.request()
    .input('nombre', sql.VarChar(30), getData.nombre)
    .input('cliente', sql.Numeric, getData.cliente)
    .input('factura', sql.Numeric, getData.factura)
    .input('qr', sql.VarChar(20), getData.qr)
    .query("SELECT CCOB_CVCL.CVCL_FECHA_EMI AS FECHA_EMI ,CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_VCTC.VCTC_NUM_CUOTA ,CCOB_VCTC.VCTC_IMP_ORI AS IMPORTE ,CCOB_VCTC.VCTC_SAL_ORI AS SALDO ,CCOB_CVCL.CVCL_DIVISION_CVCL ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_NUMERO_CVCL ,VENT_NPCA.NPCA_REFERENCIA FROM(((((CCOB_CVCL WITH (NOLOCK) INNER JOIN CCOB_CLIE WITH (NOLOCK) ON CCOB_CVCL.CVCL_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) INNER JOIN CCOB_CVCC WITH (NOLOCK) ON (CCOB_CVCL.CVCL_NUMERO_CVCL = CCOB_CVCC.CVCC_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = CCOB_CVCC.CVCC_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = CCOB_CVCC.CVCC_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = CCOB_CVCC.CVCC_DIVISION_CVCL)) LEFT JOIN CCOB_VCTC WITH (NOLOCK) ON CCOB_CVCC.CVCC_CTACTE_CTEC = CCOB_VCTC.VCTC_CTACTE_CTEC) INNER JOIN CCOB_CTEC WITH (NOLOCK) ON CCOB_CVCC.CVCC_CTACTE_CTEC = CCOB_CTEC.CTEC_CTACTE_CTEC) INNER JOIN CCOB_CPCL WITH (NOLOCK) ON CCOB_CTEC.CTEC_COND_PAGO = CCOB_CPCL.CPCL_COND_PAGO) LEFT JOIN (VENT_NPCF WITH (NOLOCK) LEFT JOIN VENT_NPCA WITH (NOLOCK) ON (VENT_NPCF.NPCF_DIVISION_NPCA = VENT_NPCA.NPCA_DIVISION_NPCA) AND (VENT_NPCF.NPCF_TIPO_NPCA = VENT_NPCA.NPCA_TIPO_NPCA) AND (VENT_NPCF.NPCF_NUMERO_NPCA = VENT_NPCA.NPCA_NUMERO_NPCA)) ON (CCOB_CVCL.CVCL_NUMERO_CVCL = VENT_NPCF.NPCF_NUMERO_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = VENT_NPCF.NPCF_TIPO_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = VENT_NPCF.NPCF_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_DIVISION_CVCL = VENT_NPCF.NPCF_DIVISION_CVCL) WHERE (CCOB_CVCL.CVCL_TIPO_VAR IN ('FCA', 'FCB', 'NCA', 'NCB', 'CCA', 'CCB')) AND (CCOB_CLIE.CLIE_CLASIF_1 NOT IN ('REA')) AND ((CCOB_VCTC.VCTC_SAL_ORI)>0)" + addCliente + addFactura + addQR + addNombre + "GROUP BY CCOB_CVCL.CVCL_FECHA_EMI ,CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_VCTC.VCTC_NUM_CUOTA ,CCOB_VCTC.VCTC_IMP_ORI ,CCOB_VCTC.VCTC_SAL_ORI ,CCOB_CVCL.CVCL_DIVISION_CVCL ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_NUMERO_CVCL ,VENT_NPCA.NPCA_REFERENCIA");
    return ConsultaSaldos.recordsets
  }
  catch(error){
    console.log(error)

  }
}

async function ConsultaSaldosCtaCteRemito(getData){ 
  try{
    console.log(getData)
    let pool = await sql.connect(config.plataforma);
    let addRemito = getData.remito ? "AND ((STOC_MSMV.MSMV_NUMERO_MSVA) = @remito)" : ''
    let addNombre = getData.nombre ? "AND ((CCOB_CLIE.CLIE_NOMBRE) LIKE '%"+ getData.nombre +"%')" : ''
    let addCliente = getData.cliente ? "AND ((CCOB_CVCL.CVCL_CLIENTE) = @cliente)" : ''
    let addFactura = getData.factura ? "AND ((CCOB_CVCL.CVCL_NUMERO_CVCL) = @factura)" : ''
    let addQR = getData.qr ? "AND ((VENT_NPCA.NPCA_REFERENCIA) = @qr )" : ''
    let ConsultaSaldos = await pool.request()
    .input('remito', sql.Numeric, getData.remito)
    .input('nombre', sql.VarChar(30), getData.nombre)
    .input('cliente', sql.Numeric, getData.cliente)
    .input('factura', sql.Numeric, getData.factura)
    .input('qr', sql.VarChar(20), getData.qr)
    .query("SELECT CCOB_CVCL.CVCL_FECHA_EMI AS FECHA_EMI ,CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_VCTC.VCTC_IMP_ORI AS IMPORTE ,CCOB_VCTC.VCTC_SAL_ORI AS SALDO ,CCOB_CVCL.CVCL_DIVISION_CVCL ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_NUMERO_CVCL ,VENT_NPCA.NPCA_REFERENCIA ,STOC_MSMV.MSMV_TIPO_MSVA ,STOC_MSMV.MSMV_NUMERO_MSVA FROM((((((((CCOB_CVCL WITH (NOLOCK) INNER JOIN CCOB_CLIE WITH (NOLOCK) ON CCOB_CVCL.CVCL_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) INNER JOIN CCOB_CVCC WITH (NOLOCK) ON (CCOB_CVCL.CVCL_DIVISION_CVCL = CCOB_CVCC.CVCC_DIVISION_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = CCOB_CVCC.CVCC_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = CCOB_CVCC.CVCC_TIPO_CVCL) AND (CCOB_CVCL.CVCL_NUMERO_CVCL = CCOB_CVCC.CVCC_NUMERO_CVCL)) LEFT JOIN CCOB_VCTC WITH (NOLOCK) ON CCOB_CVCC.CVCC_CTACTE_CTEC = CCOB_VCTC.VCTC_CTACTE_CTEC) INNER JOIN CCOB_CTEC WITH (NOLOCK) ON CCOB_CVCC.CVCC_CTACTE_CTEC = CCOB_CTEC.CTEC_CTACTE_CTEC) INNER JOIN CCOB_CPCL WITH (NOLOCK) ON CCOB_CTEC.CTEC_COND_PAGO = CCOB_CPCL.CPCL_COND_PAGO) LEFT JOIN (VENT_NPCF WITH (NOLOCK) LEFT JOIN VENT_NPCA WITH (NOLOCK) ON (VENT_NPCF.NPCF_NUMERO_NPCA = VENT_NPCA.NPCA_NUMERO_NPCA) AND (VENT_NPCF.NPCF_TIPO_NPCA = VENT_NPCA.NPCA_TIPO_NPCA) AND (VENT_NPCF.NPCF_DIVISION_NPCA = VENT_NPCA.NPCA_DIVISION_NPCA)) ON (CCOB_CVCL.CVCL_DIVISION_CVCL = VENT_NPCF.NPCF_DIVISION_CVCL) AND (CCOB_CVCL.CVCL_SUCURSAL_IMP = VENT_NPCF.NPCF_SUCURSAL_CVCL) AND (CCOB_CVCL.CVCL_TIPO_VAR = VENT_NPCF.NPCF_TIPO_CVCL) AND (CCOB_CVCL.CVCL_NUMERO_CVCL = VENT_NPCF.NPCF_NUMERO_CVCL)) LEFT JOIN VENT_NPCU WITH (NOLOCK) ON (VENT_NPCF.NPCF_RENGLON_NPDE = VENT_NPCU.NPCU_RENGLON_NPDE) AND (VENT_NPCF.NPCF_NUMERO_NPCA = VENT_NPCU.NPCU_NUMERO_NPCA) AND (VENT_NPCF.NPCF_TIPO_NPCA = VENT_NPCU.NPCU_TIPO_NPCA) AND (VENT_NPCF.NPCF_DIVISION_NPCA = VENT_NPCU.NPCU_DIVISION_NPCA)) LEFT JOIN STOC_MOST WITH (NOLOCK) ON VENT_NPCU.NPCU_MOVSTO_MOST = STOC_MOST.MOST_MOVSTO_MOST) LEFT JOIN STOC_MSMV WITH (NOLOCK) ON STOC_MOST.MOST_MOVSTO_MOST = STOC_MSMV.MSMV_MOVSTO_MOST GROUP BY CCOB_CVCL.CVCL_FECHA_EMI ,CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,CCOB_CLIE.CLIE_CLASIF_1 ,CCOB_VCTC.VCTC_IMP_ORI ,CCOB_VCTC.VCTC_SAL_ORI ,CCOB_CVCL.CVCL_DIVISION_CVCL ,CCOB_CVCL.CVCL_SUCURSAL_IMP ,CCOB_CVCL.CVCL_TIPO_VAR ,CCOB_CVCL.CVCL_NUMERO_CVCL ,VENT_NPCA.NPCA_REFERENCIA ,STOC_MSMV.MSMV_TIPO_MSVA ,STOC_MSMV.MSMV_NUMERO_MSVA HAVING ((CCOB_VCTC.VCTC_SAL_ORI)>0) AND (CCOB_CVCL.CVCL_TIPO_VAR IN ('FCA', 'FCB', 'NCA', 'NCB', 'CCA', 'CCB')) AND ((STOC_MSMV.MSMV_TIPO_MSVA)='rvp') AND (CCOB_CLIE.CLIE_CLASIF_1 NOT IN ('REA'))"+ addCliente + addFactura + addQR + addNombre + addRemito);
    return ConsultaSaldos.recordsets
  }
  catch(error){
    console.log(error)

  }
}

async function ConsultasClientes(getData){
  try{
    let pool = await sql.connect(config.plataforma);
    let ConsultaCliente = await pool.request()
    .input('nombre', sql.VarChar(30), getData.nombre)
    .query("SELECT CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE FROM(CCOB_CVCL INNER JOIN CCOB_CLIE ON CCOB_CVCL.CVCL_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) GROUP BY CCOB_CVCL.CVCL_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE HAVING (((CCOB_CLIE.CLIE_NOMBRE) LIKE '%'+ @nombre +'%')) ")
    return ConsultaCliente.recordsets
  }
  catch(error){
    console.log(error)
  }
}

async function gdc_itemsReclamadosAlProveedor() {
  try {
    let urlArray = `${process.env.URL_API}` + 'gdc/clasif8artquesecompran';
    const response2 = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response => {
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_clasif8'])}
                                return results;
                              })
                              .catch((error) => {console.log(error)});
    let pool = await sql.connect(config.plataforma);
    let gdcItemsReclamados = await pool.request()
      .query("WITH ArtQueSeCompranSegunClas8yRCMercado AS( SELECT STOC_ARCO.ARCO_RUBRO_COMPRA ,CPAG_RUBC.RUBC_NOMBRE ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_CA08.CA08_CLASIF_8 ,STOC_CA08.CA08_NOMBRE FROM CPAG_RUBC WITH (NOLOCK) INNER JOIN ((STOC_ARCO WITH (NOLOCK) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_ARCO.ARCO_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA08 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_8 = STOC_CA08.CA08_CLASIF_8) ON CPAG_RUBC.RUBC_RUBRO_COMPRA = STOC_ARCO.ARCO_RUBRO_COMPRA WHERE (((CPAG_RUBC.RUBC_NOMBRE) LIKE '%(1)%')) AND STOC_CA08.CA08_CLASIF_8 IN (" + response2.join(',') + ")) SELECT COMP_CODC.CODC_PROVEEDOR ,CPAG_PROV.PROV_NOMBRE ,COMP_CODC.CODC_FECHA_OC ,COMP_CODC.CODC_DIVISION ,COMP_CODC.CODC_TIPO_OC ,COMP_CODC.CODC_NUM_OC ,COMP_RODC.RODC_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,COMP_RODC.RODC_CANT_PEDIDA ,COMP_RODC.RODC_CANT_RECIB ,IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0) AS [Cant pend ent] ,COMP_RODC.RODC_MOTIVO_CANC ,COMP_RODC.RODC_SECTOR FROM (CPAG_PROV WITH (NOLOCK) INNER JOIN ((((COMP_CODC WITH (NOLOCK) INNER JOIN COMP_RODC WITH (NOLOCK) ON (COMP_CODC.CODC_NUM_OC = COMP_RODC.RODC_NUM_OC) AND (COMP_CODC.CODC_TIPO_OC = COMP_RODC.RODC_TIPO_OC) AND (COMP_CODC.CODC_DIVISION = COMP_RODC.RODC_DIVISION)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_ARCO WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARCO.ARCO_ARTICULO) INNER JOIN CPAG_RUBC WITH (NOLOCK) ON STOC_ARCO.ARCO_RUBRO_COMPRA = CPAG_RUBC.RUBC_RUBRO_COMPRA) ON CPAG_PROV.PROV_PROVEEDOR = COMP_CODC.CODC_PROVEEDOR) INNER JOIN ArtQueSeCompranSegunClas8yRCMercado ON STOC_ARTS.ARTS_ARTICULO = ArtQueSeCompranSegunClas8yRCMercado.ARTS_ARTICULO WHERE (((IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0))>0) AND ((COMP_RODC.RODC_MOTIVO_CANC) Is Null) AND ((COMP_RODC.RODC_SECTOR)='100'))");
    return gdcItemsReclamados.recordsets;
  } catch (error) {
    console.log(error);
  }
}

async function gdc_itemsVinculadasAOC(){
  try {
    let urlArray4 = `${process.env.URL_API}` + 'gdc/npstockcomprometido'
    const response4 = await axios.get(urlArray4, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_NP'])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});
    let pool = await sql.connect(config.plataforma);
    let gdcItemsVinculadasAOC = await pool.request()
      .query("SELECT Right('000000' + [CODC_PROVEEDOR],6) + '-' + [PROV_NOMBRE] AS Proveedor ,COMP_CODC.CODC_PROVEEDOR ,CPAG_PROV.PROV_NOMBRE ,COMP_CODC.CODC_FECHA_OC ,COMP_CODC.CODC_DIVISION ,COMP_CODC.CODC_TIPO_OC ,COMP_CODC.CODC_NUM_OC ,COMP_CODC.CODC_COND_PAGO ,CPAG_CPPR.CPPR_NOMBRE ,COMP_CODC.CODC_OBSERVACION ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,COMP_RODC.RODC_DESC_AMPLIA ,COMP_RODC.RODC_CANT_PEDIDA ,COMP_RODC.RODC_CANT_RECIB ,IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0) AS [Cantpend_ent] ,SIST_OCNP.OCNP_CANT_VINC ,COMP_RODC.RODC_FECHA_ENTREGA ,COMP_RODC.RODC_MOTIVO_CANC ,STOC_ARCO.ARCO_RUBRO_COMPRA ,CPAG_RUBC.RUBC_NOMBRE ,SIST_OCNP.OCNP_RENGLON_NPDE ,VENT_NPCA.NPCA_FECHA_EMI AS [Fecha_NP] ,VENT_NPDE.NPDE_DIVISION_NPCA ,VENT_NPDE.NPDE_TIPO_NPCA ,VENT_NPDE.NPDE_NUMERO_NPCA ,VENT_NPCA.NPCA_CLIENTE ,CCOB_CLIE.CLIE_NOMBRE ,Right('0000000000' + [NPCA_CLIENTE],6) + '-' + [CLIE_NOMBRE] AS Cliente ,VENT_NPDE.NPDE_CANT_PEDIDA ,VENT_NPDE.NPDE_CANT_ENTREG ,VENT_NPDE.NPDE_CANT_FACTUR ,VENT_NPDE.NPDE_FECHA_CANC ,SIST_VEND.VEND_NOMBRE FROM((((((((CPAG_PROV WITH (NOLOCK) INNER JOIN ((((COMP_CODC WITH (NOLOCK) INNER JOIN COMP_RODC WITH (NOLOCK) ON (COMP_CODC.CODC_NUM_OC = COMP_RODC.RODC_NUM_OC) AND (COMP_CODC.CODC_TIPO_OC = COMP_RODC.RODC_TIPO_OC) AND (COMP_CODC.CODC_DIVISION = COMP_RODC.RODC_DIVISION)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_ARCO WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARCO.ARCO_ARTICULO) INNER JOIN CPAG_RUBC WITH (NOLOCK) ON STOC_ARCO.ARCO_RUBRO_COMPRA = CPAG_RUBC.RUBC_RUBRO_COMPRA) ON CPAG_PROV.PROV_PROVEEDOR = COMP_CODC.CODC_PROVEEDOR) INNER JOIN SIST_OCNP WITH (NOLOCK) ON (COMP_RODC.RODC_REN_OC = SIST_OCNP.OCNP_RENGLON_RODC) AND (COMP_RODC.RODC_NUM_OC = SIST_OCNP.OCNP_NUMERO_CODC) AND (COMP_RODC.RODC_TIPO_OC = SIST_OCNP.OCNP_TIPO_CODC) AND (COMP_RODC.RODC_DIVISION = SIST_OCNP.OCNP_DIVISION_CODC)) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (SIST_OCNP.OCNP_RENGLON_NPDE = VENT_NPDE.NPDE_RENGLON) AND (SIST_OCNP.OCNP_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (SIST_OCNP.OCNP_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA) AND (SIST_OCNP.OCNP_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA)) INNER JOIN VENT_NPCA WITH (NOLOCK) ON (VENT_NPDE.NPDE_NUMERO_NPCA = VENT_NPCA.NPCA_NUMERO_NPCA) AND (VENT_NPDE.NPDE_TIPO_NPCA = VENT_NPCA.NPCA_TIPO_NPCA) AND (VENT_NPDE.NPDE_DIVISION_NPCA = VENT_NPCA.NPCA_DIVISION_NPCA)) INNER JOIN CCOB_CLIE WITH (NOLOCK) ON VENT_NPCA.NPCA_CLIENTE = CCOB_CLIE.CLIE_CLIENTE) INNER JOIN VENT_NPVE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPVE.NPVE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPVE.NPVE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPVE.NPVE_DIVISION_NPCA)) INNER JOIN SIST_VEND WITH (NOLOCK) ON VENT_NPVE.NPVE_VENDEDOR = SIST_VEND.VEND_VENDEDOR) INNER JOIN CPAG_CPPR WITH (NOLOCK) ON COMP_CODC.CODC_COND_PAGO = CPAG_CPPR.CPPR_COND_PAGO) WHERE VENT_NPDE.NPDE_TIPO_NPCA IN (" + response4.map(x => `'${x}'`).join(',') + ")");
    return gdcItemsVinculadasAOC.recordsets;
  }
  catch (error) {
    console.log(error);
  }
}

async function gdc_consolidacion(getData){
  try {
    let urlArray = `${process.env.URL_API}` + 'gdc/modosdestockminimo'
    let urlArray2 = `${process.env.URL_API}` + 'gdc/clasif8artquesecompran'
    let urlArray3 = `${process.env.URL_API}` + 'gdc/deposanoconsiderarparastock'
    let urlArray4 = `${process.env.URL_API}` + 'gdc/npstockcomprometido'
    let urlArray5 = `${process.env.URL_API}` + 'gdc/chapastiposqueladefinen'
    let urlArray6 = `${process.env.URL_API}` + 'gdc/remitosdeventas'
    const response = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});
    
    const response2 = await axios.get(urlArray2, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_clasif8'])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});
    
    const response3 = await axios.get(urlArray3, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_Depos'])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});

    const response4 = await axios.get(urlArray4, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_NP'])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});
                              
    const response5 = await axios.get(urlArray5, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_tipo'])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});
    
    const response6 = await axios.get(urlArray6, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_Comp'])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});
    let clasif8artquesecompran = response2.sort(function(a, b){return a - b}).join(',');
    let deposanoconsiderarparastock = response3.sort(function(a, b){return a - b}).join(',');
    let npstockcomprometido = response4.sort().map(x => `'${x}'`).join(',');
    let chapastiposqueladefinen = response5.sort(function(a, b){return a - b}).join(',');
    let remitosdeventas = response6.sort().map(x => `'${x}'`).join(',');
    let filtroxcomprador = getData.Comprador == 'TODOS' ? '' : 'WHERE Left(ArtQueSeCompranSegunClas8yRCMercado.[RUBC_NOMBRE],3) =' + `'${getData.Comprador}'`;
    let filtroxrubros = !getData.Rubros ? '' : getData.Comprador == 'TODOS' ? 'WHERE ArtQueSeCompranSegunClas8yRCMercado.ARCO_RUBRO_COMPRA IN (' + getData.Rubros + ')' : 'AND ArtQueSeCompranSegunClas8yRCMercado.ARCO_RUBRO_COMPRA IN (' + getData.Rubros + ')';
    //console.log(getData.Rubros);
    let pool = await sql.connect(config.plataforma);
    let gdcConsolidacion = await pool.request()
      .input('Ingresa_cant_dias_atras_para_SM4', sql.Int, getData.Cant_días_atrás_para_evaluar_SM4)
      .input('Dias_hacia_atras_fecha_de_NP', sql.Int, getData.Dias_hacia_atrás_fecha_de_NP)
      .query("DECLARE @Modos_de_stock_mínimo TABLE(id INT, Cod_modo_stock NUMERIC, Nombre_modo_stock TEXT); DECLARE @gdc_modosdestockminimo NVARCHAR(MAX) = '" + JSON.stringify(response) + "'; INSERT INTO @Modos_de_stock_mínimo SELECT * FROM OPENJSON(@gdc_modosdestockminimo) WITH( id INT 'strict $.id', Cod_modo_stock NUMERIC '$.Cod_modo_stock', Nombre_modo_stock NVARCHAR(MAX) '$.Nombre_modo_stock'); WITH ArtQueSeCompranSegunClas8yRCMercado AS ( SELECT STOC_ARCO.ARCO_RUBRO_COMPRA ,CPAG_RUBC.RUBC_NOMBRE ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_CA08.CA08_CLASIF_8 ,STOC_CA08.CA08_NOMBRE FROM CPAG_RUBC WITH (NOLOCK) INNER JOIN ((STOC_ARCO WITH (NOLOCK) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_ARCO.ARCO_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA08 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_8 = STOC_CA08.CA08_CLASIF_8) ON CPAG_RUBC.RUBC_RUBRO_COMPRA = STOC_ARCO.ARCO_RUBRO_COMPRA WHERE (((CPAG_RUBC.RUBC_NOMBRE) LIKE '%(1)%')) AND STOC_CA08.CA08_CLASIF_8 IN ("+ clasif8artquesecompran +")), StockMinimo AS ( SELECT DATEPART(YEAR, CONVERT(date, STOC_MOST.MOST_FECHA_EMI)) AS Año ,DATEPART(MONTH, CONVERT(date, STOC_MOST.MOST_FECHA_EMI)) AS Mes ,DATEPART(DAY, CONVERT(date, STOC_MOST.MOST_FECHA_EMI)) AS Día ,STOC_MOST.MOST_FECHA_EMI ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,SUM([MOSD_CANT_ING]*IIf([MOSD_SIGNO]='E',-1,1)) AS Cant ,STOC_ARTS.ARTS_MODO_STOC_MIN FROM CCOB_CLIE WITH (NOLOCK) RIGHT JOIN (STOC_MSMV WITH (NOLOCK) INNER JOIN ((STOC_MOST WITH (NOLOCK) INNER JOIN STOC_MOSD WITH (NOLOCK) ON STOC_MOST.MOST_MOVSTO_MOST = STOC_MOSD.MOSD_MOVSTO_MOST) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_MOSD.MOSD_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON STOC_MSMV.MSMV_MOVSTO_MOST = STOC_MOST.MOST_MOVSTO_MOST) ON CCOB_CLIE.CLIE_CLIENTE = STOC_MOST.MOST_CLIENTE WHERE ((STOC_MOST.MOST_FECHA_EMI >= CONVERT(datetime, GETDATE()-380)) AND ((STOC_ARTS.ARTS_MODO_STOC_MIN)=2)) AND STOC_MSMV.MSMV_TIPO_MSVA IN ("+ remitosdeventas +") GROUP BY STOC_MOST.MOST_FECHA_EMI ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_MODO_STOC_MIN ), ModoStockMinimo26 AS ( SELECT StockMinimo.ARTS_ARTICULO ,StockMinimo.ARTS_ARTICULO_EMP ,StockMinimo.ARTS_NOMBRE ,SUM(StockMinimo.Cant) as Cant ,StockMinimo.ARTS_MODO_STOC_MIN ,STOC_ARSM.ARSM_DIAS_STOCK ,STOC_ARSM.ARSM_TPER_CONSUMO ,ISNULL(STOC_ARSM.ARSM_DIAS_PER_1, 0) + ISNULL(STOC_ARSM.ARSM_DIAS_PER_2, 0) AS Total_días ,SUM(StockMinimo.Cant)/(ISNULL(STOC_ARSM.ARSM_DIAS_PER_1, 0) + ISNULL(STOC_ARSM.ARSM_DIAS_PER_2, 0)) AS [Consumo_diario] ,(SUM(StockMinimo.Cant)/(ISNULL(STOC_ARSM.ARSM_DIAS_PER_1, 0) + ISNULL(STOC_ARSM.ARSM_DIAS_PER_2, 0)))*[ARSM_DIAS_STOCK] AS [Stock_mín2_Un] FROM ArtQueSeCompranSegunClas8yRCMercado INNER JOIN (StockMinimo LEFT JOIN STOC_ARSM WITH(NOLOCK) ON StockMinimo.ARTS_ARTICULO = STOC_ARSM.ARSM_ARTICULO) ON ArtQueSeCompranSegunClas8yRCMercado.ARTS_ARTICULO = StockMinimo.ARTS_ARTICULO WHERE (IIf([ARSM_TPER_CONSUMO]=1,(IIf(CONVERT(DATE,StockMinimo.MOST_FECHA_EMI) <= CONVERT(DATE, IIf([ARSM_TPER_CONSUMO]=1,(IIf([ARSM_TPER_CONSUMO]=1, GETDATE()-([ARSM_DIAS_ANT_1]),0))+([ARSM_DIAS_PER_1]-1), 0)), IIf(CONVERT(DATE,StockMinimo.MOST_FECHA_EMI)>=CONVERT(DATE,IIf([ARSM_TPER_CONSUMO]=1, GETDATE()-([ARSM_DIAS_ANT_1]),0)),StockMinimo.Cant,0),NULL))*[ARSM_FACTOR_1],0)) + (IIf([ARSM_TPER_CONSUMO]=2,(IIf(CONVERT(DATE,StockMinimo.MOST_FECHA_EMI)<=CONVERT(DATE, IIf([ARSM_TPER_CONSUMO]=2,(IIf([ARSM_TPER_CONSUMO]=2,DATEADD(m,-12,GETDATE())+[ARSM_DIAS_POST_2],0))+([ARSM_DIAS_PER_2]-1) ,0)),IIf(CONVERT(DATE, StockMinimo.MOST_FECHA_EMI)>=CONVERT(DATE, IIf([ARSM_TPER_CONSUMO]=2,DATEADD(m,-12,GETDATE())+[ARSM_DIAS_POST_2],0)),StockMinimo.Cant,0),NULL))*[ARSM_FACTOR_2],0)) != 0 GROUP BY StockMinimo.ARTS_ARTICULO ,StockMinimo.ARTS_ARTICULO_EMP ,StockMinimo.ARTS_NOMBRE ,StockMinimo.ARTS_MODO_STOC_MIN ,STOC_ARSM.ARSM_DIAS_STOCK ,STOC_ARSM.ARSM_TPER_CONSUMO ,STOC_ARSM.ARSM_DIAS_PER_1 ,STOC_ARSM.ARSM_DIAS_PER_2 ), ModoStockMinimo40 AS ( SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_MODO_STOC_MIN ,STOC_ARTS.ARTS_STOCK_MINIMO ,STOC_ARTS.ARTS_CLASIF_8 ,STOC_CA08.CA08_NOMBRE FROM (STOC_ARTS WITH (NOLOCK) INNER JOIN STOC_CA08 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_8 = STOC_CA08.CA08_CLASIF_8) WHERE (((STOC_ARTS.ARTS_MODO_STOC_MIN)=4) AND (STOC_ARTS.ARTS_CLASIF_8 IN ("+ clasif8artquesecompran +"))) ), ModoStockMinimo42 AS ( SELECT DATEPART(YEAR, CONVERT(date, STOC_MOST.MOST_FECHA_EMI)) AS Año ,DATEPART(MONTH, CONVERT(date, STOC_MOST.MOST_FECHA_EMI)) AS Mes ,DATEPART(DAY, CONVERT(date, STOC_MOST.MOST_FECHA_EMI)) AS Día ,STOC_MOST.MOST_FECHA_EMI ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,SUM(STOC_MOSD.MOSD_CANT_ING*IIf(STOC_MOSD.MOSD_SIGNO='E',-1,1)) AS Cant ,STOC_ARTS.ARTS_MODO_STOC_MIN AS [Modo_SM4] ,@Ingresa_cant_dias_atras_para_SM4 AS [Cant_días_atrás_para_evaluar_SM4] ,CONVERT(date, GETDATE()-@Ingresa_cant_dias_atras_para_SM4) AS [Fecha_para_cant_fija_desde] ,CONVERT(date, GETDATE()-1) AS [Fecha_para_cant_fija_hasta] ,IIf(CONVERT(date, STOC_MOST.MOST_FECHA_EMI)<=(CONVERT(date, GETDATE()-1)),IIf(CONVERT(date, STOC_MOST.MOST_FECHA_EMI)>=(CONVERT(date, GETDATE()-@Ingresa_cant_dias_atras_para_SM4)),SUM(STOC_MOSD.MOSD_CANT_ING*IIf(STOC_MOSD.MOSD_SIGNO='E',-1,1)),0) ,0) AS [Cant_remitos_SM4] ,STOC_ARTS.ARTS_STOCK_MINIMO AS [Stock_mín4_Un] FROM (CCOB_CLIE WITH (NOLOCK) RIGHT JOIN (STOC_MSMV WITH (NOLOCK) INNER JOIN ((STOC_MOST WITH (NOLOCK) INNER JOIN STOC_MOSD WITH (NOLOCK) ON STOC_MOST.MOST_MOVSTO_MOST = STOC_MOSD.MOSD_MOVSTO_MOST) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_MOSD.MOSD_ARTICULO = STOC_ARTS.ARTS_ARTICULO) ON STOC_MSMV.MSMV_MOVSTO_MOST = STOC_MOST.MOST_MOVSTO_MOST) ON CCOB_CLIE.CLIE_CLIENTE = STOC_MOST.MOST_CLIENTE) INNER JOIN ArtQueSeCompranSegunClas8yRCMercado ON STOC_ARTS.ARTS_ARTICULO = ArtQueSeCompranSegunClas8yRCMercado.ARTS_ARTICULO WHERE ((CAST(STOC_MOST.MOST_FECHA_EMI AS date)>= CONVERT(date, GETDATE()-380)) AND ((STOC_ARTS.ARTS_MODO_STOC_MIN)=4) AND STOC_MSMV.MSMV_TIPO_MSVA IN ("+ remitosdeventas +")) GROUP BY STOC_MOST.MOST_FECHA_EMI ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_MODO_STOC_MIN ,STOC_ARTS.ARTS_STOCK_MINIMO ,IIf(CONVERT(date, STOC_MOST.MOST_FECHA_EMI)<=(CONVERT(date, GETDATE()-1)),IIf(CONVERT(date, STOC_MOST.MOST_FECHA_EMI)>=(CONVERT(date, GETDATE()-@Ingresa_cant_dias_atras_para_SM4)),(STOC_MOSD.MOSD_CANT_ING*IIf(STOC_MOSD.MOSD_SIGNO='E',-1,1)),0) ,0) ), ModoStockMinimo44 AS ( SELECT DISTINCT ModoStockMinimo42.ARTS_ARTICULO ,ModoStockMinimo42.ARTS_ARTICULO_EMP ,ModoStockMinimo42.ARTS_NOMBRE ,ModoStockMinimo42.Cant_días_atrás_para_evaluar_SM4 ,ModoStockMinimo42.Fecha_para_cant_fija_desde ,ModoStockMinimo42.Fecha_para_cant_fija_hasta ,ModoStockMinimo42.Modo_SM4 ,Sum(ModoStockMinimo42.Cant_remitos_SM4) AS [Cant_remitos_SM4] ,Round(Sum(ModoStockMinimo42.Cant_remitos_SM4)/ModoStockMinimo42.Cant_días_atrás_para_evaluar_SM4, 4) AS [Consumo_diario_SM4] ,ModoStockMinimo42.Stock_mín4_Un FROM ModoStockMinimo42 GROUP BY ModoStockMinimo42.ARTS_ARTICULO ,ModoStockMinimo42.ARTS_ARTICULO_EMP ,ModoStockMinimo42.ARTS_NOMBRE ,ModoStockMinimo42.[Cant_días_atrás_para_evaluar_SM4] ,ModoStockMinimo42.[Fecha_para_cant_fija_desde] ,ModoStockMinimo42.[Fecha_para_cant_fija_hasta] ,ModoStockMinimo42.[Modo_SM4] ,ModoStockMinimo42.[Stock_mín4_Un] ), ModoStockMinimo45 AS ( SELECT ModoStockMinimo40.ARTS_ARTICULO ,ModoStockMinimo40.ARTS_ARTICULO_EMP ,ModoStockMinimo40.ARTS_NOMBRE ,ModoStockMinimo44.[Cant_días_atrás_para_evaluar_SM4] ,ModoStockMinimo44.[Fecha_para_cant_fija_desde] ,ModoStockMinimo44.[Fecha_para_cant_fija_hasta] ,ModoStockMinimo44.[Cant_remitos_SM4] ,ModoStockMinimo44.[Modo_SM4] ,ModoStockMinimo44.[Consumo_diario_SM4] ,ModoStockMinimo44.[Stock_mín4_Un] ,ModoStockMinimo40.ARTS_STOCK_MINIMO AS [Stock_mínimo_unidades4] FROM ModoStockMinimo40 LEFT JOIN ModoStockMinimo44 ON ModoStockMinimo40.ARTS_ARTICULO = ModoStockMinimo44.ARTS_ARTICULO ), PendienteEntregaNP3 AS ( SELECT VENT_NPDE.NPDE_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,SUM(IIf(CONVERT(DATE, [NPCA_FECHA_EMI])<=CONVERT(date, GETDATE()-1),IIf(CONVERT(DATE, [NPCA_FECHA_EMI])>=CONVERT(date, GETDATE()-@Dias_hacia_atras_fecha_de_NP),[NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG],0),0)) AS [Pend_entreg_NP] FROM ((CCOB_CLIE WITH (NOLOCK) INNER JOIN (VENT_NPCA WITH (NOLOCK) INNER JOIN VENT_NPDE WITH (NOLOCK) ON (VENT_NPCA.NPCA_NUMERO_NPCA = VENT_NPDE.NPDE_NUMERO_NPCA) AND (VENT_NPCA.NPCA_TIPO_NPCA = VENT_NPDE.NPDE_TIPO_NPCA) AND (VENT_NPCA.NPCA_DIVISION_NPCA = VENT_NPDE.NPDE_DIVISION_NPCA)) ON CCOB_CLIE.CLIE_CLIENTE = VENT_NPCA.NPCA_CLIENTE) INNER JOIN STOC_ARTS WITH (NOLOCK) ON VENT_NPDE.NPDE_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN ArtQueSeCompranSegunClas8yRCMercado ON STOC_ARTS.ARTS_ARTICULO = ArtQueSeCompranSegunClas8yRCMercado.ARTS_ARTICULO WHERE ((([NPDE_CANT_PEDIDA]-[NPDE_CANT_ENTREG])>0) AND ((VENT_NPDE.NPDE_MOTIVO_CANC) IS NULL) AND VENT_NPCA.NPCA_TIPO_NPCA IN ("+ npstockcomprometido +")) GROUP BY VENT_NPDE.NPDE_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ), PendienteEntregaOC AS ( SELECT COMP_RODC.RODC_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,SUM(IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0)) AS [Cant_pend_ent] FROM (CPAG_PROV WITH (NOLOCK) INNER JOIN ((((COMP_CODC WITH (NOLOCK) INNER JOIN COMP_RODC WITH (NOLOCK) ON (COMP_CODC.CODC_NUM_OC = COMP_RODC.RODC_NUM_OC) AND (COMP_CODC.CODC_TIPO_OC = COMP_RODC.RODC_TIPO_OC) AND (COMP_CODC.CODC_DIVISION = COMP_RODC.RODC_DIVISION)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_ARCO WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARCO.ARCO_ARTICULO) INNER JOIN CPAG_RUBC WITH (NOLOCK) ON STOC_ARCO.ARCO_RUBRO_COMPRA = CPAG_RUBC.RUBC_RUBRO_COMPRA) ON CPAG_PROV.PROV_PROVEEDOR = COMP_CODC.CODC_PROVEEDOR) INNER JOIN ArtQueSeCompranSegunClas8yRCMercado ON STOC_ARTS.ARTS_ARTICULO = ArtQueSeCompranSegunClas8yRCMercado.ARTS_ARTICULO WHERE (((IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0))>0) AND ((COMP_RODC.RODC_MOTIVO_CANC) IS NULL)) GROUP BY COMP_RODC.RODC_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ), StockDep940 AS ( SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cód_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [Stock_Uni_depós_940] ,STOC_SDPP.SDPP_DEPOSITO ,STOC_DPOS.DPOS_NOMBRE FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) LEFT JOIN STOC_DPOS WITH (NOLOCK) ON STOC_SDPP.SDPP_DEPOSITO = STOC_DPOS.DPOS_DEPOSITO WHERE (((STOC_SDPP.SDPP_DEPOSITO)=940)) GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_SDPP.SDPP_DEPOSITO ,STOC_DPOS.DPOS_NOMBRE ), StockDep950 AS ( SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cód_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [Stock_Uni_depós_950] ,STOC_SDPP.SDPP_DEPOSITO ,STOC_DPOS.DPOS_NOMBRE FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) LEFT JOIN STOC_DPOS WITH (NOLOCK) ON STOC_SDPP.SDPP_DEPOSITO = STOC_DPOS.DPOS_DEPOSITO WHERE (((STOC_SDPP.SDPP_DEPOSITO)=950)) GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_SDPP.SDPP_DEPOSITO ,STOC_DPOS.DPOS_NOMBRE ), StockDep940y950 AS ( SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cód_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [Stock_Uni] FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO) LEFT JOIN STOC_DPOS WITH (NOLOCK) ON STOC_SDPP.SDPP_DEPOSITO = STOC_DPOS.DPOS_DEPOSITO WHERE STOC_SDPP.SDPP_DEPOSITO NOT IN ('940', '950', "+ deposanoconsiderarparastock +") GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ), StockSDPP AS ( SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cód_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_SDPP.SDPP_STOCK_ACT) AS [Stock_Uni_todos_los_depó_SDPP] FROM STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_SDPP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_SDPP.SDPP_ARTICULO WHERE (((STOC_SDPP.SDPP_DEPOSITO) NOT IN ("+ deposanoconsiderarparastock +") OR (STOC_SDPP.SDPP_DEPOSITO) IS NULL) AND ((STOC_ARTS.ARTS_TIPO_ART) NOT IN ("+ chapastiposqueladefinen +"))) GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ), StockSTDP AS ( SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP AS [Cód_Art] ,STOC_ARTS.ARTS_NOMBRE AS [Nombre_Art] ,Sum(STOC_STDP.STDP_STOCK_ACT) AS [Stock_Uni_todos_los_depó_STDP] FROM STOC_ARTS WITH (NOLOCK) LEFT JOIN STOC_STDP WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_STDP.STDP_ARTICULO WHERE ((STOC_STDP.STDP_DEPOSITO) NOT IN ("+ deposanoconsiderarparastock +") OR (STOC_STDP.STDP_DEPOSITO) IS NULL) AND ((STOC_ARTS.ARTS_TIPO_ART) IN ("+ chapastiposqueladefinen +")) GROUP BY STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARTS.ARTS_TIPO_ART ), StockSDPPySTDP AS ( SELECT STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,StockSDPP.[Stock_Uni_todos_los_depó_SDPP] ,StockSTDP.[Stock_Uni_todos_los_depó_STDP] ,ISNULL(StockSDPP.[Stock_Uni_todos_los_depó_SDPP],0)+ISNULL(StockSTDP.[Stock_Uni_todos_los_depó_STDP],0) AS [Stock_Uni_todos_los_depó] FROM (STOC_ARTS WITH (NOLOCK) LEFT JOIN StockSDPP ON STOC_ARTS.ARTS_ARTICULO = StockSDPP.ARTS_ARTICULO) LEFT JOIN StockSTDP ON STOC_ARTS.ARTS_ARTICULO = StockSTDP.ARTS_ARTICULO WHERE (ISNULL(StockSDPP.[Stock_Uni_todos_los_depó_SDPP],0)+ISNULL(StockSTDP.[Stock_Uni_todos_los_depó_STDP],0))>0 ), UltimoRemitoVentas AS ( SELECT Max(STOC_MOST.MOST_FECHA_EMI) AS MáxDeMOST_FECHA_EMI ,STOC_MOSD.MOSD_ARTICULO FROM ((STOC_MOSD WITH (NOLOCK) INNER JOIN STOC_MOST WITH (NOLOCK) ON STOC_MOSD.MOSD_MOVSTO_MOST = STOC_MOST.MOST_MOVSTO_MOST) INNER JOIN STOC_MSMV WITH (NOLOCK) ON STOC_MOST.MOST_MOVSTO_MOST = STOC_MSMV.MSMV_MOVSTO_MOST) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_MOSD.MOSD_ARTICULO = STOC_ARTS.ARTS_ARTICULO GROUP BY STOC_MOSD.MOSD_ARTICULO ), UltimaEntregaProveedor AS ( SELECT Max(STOC_MOST.MOST_FECHA_EMI) AS MáxDeMOST_FECHA_EMI ,STOC_ARTS.ARTS_ARTICULO ,Max(COMP_CCRF.CCRF_CANT_UNISTO) AS ÚltimoDeCCRF_CANT_UNISTO FROM ((((COMP_MCRF WITH (NOLOCK) INNER JOIN COMP_CCRF WITH (NOLOCK) ON (COMP_MCRF.MCRF_DIVISION_CDPR = COMP_CCRF.CCRF_DIVISION_CDPR) AND (COMP_MCRF.MCRF_TIPO_CDPR = COMP_CCRF.CCRF_TIPO_CDPR) AND (COMP_MCRF.MCRF_NUMERO_CDPR = COMP_CCRF.CCRF_NUMERO_CDPR) AND (COMP_MCRF.MCRF_RENGLON_CCRF = COMP_CCRF.CCRF_RENGLON_CCRF)) INNER JOIN STOC_MOSD WITH (NOLOCK) ON (COMP_MCRF.MCRF_MOVSTO_MOST = STOC_MOSD.MOSD_MOVSTO_MOST) AND (COMP_MCRF.MCRF_RENGLON_MOSD = STOC_MOSD.MOSD_RENGLON_MOSD)) INNER JOIN STOC_MOST WITH (NOLOCK) ON STOC_MOSD.MOSD_MOVSTO_MOST = STOC_MOST.MOST_MOVSTO_MOST) INNER JOIN CPAG_PROV WITH (NOLOCK) ON STOC_MOST.MOST_PROVEEDOR = CPAG_PROV.PROV_PROVEEDOR) INNER JOIN STOC_ARTS WITH (NOLOCK) ON COMP_CCRF.CCRF_ARTICULO = STOC_ARTS.ARTS_ARTICULO GROUP BY STOC_ARTS.ARTS_ARTICULO ) SELECT Left(ArtQueSeCompranSegunClas8yRCMercado.[RUBC_NOMBRE],3) AS Comprador ,ArtQueSeCompranSegunClas8yRCMercado.ARCO_RUBRO_COMPRA ,ArtQueSeCompranSegunClas8yRCMercado.[ARCO_RUBRO_COMPRA] + ' - ' + ArtQueSeCompranSegunClas8yRCMercado.[RUBC_NOMBRE] AS [Nombre_RC] ,ArtQueSeCompranSegunClas8yRCMercado.RUBC_NOMBRE ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_ARVE.ARVE_BLOQUEO_VENTA ,IIf([ARVE_BLOQUEO_VENTA]=0,'No','Si') AS [¿BloqVtas?] ,STOC_ARTS.ARTS_MODO_STOC_MIN ,[@Modos_de_stock_mínimo].[Nombre_modo_stock] ,STOC_ARSM.ARSM_DIAS_STOCK AS [Días_stock_mínimo] ,Round((ISNULL(ModoStockMinimo45.[Stock_mínimo_unidades4],0))*1,0) AS [Stock_mínimo4_Un] ,(ISNULL(ModoStockMinimo26.[Cant],0)+ISNULL(ModoStockMinimo45.[Cant_remitos_SM4], 0))*1 AS [Cant_remito_MS2yMS4] ,CAST(ISNULL(ModoStockMinimo26.[Consumo_diario],0)AS DECIMAL(14,4))+CAST(ISNULL(ModoStockMinimo45.[Consumo_diario_SM4],0)*1 AS DECIMAL(14,4)) AS [Consumo_diario] ,STOC_ARSM.ARSM_DIAS_PER_1 AS [Días_stock_Período1] ,STOC_ARSM.ARSM_DIAS_PER_2 AS [Días_stock_Período2] ,ISNULL(STOC_ARSM.ARSM_DIAS_PER_1,0)+ISNULL(STOC_ARSM.ARSM_DIAS_PER_2,0)+ISNULL(ModoStockMinimo45.[Cant_días_atrás_para_evaluar_SM4],0) AS [Días_stock_Períodos_1_2_y_4] ,ISNULL(ROUND(ModoStockMinimo26.[Stock_mín2_Un],2),0)*1 AS [Stock_mínimo2_Un] ,ISNULL(ROUND(ModoStockMinimo45.[Stock_mínimo_unidades4],2),0) * 1 + ISNULL(ROUND(ModoStockMinimo26.[Stock_mín2_Un],2), 0) * 1 AS [Stock_mín_2y4] ,(ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1 AS [Pend_entrega_NP] ,(ISNULL(PendienteEntregaOC.[Cant_pend_ent],0))*1 AS [Cant_pend_entrega_OC] ,StockDep940.[Stock_Uni_depós_940] ,StockDep950.[Stock_Uni_depós_950] ,StockDep940y950.Stock_Uni AS [Stock_Uni_sin_940_y_sin_950] ,ISNULL(ROUND(StockSDPPySTDP.[Stock_Uni_todos_los_depó],2),0)*1 AS [Stock_Unidades_todos_los_depós] ,IIf((ISNULL(ModoStockMinimo26.[Consumo_diario],0)+ISNULL(ModoStockMinimo45.[Consumo_diario_SM4],0)*1) > 0, IIf(((ISNULL(ModoStockMinimo45.[Stock_mínimo_unidades4],0)*1)+ISNULL(ModoStockMinimo26.[Stock_mín2_Un],0)*1) > 0, (ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0)*1)/(ISNULL(ModoStockMinimo26.[Consumo_diario],0)+ISNULL(ModoStockMinimo45.[Consumo_diario_SM4],0)*1), 0) ,0) AS [Stock_días] ,IIf(((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1)<0,0,((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1)) AS [Stock-NP] ,ROUND((IIf((ISNULL(ModoStockMinimo26.[Consumo_diario],0)+ISNULL(ModoStockMinimo45.[Consumo_diario_SM4],0))*1>0,IIf(IIf(((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1)<0,0,((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1))>0,(IIf(((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1)<0,0,((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1)))/((ISNULL(ModoStockMinimo26.[Consumo_diario],0)+ISNULL(ModoStockMinimo45.[Consumo_diario_SM4],0))*1),0) ,0))*1,2) AS [Stock-NP_días] ,IIf(ISNULL(PendienteEntregaOC.[Cant_pend_ent],0)*1 = 0, IIf(IIf(ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0)*1-ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0)*1<0 ,0,ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0)*1-ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0)*1)<= ISNULL(ROUND(ModoStockMinimo45.[Stock_mínimo_unidades4],2),0) * 1 + ISNULL(ROUND(ModoStockMinimo26.[Stock_mín2_Un],2), 0) * 1, 1, 0), 0) AS [1_Stock-NP_más_bajo_que_SM_Sin_OC] ,IIf(IIf(ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0)*1-ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0)*1 < 0, 0, ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0)*1-ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0)*1)<=ISNULL(ROUND(ModoStockMinimo45.[Stock_mínimo_unidades4],2),0) * 1 + ISNULL(ROUND(ModoStockMinimo26.[Stock_mín2_Un],2), 0) * 1, IIf(ISNULL(PendienteEntregaOC.[Cant_pend_ent],0)*1>0,IIf((IIf(((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1)<0,0,((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1))+ ISNULL(PendienteEntregaOC.[Cant_pend_ent],0)*1)<= ISNULL(ROUND(ModoStockMinimo45.[Stock_mínimo_unidades4],2),0) * 1 + ISNULL(ROUND(ModoStockMinimo26.[Stock_mín2_Un],2), 0) * 1, 1, 0),0),NULL) AS [2_Stock-NP_más_bajo_que SM_Con_OC_sigue_abajo] ,IIf(IIf(ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0)*1-ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0)*1 < 0, 0, ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0)*1-ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0)*1)<=ISNULL(ROUND(ModoStockMinimo45.[Stock_mínimo_unidades4],2),0) * 1 + ISNULL(ROUND(ModoStockMinimo26.[Stock_mín2_Un],2), 0) * 1,IIf(ISNULL(PendienteEntregaOC.[Cant_pend_ent],0)*1>0,IIf((IIf(((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1)<0,0,((ISNULL(StockSDPPySTDP.[Stock_Uni_todos_los_depó],0))*1)-((ISNULL(PendienteEntregaNP3.[Pend_entreg_NP],0))*1))+ ISNULL(PendienteEntregaOC.[Cant_pend_ent],0)*1)>= ISNULL(ROUND(ModoStockMinimo45.[Stock_mínimo_unidades4],2),0) * 1 + ISNULL(ROUND(ModoStockMinimo26.[Stock_mín2_Un],2), 0) * 1, 1, 0),0),NULL) AS [3_Stock-NP_más_bajo_que_SM_Con_OC_queda_arriba] ,STOC_ARTS.ARTS_CLASIF_8 ,STOC_CA08.CA08_NOMBRE ,STOC_ARTS.ARTS_CLASIF_12 ,STOC_CA12.CA12_NOMBRE ,ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=1,CONVERT(date, GETDATE()-[ARSM_DIAS_ANT_1]), NULL),'') AS [Fecha_desde_TP1] ,ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=1,ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=1,CONVERT(date, GETDATE()-[ARSM_DIAS_ANT_1]+[ARSM_DIAS_PER_1]-1),NULL),''), NULL),'') AS [Fecha_hasta_TP1] ,ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=2,CONVERT(date, GETDATE()-@Dias_hacia_atras_fecha_de_NP+[ARSM_DIAS_POST_2]),NULL),'') AS [Fecha_desde_TP2] ,ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=2,ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=2,CONVERT(date, GETDATE()-@Dias_hacia_atras_fecha_de_NP+[ARSM_DIAS_POST_2]+[ARSM_DIAS_PER_2]-1),NULL),''),NULL),'') AS [Fecha_hasta_TP2] ,FORMAT(ISNULL(IIf(STOC_ARTS.ARTS_MODO_STOC_MIN=4, ModoStockMinimo45.[Fecha_para_cant_fija_desde], ISNULL(IIf(STOC_ARTS.ARTS_MODO_STOC_MIN = 2, ISNULL(IIf(ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=2, CONVERT(datetime, GETDATE() - @Dias_hacia_atras_fecha_de_NP + STOC_ARSM.[ARSM_DIAS_POST_2]), NULL),'') > CONVERT(datetime, GETDATE() - 400), ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO] = 2, CONVERT(datetime, GETDATE() - @Dias_hacia_atras_fecha_de_NP + STOC_ARSM.[ARSM_DIAS_POST_2]), NULL),''), ISNULL(IIf(ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO] = 1, CONVERT(datetime, GETDATE() - STOC_ARSM.[ARSM_DIAS_ANT_1]), NULL),'') > CONVERT(datetime, GETDATE() - 400),ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO] = 1, CONVERT(datetime, GETDATE() - STOC_ARSM.[ARSM_DIAS_ANT_1]), NULL),''), NULL),'')),''),''), NULL)),''), 'dd/MM/yyyy') AS [Fecha_desde_TP1_y_2_y_MS4] ,FORMAT(ISNULL(IIf(STOC_ARTS.ARTS_MODO_STOC_MIN=4, ModoStockMinimo45.[Fecha_para_cant_fija_hasta], ISNULL(IIf(STOC_ARTS.ARTS_MODO_STOC_MIN = 2, ISNULL(IIf(ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=2, (ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=2,CONVERT(datetime, GETDATE()-@Dias_hacia_atras_fecha_de_NP+STOC_ARSM.[ARSM_DIAS_POST_2]+(STOC_ARSM.[ARSM_DIAS_PER_2]-1)),NULL),'')) ,NULL),'') > CONVERT(datetime, GETDATE() - 400), ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=2,(ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=2,CONVERT(datetime, GETDATE()-@Dias_hacia_atras_fecha_de_NP+STOC_ARSM.[ARSM_DIAS_POST_2]+(STOC_ARSM.[ARSM_DIAS_PER_2]-1)),NULL),'')),NULL),''), ISNULL(IIf(ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=1,(ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=1,CONVERT(datetime, GETDATE()-STOC_ARSM.[ARSM_DIAS_ANT_1]+(STOC_ARSM.[ARSM_DIAS_PER_1]-1)),NULL),'')),NULL),'') > CONVERT(datetime, GETDATE() - 400), ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=1,(ISNULL(IIf(STOC_ARSM.[ARSM_TPER_CONSUMO]=1,CONVERT(datetime, GETDATE()-STOC_ARSM.[ARSM_DIAS_ANT_1]+(STOC_ARSM.[ARSM_DIAS_PER_1]-1)),NULL),'')), NULL),''), NULL),'')),''), NULL),'')),''), 'dd/MM/yyyy') AS [Fecha_hasta_TP1_y_2_Y_MS4] ,CONVERT(datetime, GETDATE()-@Dias_hacia_atras_fecha_de_NP) AS [Fecha_desde_para_incluir_NP] ,CONVERT(datetime, GETDATE()-1) AS [Fecha_hasta_para_incluir_NP] ,Left(STOC_ARTS.[ARTS_ARTICULO_EMP],4) AS [Parcial_del_cód_para_ordenar] ,IIf(STOC_ARTS.[ARTS_ARTICULO_EMP]='01300268','Ver 01300675',IIf(STOC_ARTS.[ARTS_CLASIF_8]='0175','Ver derivados','')) AS [Leyenda_derivados] ,FORMAT(UltimoRemitoVentas.MáxDeMOST_FECHA_EMI, 'dd/MM/yyyy') AS Fecha_Ultimo_Remito_Venta ,FORMAT(UltimaEntregaProveedor.MáxDeMOST_FECHA_EMI, 'dd/MM/yyyy') AS Fecha_Ultima_Entrega_Proveedor ,UltimaEntregaProveedor.ÚltimoDeCCRF_CANT_UNISTO AS Cantidad_Ultima_Entrega_Proveedor ,DATEDIFF(DAY, UltimoRemitoVentas.MáxDeMOST_FECHA_EMI, GETDATE()) AS Dias_sin_remitos_ventas ,DATEDIFF(DAY, UltimaEntregaProveedor.MáxDeMOST_FECHA_EMI, GETDATE()) AS Dias_ultima_entrega_proveedor FROM (((((((((((STOC_ARCO WITH (NOLOCK) INNER JOIN (STOC_CA08 WITH (NOLOCK) INNER JOIN (@Modos_de_stock_mínimo INNER JOIN ((((STOC_ARTS WITH (NOLOCK) INNER JOIN ArtQueSeCompranSegunClas8yRCMercado ON STOC_ARTS.ARTS_ARTICULO = ArtQueSeCompranSegunClas8yRCMercado.ARTS_ARTICULO) LEFT JOIN ModoStockMinimo26 ON STOC_ARTS.ARTS_ARTICULO = ModoStockMinimo26.ARTS_ARTICULO) LEFT JOIN PendienteEntregaNP3 ON STOC_ARTS.ARTS_ARTICULO_EMP = PendienteEntregaNP3.ARTS_ARTICULO_EMP) LEFT JOIN PendienteEntregaOC ON STOC_ARTS.ARTS_ARTICULO_EMP = PendienteEntregaOC.ARTS_ARTICULO_EMP) ON [@Modos_de_stock_mínimo].[Cod_modo_stock] = STOC_ARTS.ARTS_MODO_STOC_MIN) ON STOC_CA08.CA08_CLASIF_8 = STOC_ARTS.ARTS_CLASIF_8) ON STOC_ARCO.ARCO_ARTICULO = STOC_ARTS.ARTS_ARTICULO) LEFT JOIN StockDep940 ON STOC_ARTS.ARTS_ARTICULO = StockDep940.ARTS_ARTICULO) LEFT JOIN StockDep950 ON STOC_ARTS.ARTS_ARTICULO = StockDep950.ARTS_ARTICULO) LEFT JOIN UltimoRemitoVentas ON STOC_ARTS.ARTS_ARTICULO = UltimoRemitoVentas.MOSD_ARTICULO) LEFT JOIN UltimaEntregaProveedor ON STOC_ARTS.ARTS_ARTICULO = UltimaEntregaProveedor.ARTS_ARTICULO) LEFT JOIN StockDep940y950 ON STOC_ARTS.ARTS_ARTICULO = StockDep940y950.ARTS_ARTICULO) LEFT JOIN STOC_CA12 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_12 = STOC_CA12.CA12_CLASIF_12) LEFT JOIN ModoStockMinimo45 ON STOC_ARTS.ARTS_ARTICULO = ModoStockMinimo45.ARTS_ARTICULO) LEFT JOIN StockSDPPySTDP ON STOC_ARTS.ARTS_ARTICULO = StockSDPPySTDP.ARTS_ARTICULO) LEFT JOIN STOC_ARSM WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_ARSM.ARSM_ARTICULO) LEFT JOIN STOC_ARVE WITH (NOLOCK) ON STOC_ARTS.ARTS_ARTICULO = STOC_ARVE.ARVE_ARTICULO)" + filtroxcomprador + filtroxrubros);
    return gdcConsolidacion.recordsets;
  }
  catch(error) {
    console.log(error);
  }
}

async function gdc_itemreclamadosalproveedor() {
  try {
    let urlArray = `${process.env.URL_API}` + 'gdc/clasif8artquesecompran';
    const response2 = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_clasif8'])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});
    let clasif8artquesecompran = response2.sort(function(a, b){return a - b}).join(',');                
    let pool = await sql.connect(config.plataforma);
    let gdc_itemreclamadosalproveedor = await pool.request().query("WITH ArtQueSeCompranSegunClas8yRCMercado AS( SELECT STOC_ARCO.ARCO_RUBRO_COMPRA ,CPAG_RUBC.RUBC_NOMBRE ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_CA08.CA08_CLASIF_8 ,STOC_CA08.CA08_NOMBRE FROM CPAG_RUBC WITH (NOLOCK) INNER JOIN ((STOC_ARCO WITH (NOLOCK) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_ARCO.ARCO_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA08 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_8 = STOC_CA08.CA08_CLASIF_8) ON CPAG_RUBC.RUBC_RUBRO_COMPRA = STOC_ARCO.ARCO_RUBRO_COMPRA WHERE (((CPAG_RUBC.RUBC_NOMBRE) LIKE '%(1)%')) AND STOC_CA08.CA08_CLASIF_8 IN ("+ clasif8artquesecompran +")) SELECT COMP_CODC.CODC_DIVISION ,COMP_CODC.CODC_TIPO_OC ,COMP_CODC.CODC_NUM_OC ,COMP_RODC.RODC_REN_OC ,FORMAT(COMP_CODC.CODC_FECHA_OC, 'dd/MM/yyyy') AS Fecha_OC ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,SUM(IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0)) AS Pend_Entrega FROM ((COMP_CODC WITH (NOLOCK) INNER JOIN COMP_RODC WITH (NOLOCK) ON (COMP_CODC.CODC_NUM_OC = COMP_RODC.RODC_NUM_OC) AND (COMP_CODC.CODC_TIPO_OC = COMP_RODC.RODC_TIPO_OC) AND (COMP_CODC.CODC_DIVISION = COMP_RODC.RODC_DIVISION)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN ArtQueSeCompranSegunClas8yRCMercado ON STOC_ARTS.ARTS_ARTICULO = ArtQueSeCompranSegunClas8yRCMercado.ARTS_ARTICULO WHERE ((COMP_RODC.RODC_SECTOR)='100') AND ((IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0))>0) AND ((COMP_RODC.RODC_MOTIVO_CANC) Is Null) GROUP BY COMP_CODC.CODC_DIVISION ,COMP_CODC.CODC_TIPO_OC ,COMP_CODC.CODC_NUM_OC ,COMP_RODC.RODC_REN_OC ,COMP_CODC.CODC_FECHA_OC ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE");
    return gdc_itemreclamadosalproveedor.recordsets;
  }
  catch(error) {
    console.log(error);
  }
}

async function gdc_getArtsDerivados(getData){
  try {
    //console.log(getData);
    let pool = await sql.connect(config.plataforma);
    let infoLista = await pool.request()
      .input('codigo', sql.VarChar(7), getData.codigo)
      .query("SELECT * FROM [STOC_ARTS] WITH (NOLOCK) WHERE ARTS_ARTICULO_EMP LIKE '%'+ @codigo +'%' ");
    return infoLista.recordsets
  }
  catch (error){
    console.log(error);
  }
}

async function gdc_itemsVinculadosAOC() {
  try {
    let urlArray = `${process.env.URL_API}` + 'gdc/clasif8artquesecompran';
    const response2 = await axios.get(urlArray, {httpsAgent, headers: {'Authorization': `Basic ${token}`}})
                              .then(response =>{
                                let results = [];
                                data = response.data;
                                for(var i = 0; i < data.length; i++){results.push(data[i]['Cod_clasif8'])}
                                return results;
                              })
                              .catch((error)=>{console.log(error)});
    let clasif8artquesecompran = response2.sort(function(a, b){return a - b}).join(',');
    let pool = await sql.connect(config.plataforma);
    let gdc_itemsVinculadosAOC = await pool.request()
      .query("WITH ArtQueSeCompranSegunClas8yRCMercado AS( SELECT STOC_ARCO.ARCO_RUBRO_COMPRA ,CPAG_RUBC.RUBC_NOMBRE ,STOC_ARTS.ARTS_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,STOC_CA08.CA08_CLASIF_8 ,STOC_CA08.CA08_NOMBRE FROM CPAG_RUBC WITH (NOLOCK) INNER JOIN ((STOC_ARCO WITH (NOLOCK) INNER JOIN STOC_ARTS WITH (NOLOCK) ON STOC_ARCO.ARCO_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_CA08 WITH (NOLOCK) ON STOC_ARTS.ARTS_CLASIF_8 = STOC_CA08.CA08_CLASIF_8) ON CPAG_RUBC.RUBC_RUBRO_COMPRA = STOC_ARCO.ARCO_RUBRO_COMPRA WHERE (((CPAG_RUBC.RUBC_NOMBRE) LIKE '%(1)%')) AND STOC_CA08.CA08_CLASIF_8 IN ("+ clasif8artquesecompran +")) SELECT COMP_CODC.CODC_DIVISION ,COMP_CODC.CODC_TIPO_OC ,COMP_CODC.CODC_NUM_OC ,COMP_RODC.RODC_REN_OC ,SIST_OCNP.OCNP_DIVISION_NPCA ,SIST_OCNP.OCNP_TIPO_NPCA ,SIST_OCNP.OCNP_NUMERO_NPCA ,SIST_OCNP.OCNP_RENGLON_RODC ,COMP_RODC.RODC_ARTICULO ,STOC_ARTS.ARTS_ARTICULO_EMP ,STOC_ARTS.ARTS_NOMBRE ,IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0) AS [Cant_pend_ent] FROM (CPAG_PROV WITH (NOLOCK) INNER JOIN ((((COMP_CODC WITH (NOLOCK) INNER JOIN COMP_RODC WITH (NOLOCK) ON (COMP_CODC.CODC_NUM_OC = COMP_RODC.RODC_NUM_OC) AND (COMP_CODC.CODC_TIPO_OC = COMP_RODC.RODC_TIPO_OC) AND (COMP_CODC.CODC_DIVISION = COMP_RODC.RODC_DIVISION)) INNER JOIN STOC_ARTS WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARTS.ARTS_ARTICULO) INNER JOIN STOC_ARCO WITH (NOLOCK) ON COMP_RODC.RODC_ARTICULO = STOC_ARCO.ARCO_ARTICULO) INNER JOIN CPAG_RUBC WITH (NOLOCK) ON STOC_ARCO.ARCO_RUBRO_COMPRA = CPAG_RUBC.RUBC_RUBRO_COMPRA) ON CPAG_PROV.PROV_PROVEEDOR = COMP_CODC.CODC_PROVEEDOR) INNER JOIN ArtQueSeCompranSegunClas8yRCMercado ON STOC_ARTS.ARTS_ARTICULO = ArtQueSeCompranSegunClas8yRCMercado.ARTS_ARTICULO INNER JOIN SIST_OCNP WITH (NOLOCK) ON (SIST_OCNP.OCNP_DIVISION_CODC = COMP_CODC.CODC_DIVISION) AND (SIST_OCNP.OCNP_NUMERO_CODC = COMP_CODC.CODC_NUM_OC) AND (SIST_OCNP.OCNP_TIPO_CODC = COMP_CODC.CODC_TIPO_OC) WHERE (((IIf([RODC_CANT_PEDIDA]-[RODC_CANT_RECIB]>0,[RODC_CANT_PEDIDA]-[RODC_CANT_RECIB],0))>0) AND ((COMP_RODC.RODC_MOTIVO_CANC) Is Null))");  
    return gdc_itemsVinculadosAOC.recordsets;
  }
  catch (error) {
    console.log(error);
  }
}


  module.exports = {
    getControl: getControl,
    getOrder: getOrder,
    getListaClientes: getListaClientes,
    getListaClientes2: getListaClientes2,
    getNPpendienteEntregaContenedores: getNPpendienteEntregaContenedores,
    getListaContenedores: getListaContenedores,
    getLPPYRStock: getLPPYRStock,
    getListaPrecioBreveUsoInterno: getListaPrecioBreveUsoInterno,
    getListaConstSecoSQL: getListaConstSecoSQL,
    getClasificadorClientes: getClasificadorClientes,
    getVN_sin_dto_financ: getVN_sin_dto_financ,
    getRubroVta: getRubroVta,
    getSQL_VENT_DCA1: getSQL_VENT_DCA1,
    getSQL_VENT_DVC1: getSQL_VENT_DVC1,
    getVblesEntrNP: getVblesEntrNP,
    getListaPreciosCostoReposicion: getListaPreciosCostoReposicion,
    getListaPreciosVentaAlPublico: getListaPreciosVentaAlPublico,
    getComboArt: getComboArt,
    getM2Art: getM2Art,
    getM2Saldo: getM2Saldo,
    getStockPartidaconvencimiento: getStockPartidaconvencimiento,
    getStock: getStock,
    getNPPendienteEntrega: getNPPendienteEntrega,
    getListadePrecioWeb: getListadePrecioWeb,
    getStockFisicoyDisp: getStockFisicoyDisp,
    getPlanillaImportar: getPlanillaImportar,
    getStocArts: getStocArts,
    getRubrosVtaAcopio: getRubrosVtaAcopio,
    getCombo: getCombo,
    getComboWeb: getComboWeb,
    getUltimaVta: getUltimaVta,
    AcopioCemento: AcopioCemento,
    StockNPOC_CalesCementosPlasticor: StockNPOC_CalesCementosPlasticor,
    ListaClientesPlataforma: ListaClientesPlataforma,
    ListaClientesPlataformaAcopios: ListaClientesPlataformaAcopios,
    ListaClientesPlataformaCtaCte:ListaClientesPlataformaCtaCte,
    TiposDeClientes: TiposDeClientes,
    PerfilCrediticio: PerfilCrediticio,
    NP_Problema_EI: NP_Problema_EI,
    InformesAcindarPTF: InformesAcindarPTF,
    NCInformesAcindarPTF: NCInformesAcindarPTF,
    InformesAcindarPTFDate: InformesAcindarPTFDate,
    NCInformesAcindarPTFDate: NCInformesAcindarPTFDate,
    getStocArtsAll: getStocArtsAll,
    getStocArtsClasif5: getStocArtsClasif5,
    getStocArtsClasif6: getStocArtsClasif6,
    getCheckQR: getCheckQR,
    ConsultaOrdenesCompraFechaUltRem: ConsultaOrdenesCompraFechaUltRem,
    ConsultaSaldosCtaCte: ConsultaSaldosCtaCte,
    ConsultasClientes: ConsultasClientes,
    ConsultaSaldosCtaCteRemito: ConsultaSaldosCtaCteRemito,
    gdc_consolidacion: gdc_consolidacion,
    gdc_itemsReclamadosAlProveedor: gdc_itemsReclamadosAlProveedor,
    gdc_itemsVinculadasAOC: gdc_itemsVinculadasAOC,
    getSQL_STOC_TIAR: getSQL_STOC_TIAR,
    getSQL_STOC_CA08: getSQL_STOC_CA08,
    getSQL_STOC_DPOS: getSQL_STOC_DPOS,
    getSQL_VENT_TCVE: getSQL_VENT_TCVE,
    getSQL_STOC_TCST: getSQL_STOC_TCST,
    getSQL_CPAG_RUBC: getSQL_CPAG_RUBC,
    gdc_itemreclamadosalproveedor: gdc_itemreclamadosalproveedor,
    gdc_getArtsDerivados: gdc_getArtsDerivados,
    gdc_itemsVinculadosAOC: gdc_itemsVinculadosAOC
  }